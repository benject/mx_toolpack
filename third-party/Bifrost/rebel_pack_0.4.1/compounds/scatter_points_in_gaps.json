{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///bifrost_object_i.json"
        },
        {
            "uri": "file:///bifrost_geometry_query_types.json"
        },
        {
            "uri": "file:///geometry_types.json"
        },
        {
            "uri": "file:///add_points_to_points.json"
        },
        {
            "uri": "file:///create_object_from_schema.json"
        },
        {
            "uri": "file:///validate_points.json"
        },
        {
            "uri": "file:///construct_points.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///riv_types.json"
        },
        {
            "uri": "file:///point_types.json"
        },
        {
            "uri": "file:///FCurve.json"
        },
        {
            "uri": "file:///riv_ops.json"
        },
        {
            "uri": "file:///Math_length_squared.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///Core_Array_sum_array_impl.json"
        },
        {
            "uri": "file:///Core_Array_sum_array.json"
        },
        {
            "uri": "file:///sample_closest_in_radius_accelerator.json"
        },
        {
            "uri": "file:///Math_array.json"
        },
        {
            "uri": "file:///half_of.json"
        },
        {
            "uri": "file:///increment_decrement.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///build_closest_accelerator.json"
        },
        {
            "uri": "file:///Core_Array_slice_array.json"
        },
        {
            "uri": "file:///CoreArrayOps.json"
        },
        {
            "uri": "file:///get_property_any.json"
        },
        {
            "uri": "file:///get_property.json"
        },
        {
            "uri": "file:///get_geo_property.json"
        },
        {
            "uri": "file:///get_geo_component_count.json"
        },
        {
            "uri": "file:///get_sub_object.json"
        },
        {
            "uri": "file:///get_point_count.json"
        },
        {
            "uri": "file:///get_mesh_structure.json"
        },
        {
            "uri": "file:///Core_Array_flatten_nested_array.json"
        },
        {
            "uri": "file:///get_point_position.json"
        },
        {
            "uri": "file:///Core_Array_empty_array.json"
        },
        {
            "uri": "file:///Core_Array_array_is_empty.json"
        },
        {
            "uri": "file:///jotun_rand.json"
        },
        {
            "uri": "file:///fluids_types.json"
        },
        {
            "uri": "file:///fluids_nodedefs.json"
        },
        {
            "uri": "file:///random_value.json"
        },
        {
            "uri": "file:///sample_closest_point_accelerator.json"
        },
        {
            "uri": "file:///sample_closest_accelerator.json"
        },
        {
            "uri": "file:///get_indexer_element.json"
        },
        {
            "uri": "file:///math_util.json"
        },
        {
            "uri": "file:///get_loc_element.json"
        },
        {
            "uri": "file:///invalid_index.json"
        },
        {
            "uri": "file:///get_mesh_geo_loc_data.json"
        },
        {
            "uri": "file:///Math_constants.json"
        },
        {
            "uri": "file:///max_weight.json"
        },
        {
            "uri": "file:///mesh_v_interp.json"
        },
        {
            "uri": "file:///is_a.json"
        },
        {
            "uri": "file:///is_a_range_geo_property.json"
        },
        {
            "uri": "file:///get_range_geo_property.json"
        },
        {
            "uri": "file:///mesh_fv_interp.json"
        },
        {
            "uri": "file:///mesh_f_interp.json"
        },
        {
            "uri": "file:///choose_mesh_values.json"
        },
        {
            "uri": "file:///has_property.json"
        },
        {
            "uri": "file:///get_point_geo_loc_data.json"
        },
        {
            "uri": "file:///point_p_interp.json"
        },
        {
            "uri": "file:///sample_volume_property.json"
        },
        {
            "uri": "file:///get_strands_structure.json"
        },
        {
            "uri": "file:///get_strand_geo_loc_data.json"
        },
        {
            "uri": "file:///Core_Constants_default_value.json"
        },
        {
            "uri": "file:///strand_p_interp.json"
        },
        {
            "uri": "file:///strand_s_interp.json"
        },
        {
            "uri": "file:///choose_strand_values.json"
        },
        {
            "uri": "file:///get_geo_schema_type.json"
        },
        {
            "uri": "file:///switch_is_a.json"
        },
        {
            "uri": "file:///sample_property.json"
        },
        {
            "uri": "file:///get_closest_locations.json"
        },
        {
            "uri": "file:///create_volume_geo_prop.json"
        },
        {
            "uri": "file:///is_a_mesh.json"
        },
        {
            "uri": "file:///is_a_strands.json"
        },
        {
            "uri": "file:///is_a_points.json"
        },
        {
            "uri": "file:///is_a_volume.json"
        },
        {
            "uri": "file:///get_target_component.json"
        },
        {
            "uri": "file:///create_data_geo_prop.json"
        },
        {
            "uri": "file:///set_property_any.json"
        },
        {
            "uri": "file:///set_property.json"
        },
        {
            "uri": "file:///set_geo_property.array.json"
        },
        {
            "uri": "file:///set_geo_property.scalar.json"
        },
        {
            "uri": "file:///CoreStringOps.json"
        },
        {
            "uri": "file:///get_geo_property_check.json"
        },
        {
            "uri": "file:///get_closest_point.json"
        },
        {
            "uri": "file:///volume_types.json"
        },
        {
            "uri": "file:///volume_nodedefs.json"
        },
        {
            "uri": "file:///get_geo_target_count.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///sample_interpreted_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///flatten_instance_selection.json"
        },
        {
            "uri": "file:///Math_quaternion_to_matrix.json"
        },
        {
            "uri": "file:///Math_compose_transform_matrix.json"
        },
        {
            "uri": "file:///get_geo_property_or_default.json"
        },
        {
            "uri": "file:///Math_quaternion_invert.json"
        },
        {
            "uri": "file:///Math_multiply_quaternions.json"
        },
        {
            "uri": "file:///Math_rotate_by_quaternion.json"
        },
        {
            "uri": "file:///points_to_transforms.json"
        },
        {
            "uri": "file:///get_property_keys.json"
        },
        {
            "uri": "file:///is_empty.json"
        },
        {
            "uri": "file:///Math_vector4_to_vector3.json"
        },
        {
            "uri": "file:///Math_quaternion_to_axis_angle.json"
        },
        {
            "uri": "file:///Math_matrix_to_quaternion.json"
        },
        {
            "uri": "file:///set_point_position.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_vector.json"
        },
        {
            "uri": "file:///translate_points.json"
        },
        {
            "uri": "file:///scale_points.json"
        },
        {
            "uri": "file:///Math_axis_angle_to_quaternion.json"
        },
        {
            "uri": "file:///rotate_points.json"
        },
        {
            "uri": "file:///Math_vector3_to_vector4.json"
        },
        {
            "uri": "file:///dump_object.json"
        },
        {
            "uri": "file:///Math_lerp_with_clamp.json"
        },
        {
            "uri": "file:///Math_nlerp.json"
        },
        {
            "uri": "file:///Math_quaternion_slerp.json"
        },
        {
            "uri": "file:///transform_points.json"
        },
        {
            "uri": "file:///merge_meshes.json"
        },
        {
            "uri": "file:///merge_points.json"
        },
        {
            "uri": "file:///merge_strands.json"
        },
        {
            "uri": "file:///merge_geometry.json"
        },
        {
            "uri": "file:///bake_instanced_geometry.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "Modeling::Points::scatter_points_in_gaps",
            "uriImported": "file:///scatter_points_in_gaps.json",
            "metadata": [
                {
                    "metaName": "documentation",
                    "metaType": "string",
                    "metaValue": "../docs/${language}/scatter_points_in_gaps.md"
                },
                {
                    "metaName": "icon",
                    "metaType": "string",
                    "metaValue": "../icons/rebelPackExperimental.svg"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Array,flatten_nested_array"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Logic,if"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Logic,greater"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Logic,less_or_equal"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Graph,compound"
                },
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "io_metadata",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "10 394"
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "mesh"
                                                },
                                                {
                                                    "metaName": "radius"
                                                },
                                                {
                                                    "metaName": "enable_mask"
                                                },
                                                {
                                                    "metaName": "mask"
                                                },
                                                {
                                                    "metaName": "invert_mask"
                                                },
                                                {
                                                    "metaName": "seed"
                                                },
                                                {
                                                    "metaName": "blocking_geometry"
                                                },
                                                {
                                                    "metaName": "blocking_geometry_extra_radius"
                                                },
                                                {
                                                    "metaName": "prefer_preview_geometry"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "io_metadata",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "3060 131"
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "points"
                                                },
                                                {
                                                    "metaName": "positions"
                                                },
                                                {
                                                    "metaName": "locations"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "UILayout",
                    "metaType": "string",
                    "metaValue": "{\n    \"NodeLayout\": {\n        \"hideUndeclaredPorts\": false,\n        \"items\": [\n            {\n                \"port\": \"mesh\"\n            },\n            {\n                \"port\": \"radius\"\n            },\n            {\n                \"port\": \"blocking_geometry\"\n            },\n            {\n                \"port\": \"blocking_geometry_extra_radius\"\n            },\n            {\n                \"expanded\": false,\n                \"group\": \"Mask\",\n                \"items\": [\n                    {\n                        \"port\": \"enable_mask\"\n                    },\n                    {\n                        \"port\": \"mask\"\n                    },\n                    {\n                        \"port\": \"invert_mask\"\n                    },\n                    {\n                        \"port\": \"alternate_mask_method\"\n                    }\n                ]\n            },\n            {\n                \"port\": \"seed\"\n            },\n            {\n                \"expanded\": false,\n                \"group\": \"Instance Geometry\",\n                \"items\": [\n                    {\n                        \"port\": \"prefer_preview_geometry\"\n                    }\n                ]\n            }\n        ]\n    }\n}\n"
                },
                {
                    "metaName": "PortExpandedState",
                    "metadata": [
                        {
                            "metaName": "Instance Geometry",
                            "metaType": "string",
                            "metaValue": "0"
                        }
                    ]
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "99.2038 -83.4344 1533.1 841.115"
                },
                {
                    "metaName": "DisplayMode",
                    "metaType": "string",
                    "metaValue": "2"
                },
                {
                    "metaName": "LayoutPos",
                    "metaType": "string",
                    "metaValue": "298.624 -94.4846"
                }
            ],
            "ports": [
                {
                    "portName": "mesh",
                    "portDirection": "input",
                    "portType": "Amino::Object"
                },
                {
                    "portName": "radius",
                    "portDirection": "input",
                    "portType": "float",
                    "portDefault": "1f"
                },
                {
                    "portName": "enable_mask",
                    "portDirection": "input",
                    "portType": "bool",
                    "portDefault": "false"
                },
                {
                    "portName": "mask",
                    "portDirection": "input",
                    "metadata": [
                        {
                            "metaName": "TypeWranglingSuggestedTypes",
                            "metaType": "string",
                            "metaValue": "float, string, Core::Fields::ScalarField, array<float>, array<long>"
                        }
                    ]
                },
                {
                    "portName": "invert_mask",
                    "portDirection": "input",
                    "portType": "bool",
                    "portDefault": "false"
                },
                {
                    "portName": "seed",
                    "portDirection": "input",
                    "portType": "long",
                    "portDefault": "10"
                },
                {
                    "portName": "blocking_geometry",
                    "portDirection": "input",
                    "portType": "array<Amino::Object>",
                    "isDefaultFanIn": "true"
                },
                {
                    "portName": "blocking_geometry_extra_radius",
                    "portDirection": "input",
                    "portType": "array<float>",
                    "isDefaultFanIn": "true"
                },
                {
                    "portName": "points",
                    "portDirection": "output"
                },
                {
                    "portName": "positions",
                    "portDirection": "output"
                },
                {
                    "portName": "locations",
                    "portDirection": "output"
                },
                {
                    "portName": "prefer_preview_geometry",
                    "portDirection": "input",
                    "portType": "bool",
                    "portDefault": "false"
                }
            ],
            "compounds": [
                {
                    "name": "weighted_sample_elimination",
                    "uriImported": "file:///scatter_points_in_gaps.json",
                    "metadata": [
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Diagnostic::Profiling,profiler_end"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Diagnostic::Profiling,profiler_start"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,half_of"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,add"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Logic,if"
                        },
                        {
                            "metaName": "ViewportRect",
                            "metaType": "string",
                            "metaValue": "-260.388 204.262 1186.53 650.969"
                        },
                        {
                            "metaName": "io_nodes",
                            "metadata": [
                                {
                                    "metaName": "io_inodes",
                                    "metadata": [
                                        {
                                            "metaName": "input",
                                            "metadata": [
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "points"
                                                        },
                                                        {
                                                            "metaName": "positions"
                                                        },
                                                        {
                                                            "metaName": "mask"
                                                        },
                                                        {
                                                            "metaName": "radius"
                                                        },
                                                        {
                                                            "metaName": "influence_limit"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "io_onodes",
                                    "metadata": [
                                        {
                                            "metaName": "output",
                                            "metadata": [
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "points_to_keep"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "backdrop",
                            "metadata": [
                                {
                                    "metaName": "type",
                                    "metaType": "string",
                                    "metaValue": "backdrop"
                                },
                                {
                                    "metaName": "text",
                                    "metaType": "string",
                                    "metaValue": "this algorithm is inspired by the paper \"Sample Elimination for Poisson Disk Sample Sets\":\nhttp://www.cemyuksel.com/research/sampleelimination/\n\nThe main change is that the weights are calcualted differently: Since our input is already\na valid poisson disk sample set, we just need to remove the points that contribute too much\n\"color\" to the output. For that we use a simple inverse square falloff, meaning a point that's\ntwice as far away only contributes a quarter of the weight."
                                },
                                {
                                    "metaName": "coords",
                                    "metaType": "string",
                                    "metaValue": "610 62 1759.19 662.116"
                                }
                            ]
                        }
                    ],
                    "ports": [
                        {
                            "portName": "points",
                            "portDirection": "input",
                            "portType": "Amino::Object"
                        },
                        {
                            "portName": "positions",
                            "portDirection": "input"
                        },
                        {
                            "portName": "mask",
                            "portDirection": "input"
                        },
                        {
                            "portName": "radius",
                            "portDirection": "input"
                        },
                        {
                            "portName": "influence_limit",
                            "portDirection": "input"
                        },
                        {
                            "portName": "points_to_keep",
                            "portDirection": "output"
                        }
                    ],
                    "compounds": [
                        {
                            "name": "calculate_initial_weights",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                },
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                },
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Math,subtract"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Math,max"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::FCurve,evaluate_fcurve"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Constants,float"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Math,multiply"
                                },
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "-599 -406 1199 812"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "current_index"
                                                                },
                                                                {
                                                                    "metaName": "my_position"
                                                                },
                                                                {
                                                                    "metaName": "positions"
                                                                },
                                                                {
                                                                    "metaName": "sample_radius"
                                                                },
                                                                {
                                                                    "metaName": "accelerator"
                                                                },
                                                                {
                                                                    "metaName": "rmin_squared"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "point_weights"
                                                                },
                                                                {
                                                                    "metaName": "individual_contributions"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "current_index",
                                    "portDirection": "input",
                                    "portType": "long",
                                    "portIterationCounter": "true"
                                },
                                {
                                    "portName": "my_position",
                                    "portDirection": "input",
                                    "portIterationTarget": "true"
                                },
                                {
                                    "portName": "positions",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "sample_radius",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "accelerator",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "rmin_squared",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "point_weights",
                                    "portDirection": "output",
                                    "portIterationTarget": "true"
                                },
                                {
                                    "portName": "individual_contributions",
                                    "portDirection": "output",
                                    "portIterationTarget": "true"
                                }
                            ],
                            "compounds": [
                                {
                                    "name": "weight_contribution",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,sum_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Conversion,scalar_to_vector2"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,divide"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,max"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "-599 -406 1199 812"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "value"
                                                                        },
                                                                        {
                                                                            "metaName": "my_position"
                                                                        },
                                                                        {
                                                                            "metaName": "rmin_squared"
                                                                        },
                                                                        {
                                                                            "metaName": "positions"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "weight"
                                                                        },
                                                                        {
                                                                            "metaName": "sum"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "value",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "my_position",
                                            "portDirection": "input",
                                            "portType": "Math::float3"
                                        },
                                        {
                                            "portName": "rmin_squared",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "positions",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "weight",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "sum",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "subtract",
                                            "nodeType": "Core::Math::subtract",
                                            "multiInPortNames": [
                                                "value",
                                                "output1"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 228"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "length_squared",
                                            "nodeType": "Core::Math::length_squared",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 208"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "max",
                                            "nodeType": "Core::Math::max",
                                            "multiInPortNames": [
                                                "length_squared",
                                                "rmin_squared"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 262"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "divide",
                                            "nodeType": "Core::Math::divide",
                                            "multiInPortNames": [
                                                "rmin_squared",
                                                "maximum"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 177"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "get_from_array",
                                            "nodeType": "Core::Array::get_from_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 203"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "scalar_to_vector2",
                                            "nodeType": "Core::Conversion::scalar_to_vector2",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1840 9"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "sum_array",
                                            "nodeType": "Core::Array::sum_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1840 228"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "subtract.output",
                                            "target": "length_squared.vector"
                                        },
                                        {
                                            "source": "length_squared.length_squared",
                                            "target": "max.first.length_squared"
                                        },
                                        {
                                            "source": "max.maximum",
                                            "target": "divide.first.maximum"
                                        },
                                        {
                                            "source": "divide.output",
                                            "target": "scalar_to_vector2.y"
                                        },
                                        {
                                            "source": "divide.output",
                                            "target": "sum_array.array"
                                        },
                                        {
                                            "source": "get_from_array.value",
                                            "target": "subtract.first.value"
                                        },
                                        {
                                            "source": "scalar_to_vector2.vector2",
                                            "target": ".weight"
                                        },
                                        {
                                            "source": "sum_array.sum",
                                            "target": ".sum"
                                        },
                                        {
                                            "source": ".value",
                                            "target": "get_from_array.index"
                                        },
                                        {
                                            "source": ".value",
                                            "target": "scalar_to_vector2.x"
                                        },
                                        {
                                            "source": ".my_position",
                                            "target": "subtract.first.output1"
                                        },
                                        {
                                            "source": ".rmin_squared",
                                            "target": "max.first.rmin_squared"
                                        },
                                        {
                                            "source": ".rmin_squared",
                                            "target": "divide.first.rmin_squared"
                                        },
                                        {
                                            "source": ".positions",
                                            "target": "get_from_array.array"
                                        }
                                    ],
                                    "values": []
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "weight_contribution",
                                    "nodeType": "weight_contribution",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 298"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "sample_closest_in_radius_accelerator",
                                    "nodeType": "Geometry::Query::sample_closest_in_radius_accelerator",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 9"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "subtract3",
                                    "nodeType": "Core::Math::subtract",
                                    "multiInPortNames": [
                                        "sum",
                                        "output1"
                                    ],
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 160"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "value4",
                                    "valueType": "float",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 103"
                                        },
                                        {
                                            "metaName": "valuenode_defaultvalue",
                                            "metaType": "string",
                                            "metaValue": "0.99999"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "weight_contribution.weight",
                                    "target": ".individual_contributions"
                                },
                                {
                                    "source": "weight_contribution.sum",
                                    "target": "subtract3.first.sum"
                                },
                                {
                                    "source": "sample_closest_in_radius_accelerator.point_index",
                                    "target": "weight_contribution.value"
                                },
                                {
                                    "source": "subtract3.output",
                                    "target": ".point_weights"
                                },
                                {
                                    "source": "value4.output",
                                    "target": "subtract3.first.output1"
                                },
                                {
                                    "source": ".my_position",
                                    "target": "weight_contribution.my_position"
                                },
                                {
                                    "source": ".my_position",
                                    "target": "sample_closest_in_radius_accelerator.position"
                                },
                                {
                                    "source": ".positions",
                                    "target": "weight_contribution.positions"
                                },
                                {
                                    "source": ".sample_radius",
                                    "target": "sample_closest_in_radius_accelerator.radius"
                                },
                                {
                                    "source": ".accelerator",
                                    "target": "sample_closest_in_radius_accelerator.accelerator"
                                },
                                {
                                    "source": ".rmin_squared",
                                    "target": "weight_contribution.rmin_squared"
                                }
                            ],
                            "values": [
                                {
                                    "valueName": "weight_contribution.rmin_squared",
                                    "valueType": "float",
                                    "value": "0f"
                                },
                                {
                                    "valueName": "sample_closest_in_radius_accelerator.enable_max_number",
                                    "valueType": "bool",
                                    "value": "false"
                                },
                                {
                                    "valueName": "sample_closest_in_radius_accelerator.max_number",
                                    "valueType": "long",
                                    "value": "50"
                                },
                                {
                                    "valueName": "value4.value",
                                    "valueType": "float",
                                    "value": "0.999989986f"
                                }
                            ],
                            "forEachCompound": {
                                "ports": [],
                                "grainSize": "1"
                            }
                        },
                        {
                            "name": "heap_add_positions",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Conversion,scalar_to_vector3"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Iterators,for_each"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Array,array_size"
                                },
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "16.9334 -321.553 2157.17 1460.9"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "vector2"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "out_array"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "vector2",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "out_array",
                                    "portDirection": "output"
                                }
                            ],
                            "compounds": [
                                {
                                    "name": "iterate",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Conversion,scalar_to_vector3"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Conversion,vector3_to_scalar"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "980.433 -250.755 1089.46 737.819"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "long"
                                                                        },
                                                                        {
                                                                            "metaName": "heap"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "heap_plus_positions"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "long",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "heap",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "heap_plus_positions",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "set_in_array",
                                            "nodeType": "Core::Array::set_in_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 10"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "get_from_array",
                                            "nodeType": "Core::Array::get_from_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 125"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "vector3_to_scalar",
                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 60"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "scalar_to_vector3",
                                            "nodeType": "Core::Conversion::scalar_to_vector3",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 77"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "set_in_array.out_array",
                                            "target": ".heap_plus_positions"
                                        },
                                        {
                                            "source": "get_from_array.value",
                                            "target": "vector3_to_scalar.vector3"
                                        },
                                        {
                                            "source": "vector3_to_scalar.x",
                                            "target": "scalar_to_vector3.x"
                                        },
                                        {
                                            "source": "vector3_to_scalar.y",
                                            "target": "scalar_to_vector3.y"
                                        },
                                        {
                                            "source": "scalar_to_vector3.vector3",
                                            "target": "set_in_array.value"
                                        },
                                        {
                                            "source": ".current_index",
                                            "target": "scalar_to_vector3.z"
                                        },
                                        {
                                            "source": ".long",
                                            "target": "get_from_array.index"
                                        },
                                        {
                                            "source": ".long",
                                            "target": "set_in_array.index"
                                        },
                                        {
                                            "source": ".heap",
                                            "target": "get_from_array.array"
                                        },
                                        {
                                            "source": ".heap",
                                            "target": "set_in_array.array"
                                        }
                                    ],
                                    "values": [],
                                    "iterateCompound": {
                                        "ports": [
                                            {
                                                "portKind": "state",
                                                "inputPortName": "heap",
                                                "outputPortName": "heap_plus_positions"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "to_long",
                                    "nodeType": "Core::Type_Conversion::to_long",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "585 202"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "vector2_to_scalar",
                                    "nodeType": "Core::Conversion::vector2_to_scalar",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "290 312"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "scalar_to_vector3",
                                    "nodeType": "Core::Conversion::scalar_to_vector3",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "611 404"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "iterate",
                                    "nodeType": "iterate",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "904 363"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "to_long.long",
                                    "target": "iterate.long"
                                },
                                {
                                    "source": "vector2_to_scalar.x",
                                    "target": "scalar_to_vector3.x"
                                },
                                {
                                    "source": "vector2_to_scalar.y",
                                    "target": "to_long.from"
                                },
                                {
                                    "source": "vector2_to_scalar.y",
                                    "target": "scalar_to_vector3.y"
                                },
                                {
                                    "source": "scalar_to_vector3.vector3",
                                    "target": "iterate.heap"
                                },
                                {
                                    "source": "iterate.heap_plus_positions",
                                    "target": ".out_array"
                                },
                                {
                                    "source": ".vector2",
                                    "target": "vector2_to_scalar.vector2"
                                }
                            ],
                            "values": []
                        },
                        {
                            "name": "make_heap",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Logic,less"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Math,half_of"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Iterators,do_while"
                                },
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "184.199 -341.227 1750.77 1128"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "weights"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "vector2"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "weights",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "vector2",
                                    "portDirection": "output"
                                }
                            ],
                            "compounds": [
                                {
                                    "name": "iterate",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "-722 -465 1445 931"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "max_iterations"
                                                                        },
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "vector2"
                                                                        },
                                                                        {
                                                                            "metaName": "size"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "out_heap"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "max_iterations",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationLimit": "true"
                                        },
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "vector2",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "size",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "out_heap",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compounds": [
                                        {
                                            "name": "move_down",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,and"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,less"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Conversion,vector2_to_scalar"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "938.369 -192.403 2264.22 1458.82"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "index"
                                                                                },
                                                                                {
                                                                                    "metaName": "in_partial_heap"
                                                                                },
                                                                                {
                                                                                    "metaName": "size"
                                                                                },
                                                                                {
                                                                                    "metaName": "half_size"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "looping_condition"
                                                                                },
                                                                                {
                                                                                    "metaName": "child_index"
                                                                                },
                                                                                {
                                                                                    "metaName": "output"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "index",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "in_partial_heap",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "size",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "half_size",
                                                    "portDirection": "input",
                                                    "portType": "long"
                                                },
                                                {
                                                    "portName": "child_index",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "output",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "get_from_array",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2145 325"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "multiply",
                                                    "nodeType": "Core::Math::multiply",
                                                    "multiInPortNames": [
                                                        "output1",
                                                        "output2"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 156"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "value",
                                                    "valueType": "long",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "10 204"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "increment",
                                                    "nodeType": "Core::Math::increment",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 272"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "increment1",
                                                    "nodeType": "Core::Math::increment",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 13"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "less",
                                                    "nodeType": "Core::Logic::less",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 115"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array1",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 582"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array2",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 363"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "vector2_to_scalar",
                                                    "nodeType": "Core::Conversion::vector2_to_scalar",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 195"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "vector2_to_scalar1",
                                                    "nodeType": "Core::Conversion::vector2_to_scalar",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 414"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "less1",
                                                    "nodeType": "Core::Logic::less",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 334"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "and",
                                                    "nodeType": "Core::Logic::and",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1840 245"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "if",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2145 544"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "if1",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2145 82"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "less2",
                                                    "nodeType": "Core::Logic::less",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2755 229"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "vector2_to_scalar2",
                                                    "nodeType": "Core::Conversion::vector2_to_scalar",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2450 47"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "if2",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "3060 417"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "set_in_array",
                                                    "nodeType": "Core::Array::set_in_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2450 525"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "set_in_array1",
                                                    "nodeType": "Core::Array::set_in_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2755 488"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "vector2_to_scalar3",
                                                    "nodeType": "Core::Conversion::vector2_to_scalar",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2450 266"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "less3",
                                                    "nodeType": "Core::Logic::less",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2755 10"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "and1",
                                                    "nodeType": "Core::Logic::and",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "3060 158"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": "vector2_to_scalar2.vector2"
                                                },
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": "set_in_array.value"
                                                },
                                                {
                                                    "source": "multiply.output",
                                                    "target": "increment.value"
                                                },
                                                {
                                                    "source": "multiply.output",
                                                    "target": "increment1.value"
                                                },
                                                {
                                                    "source": "value.output",
                                                    "target": "multiply.first.output2"
                                                },
                                                {
                                                    "source": "increment.output",
                                                    "target": "get_from_array2.index"
                                                },
                                                {
                                                    "source": "increment.output",
                                                    "target": "if1.false_case"
                                                },
                                                {
                                                    "source": "increment1.output",
                                                    "target": "less.first"
                                                },
                                                {
                                                    "source": "increment1.output",
                                                    "target": "get_from_array1.index"
                                                },
                                                {
                                                    "source": "increment1.output",
                                                    "target": "if1.true_case"
                                                },
                                                {
                                                    "source": "less.output",
                                                    "target": "and.first"
                                                },
                                                {
                                                    "source": "get_from_array1.value",
                                                    "target": "vector2_to_scalar1.vector2"
                                                },
                                                {
                                                    "source": "get_from_array1.value",
                                                    "target": "if.true_case"
                                                },
                                                {
                                                    "source": "get_from_array2.value",
                                                    "target": "vector2_to_scalar.vector2"
                                                },
                                                {
                                                    "source": "get_from_array2.value",
                                                    "target": "if.false_case"
                                                },
                                                {
                                                    "source": "vector2_to_scalar.x",
                                                    "target": "less1.first"
                                                },
                                                {
                                                    "source": "vector2_to_scalar1.x",
                                                    "target": "less1.second"
                                                },
                                                {
                                                    "source": "less1.output",
                                                    "target": "and.second"
                                                },
                                                {
                                                    "source": "and.output",
                                                    "target": "if.condition"
                                                },
                                                {
                                                    "source": "and.output",
                                                    "target": "if1.condition"
                                                },
                                                {
                                                    "source": "if.output",
                                                    "target": "vector2_to_scalar3.vector2"
                                                },
                                                {
                                                    "source": "if.output",
                                                    "target": "set_in_array1.value"
                                                },
                                                {
                                                    "source": "if1.output",
                                                    "target": "set_in_array.index"
                                                },
                                                {
                                                    "source": "if1.output",
                                                    "target": ".child_index"
                                                },
                                                {
                                                    "source": "if1.output",
                                                    "target": "less3.first"
                                                },
                                                {
                                                    "source": "less2.output",
                                                    "target": "if2.condition"
                                                },
                                                {
                                                    "source": "less2.output",
                                                    "target": "and1.first"
                                                },
                                                {
                                                    "source": "vector2_to_scalar2.x",
                                                    "target": "less2.first"
                                                },
                                                {
                                                    "source": "if2.output",
                                                    "target": ".output"
                                                },
                                                {
                                                    "source": "set_in_array.out_array",
                                                    "target": "set_in_array1.array"
                                                },
                                                {
                                                    "source": "set_in_array1.out_array",
                                                    "target": "if2.true_case"
                                                },
                                                {
                                                    "source": "vector2_to_scalar3.x",
                                                    "target": "less2.second"
                                                },
                                                {
                                                    "source": "less3.output",
                                                    "target": "and1.second"
                                                },
                                                {
                                                    "source": "and1.output",
                                                    "target": ".looping_condition"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "multiply.first.output1"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "get_from_array.index"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "set_in_array1.index"
                                                },
                                                {
                                                    "source": ".in_partial_heap",
                                                    "target": "get_from_array.array"
                                                },
                                                {
                                                    "source": ".in_partial_heap",
                                                    "target": "get_from_array1.array"
                                                },
                                                {
                                                    "source": ".in_partial_heap",
                                                    "target": "get_from_array2.array"
                                                },
                                                {
                                                    "source": ".in_partial_heap",
                                                    "target": "set_in_array.array"
                                                },
                                                {
                                                    "source": ".in_partial_heap",
                                                    "target": "if2.false_case"
                                                },
                                                {
                                                    "source": ".size",
                                                    "target": "less.second"
                                                },
                                                {
                                                    "source": ".half_size",
                                                    "target": "less3.second"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "value.value",
                                                    "valueType": "long",
                                                    "value": "2"
                                                },
                                                {
                                                    "valueName": "increment.by",
                                                    "valueType": "char",
                                                    "value": "1"
                                                },
                                                {
                                                    "valueName": "increment1.by",
                                                    "valueType": "char",
                                                    "value": "2"
                                                }
                                            ],
                                            "whileCompound": {
                                                "ports": [
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "index",
                                                        "outputPortName": "child_index"
                                                    },
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "in_partial_heap",
                                                        "outputPortName": "output"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "move_down",
                                            "nodeType": "move_down",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "-84 -169"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "subtract",
                                            "nodeType": "Core::Math::subtract",
                                            "multiInPortNames": [
                                                "max_iterations",
                                                "current_index"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "-386 -141"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "move_down.output",
                                            "target": ".out_heap"
                                        },
                                        {
                                            "source": "subtract.output",
                                            "target": "move_down.index"
                                        },
                                        {
                                            "source": ".max_iterations",
                                            "target": "subtract.first.max_iterations"
                                        },
                                        {
                                            "source": ".max_iterations",
                                            "target": "move_down.half_size"
                                        },
                                        {
                                            "source": ".current_index",
                                            "target": "subtract.first.current_index"
                                        },
                                        {
                                            "source": ".vector2",
                                            "target": "move_down.in_partial_heap"
                                        },
                                        {
                                            "source": ".size",
                                            "target": "move_down.size"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "move_down.half_size",
                                            "valueType": "long",
                                            "value": "10"
                                        }
                                    ],
                                    "iterateCompound": {
                                        "ports": [
                                            {
                                                "portKind": "state",
                                                "inputPortName": "vector2",
                                                "outputPortName": "out_heap"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "scalar_to_vector2",
                                    "nodeType": "Core::Conversion::scalar_to_vector2",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 146"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "sequence_array",
                                    "nodeType": "Core::Array::sequence_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 255"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "array_size",
                                    "nodeType": "Core::Array::array_size",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 357"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "half_of",
                                    "nodeType": "Core::Math::half_of",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 365"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "less",
                                    "nodeType": "Core::Logic::less",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1230 9"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "if",
                                    "nodeType": "Core::Logic::if",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1535 120"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "iterate",
                                    "nodeType": "iterate",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1230 268"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "scalar_to_vector2.vector2",
                                    "target": "if.true_case"
                                },
                                {
                                    "source": "scalar_to_vector2.vector2",
                                    "target": "iterate.vector2"
                                },
                                {
                                    "source": "sequence_array.sequence",
                                    "target": "scalar_to_vector2.y"
                                },
                                {
                                    "source": "array_size.size",
                                    "target": "sequence_array.size"
                                },
                                {
                                    "source": "array_size.size",
                                    "target": "half_of.value"
                                },
                                {
                                    "source": "array_size.size",
                                    "target": "less.first"
                                },
                                {
                                    "source": "array_size.size",
                                    "target": "iterate.size"
                                },
                                {
                                    "source": "half_of.half_value",
                                    "target": "iterate.max_iterations"
                                },
                                {
                                    "source": "less.output",
                                    "target": "if.condition"
                                },
                                {
                                    "source": "if.output",
                                    "target": ".vector2"
                                },
                                {
                                    "source": "iterate.out_heap",
                                    "target": "if.false_case"
                                },
                                {
                                    "source": ".weights",
                                    "target": "scalar_to_vector2.x"
                                },
                                {
                                    "source": ".weights",
                                    "target": "array_size.array"
                                }
                            ],
                            "values": [
                                {
                                    "valueName": "scalar_to_vector2.x",
                                    "valueType": "double",
                                    "value": "0"
                                },
                                {
                                    "valueName": "scalar_to_vector2.y",
                                    "valueType": "double",
                                    "value": "0"
                                },
                                {
                                    "valueName": "sequence_array.step",
                                    "valueType": "double",
                                    "value": "1"
                                },
                                {
                                    "valueName": "less.second",
                                    "valueType": "long",
                                    "value": "2"
                                },
                                {
                                    "valueName": "iterate.max_iterations",
                                    "valueType": "long",
                                    "value": "10"
                                },
                                {
                                    "valueName": "iterate.current_index",
                                    "valueType": "long",
                                    "value": "1"
                                }
                            ]
                        },
                        {
                            "name": "remove_top_heap_items",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                },
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                },
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Conversion,scalar_to_vector2"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Diagnostic::Profiling,profiler_end"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Diagnostic::Profiling,profiler_start"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                },
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "120.187 -247.021 1856.62 1257.36"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "current_index"
                                                                },
                                                                {
                                                                    "metaName": "individual_contributions"
                                                                },
                                                                {
                                                                    "metaName": "heap"
                                                                },
                                                                {
                                                                    "metaName": "heap_size"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "looping_condition"
                                                                },
                                                                {
                                                                    "metaName": "out_heap"
                                                                },
                                                                {
                                                                    "metaName": "new_heap_size"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "current_index",
                                    "portDirection": "input",
                                    "portType": "long",
                                    "portIterationCounter": "true"
                                },
                                {
                                    "portName": "individual_contributions",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "heap",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "heap_size",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "out_heap",
                                    "portDirection": "output"
                                },
                                {
                                    "portName": "new_heap_size",
                                    "portDirection": "output"
                                }
                            ],
                            "compounds": [
                                {
                                    "name": "pop_heap_with_positions",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,if"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Constants,float"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Object,get_property"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Graph,compound"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Object,set_property"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "-725.711 -454.572 1373.7 930.315"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "in_heap"
                                                                        },
                                                                        {
                                                                            "metaName": "heap_size"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "out_heap"
                                                                        },
                                                                        {
                                                                            "metaName": "top_value"
                                                                        },
                                                                        {
                                                                            "metaName": "top_index"
                                                                        },
                                                                        {
                                                                            "metaName": "new_heap_size"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "in_heap",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "heap_size",
                                            "portDirection": "input",
                                            "portType": "long"
                                        },
                                        {
                                            "portName": "out_heap",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "top_value",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "top_index",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "new_heap_size",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compounds": [
                                        {
                                            "name": "swap_indices",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Conversion,scalar_to_vector3"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Conversion,scalar_to_vector2"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Conversion,vector3_to_scalar"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "1298.34 -111.586 1652.32 1064.57"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "array"
                                                                                },
                                                                                {
                                                                                    "metaName": "first_index"
                                                                                },
                                                                                {
                                                                                    "metaName": "second_index"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "out_array"
                                                                                },
                                                                                {
                                                                                    "metaName": "first_value"
                                                                                },
                                                                                {
                                                                                    "metaName": "first_index1"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "array",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "first_index",
                                                    "portDirection": "input",
                                                    "portType": "long"
                                                },
                                                {
                                                    "portName": "second_index",
                                                    "portDirection": "input",
                                                    "portType": "long"
                                                },
                                                {
                                                    "portName": "out_array",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "first_value",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "first_index1",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compounds": [
                                                {
                                                    "name": "write_index",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "405.898 -358.088 1643.7 1059.02"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "array"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "which_index_to_update"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "new_position"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "out_array"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "array",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "which_index_to_update",
                                                            "portDirection": "input",
                                                            "portType": "long"
                                                        },
                                                        {
                                                            "portName": "new_position",
                                                            "portDirection": "input",
                                                            "portType": "long"
                                                        },
                                                        {
                                                            "portName": "out_array",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "get_from_array2",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 154"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "scalar_to_vector5",
                                                            "nodeType": "Core::Conversion::scalar_to_vector3",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 103"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "set_in_array2",
                                                            "nodeType": "Core::Array::set_in_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 9"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "vector3_to_scalar2",
                                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 86"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "get_from_array2.value",
                                                            "target": "vector3_to_scalar2.vector3"
                                                        },
                                                        {
                                                            "source": "scalar_to_vector5.vector3",
                                                            "target": "set_in_array2.value"
                                                        },
                                                        {
                                                            "source": "set_in_array2.out_array",
                                                            "target": ".out_array"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar2.x",
                                                            "target": "scalar_to_vector5.x"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar2.y",
                                                            "target": "scalar_to_vector5.y"
                                                        },
                                                        {
                                                            "source": ".array",
                                                            "target": "get_from_array2.array"
                                                        },
                                                        {
                                                            "source": ".array",
                                                            "target": "set_in_array2.array"
                                                        },
                                                        {
                                                            "source": ".which_index_to_update",
                                                            "target": "get_from_array2.index"
                                                        },
                                                        {
                                                            "source": ".which_index_to_update",
                                                            "target": "set_in_array2.index"
                                                        },
                                                        {
                                                            "source": ".new_position",
                                                            "target": "scalar_to_vector5.z"
                                                        }
                                                    ],
                                                    "values": []
                                                },
                                                {
                                                    "name": "write_index1",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "array"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "which_index_to_update"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "new_position"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "out_array"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "array",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "which_index_to_update",
                                                            "portDirection": "input",
                                                            "portType": "long"
                                                        },
                                                        {
                                                            "portName": "new_position",
                                                            "portDirection": "input",
                                                            "portType": "long"
                                                        },
                                                        {
                                                            "portName": "out_array",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "get_from_array2",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1859.86 372.727"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "scalar_to_vector5",
                                                            "nodeType": "Core::Conversion::scalar_to_vector3",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "2519.62 353.531"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "set_in_array2",
                                                            "nodeType": "Core::Array::set_in_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "2849.96 284.157"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "vector3_to_scalar2",
                                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "2208.06 293.418"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "get_from_array2.value",
                                                            "target": "vector3_to_scalar2.vector3"
                                                        },
                                                        {
                                                            "source": "scalar_to_vector5.vector3",
                                                            "target": "set_in_array2.value"
                                                        },
                                                        {
                                                            "source": "set_in_array2.out_array",
                                                            "target": ".out_array"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar2.x",
                                                            "target": "scalar_to_vector5.x"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar2.y",
                                                            "target": "scalar_to_vector5.y"
                                                        },
                                                        {
                                                            "source": ".array",
                                                            "target": "get_from_array2.array"
                                                        },
                                                        {
                                                            "source": ".array",
                                                            "target": "set_in_array2.array"
                                                        },
                                                        {
                                                            "source": ".which_index_to_update",
                                                            "target": "get_from_array2.index"
                                                        },
                                                        {
                                                            "source": ".which_index_to_update",
                                                            "target": "set_in_array2.index"
                                                        },
                                                        {
                                                            "source": ".new_position",
                                                            "target": "scalar_to_vector5.z"
                                                        }
                                                    ],
                                                    "values": []
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "get_from_array",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 210"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array1",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 429"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "set_in_array",
                                                    "nodeType": "Core::Array::set_in_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 9"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "set_in_array1",
                                                    "nodeType": "Core::Array::set_in_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 112"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "vector3_to_scalar",
                                                    "nodeType": "Core::Conversion::vector3_to_scalar",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 182"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "vector3_to_scalar1",
                                                    "nodeType": "Core::Conversion::vector3_to_scalar",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 425"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "scalar_to_vector3",
                                                    "nodeType": "Core::Conversion::scalar_to_vector3",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 292"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "scalar_to_vector4",
                                                    "nodeType": "Core::Conversion::scalar_to_vector3",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 76"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "to_long",
                                                    "nodeType": "Core::Type_Conversion::to_long",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 355"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "to_long1",
                                                    "nodeType": "Core::Type_Conversion::to_long",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1861.92 580.014"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "write_index",
                                                    "nodeType": "write_index",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1840 253"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "write_index1",
                                                    "nodeType": "write_index1",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2145 448"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": "vector3_to_scalar.vector3"
                                                },
                                                {
                                                    "source": "get_from_array1.value",
                                                    "target": "vector3_to_scalar1.vector3"
                                                },
                                                {
                                                    "source": "set_in_array.out_array",
                                                    "target": "set_in_array1.array"
                                                },
                                                {
                                                    "source": "set_in_array1.out_array",
                                                    "target": "write_index.array"
                                                },
                                                {
                                                    "source": "vector3_to_scalar.x",
                                                    "target": "scalar_to_vector4.x"
                                                },
                                                {
                                                    "source": "vector3_to_scalar.x",
                                                    "target": ".first_value"
                                                },
                                                {
                                                    "source": "vector3_to_scalar.y",
                                                    "target": "scalar_to_vector4.y"
                                                },
                                                {
                                                    "source": "vector3_to_scalar.y",
                                                    "target": "to_long.from"
                                                },
                                                {
                                                    "source": "vector3_to_scalar.z",
                                                    "target": "scalar_to_vector3.z"
                                                },
                                                {
                                                    "source": "vector3_to_scalar1.x",
                                                    "target": "scalar_to_vector3.x"
                                                },
                                                {
                                                    "source": "vector3_to_scalar1.y",
                                                    "target": "scalar_to_vector3.y"
                                                },
                                                {
                                                    "source": "vector3_to_scalar1.y",
                                                    "target": "to_long1.from"
                                                },
                                                {
                                                    "source": "vector3_to_scalar1.z",
                                                    "target": "scalar_to_vector4.z"
                                                },
                                                {
                                                    "source": "scalar_to_vector3.vector3",
                                                    "target": "set_in_array1.value"
                                                },
                                                {
                                                    "source": "scalar_to_vector4.vector3",
                                                    "target": "set_in_array.value"
                                                },
                                                {
                                                    "source": "to_long.long",
                                                    "target": "write_index.which_index_to_update"
                                                },
                                                {
                                                    "source": "to_long.long",
                                                    "target": ".first_index1"
                                                },
                                                {
                                                    "source": "to_long1.long",
                                                    "target": "write_index1.which_index_to_update"
                                                },
                                                {
                                                    "source": "write_index.out_array",
                                                    "target": "write_index1.array"
                                                },
                                                {
                                                    "source": "write_index1.out_array",
                                                    "target": ".out_array"
                                                },
                                                {
                                                    "source": ".array",
                                                    "target": "get_from_array.array"
                                                },
                                                {
                                                    "source": ".array",
                                                    "target": "get_from_array1.array"
                                                },
                                                {
                                                    "source": ".array",
                                                    "target": "set_in_array.array"
                                                },
                                                {
                                                    "source": ".first_index",
                                                    "target": "get_from_array.index"
                                                },
                                                {
                                                    "source": ".first_index",
                                                    "target": "set_in_array1.index"
                                                },
                                                {
                                                    "source": ".first_index",
                                                    "target": "write_index1.new_position"
                                                },
                                                {
                                                    "source": ".second_index",
                                                    "target": "get_from_array1.index"
                                                },
                                                {
                                                    "source": ".second_index",
                                                    "target": "set_in_array.index"
                                                },
                                                {
                                                    "source": ".second_index",
                                                    "target": "write_index.new_position"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "write_index.which_index_to_update",
                                                    "valueType": "long",
                                                    "value": "0"
                                                },
                                                {
                                                    "valueName": "write_index.new_position",
                                                    "valueType": "long",
                                                    "value": "0"
                                                },
                                                {
                                                    "valueName": "write_index1.which_index_to_update",
                                                    "valueType": "long",
                                                    "value": "0"
                                                },
                                                {
                                                    "valueName": "write_index1.new_position",
                                                    "valueType": "long",
                                                    "value": "0"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "move_down",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Conversion,vector3_to_scalar"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,greater"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Type_Conversion,to_long"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,and"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "182.249 -240.184 1512.95 974.779"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "index"
                                                                                },
                                                                                {
                                                                                    "metaName": "in_heap"
                                                                                },
                                                                                {
                                                                                    "metaName": "size"
                                                                                },
                                                                                {
                                                                                    "metaName": "half_size"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "looping_condition"
                                                                                },
                                                                                {
                                                                                    "metaName": "child_index"
                                                                                },
                                                                                {
                                                                                    "metaName": "out_heap"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "index",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "in_heap",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "size",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "half_size",
                                                    "portDirection": "input",
                                                    "portType": "long"
                                                },
                                                {
                                                    "portName": "child_index",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "out_heap",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compounds": [
                                                {
                                                    "name": "get_larger_child",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Conversion,vector3_to_scalar"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Logic,greater"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Type_Conversion,to_long"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Logic,and"
                                                        },
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "-122.463 -295.506 2061.63 1328.29"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "in_heap"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "index"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "size"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "larger_child_value"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "larger_child_index"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "in_heap",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "index",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "size",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "larger_child_value",
                                                            "portDirection": "output"
                                                        },
                                                        {
                                                            "portName": "larger_child_index",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "and",
                                                            "nodeType": "Core::Logic::and",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1840 259"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "get_from_array1",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 10"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "get_from_array2",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 269"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "greater",
                                                            "nodeType": "Core::Logic::greater",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1535 398"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "if",
                                                            "nodeType": "Core::Logic::if",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "2145 122"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "if1",
                                                            "nodeType": "Core::Logic::if",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "2145 365"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "increment",
                                                            "nodeType": "Core::Math::increment",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 373"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "increment1",
                                                            "nodeType": "Core::Math::increment",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 72"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "less",
                                                            "nodeType": "Core::Logic::less",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1535 179"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "multiply",
                                                            "nodeType": "Core::Math::multiply",
                                                            "multiInPortNames": [
                                                                "output1",
                                                                "output2"
                                                            ],
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 110"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "value",
                                                            "valueType": "long",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "10 277"
                                                                },
                                                                {
                                                                    "metaName": "valuenode_defaultvalue",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "vector3_to_scalar",
                                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 515"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "vector3_to_scalar1",
                                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 272"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "and.output",
                                                            "target": "if.condition"
                                                        },
                                                        {
                                                            "source": "and.output",
                                                            "target": "if1.condition"
                                                        },
                                                        {
                                                            "source": "get_from_array1.value",
                                                            "target": "if.true_case"
                                                        },
                                                        {
                                                            "source": "get_from_array1.value",
                                                            "target": "vector3_to_scalar1.vector3"
                                                        },
                                                        {
                                                            "source": "get_from_array2.value",
                                                            "target": "if.false_case"
                                                        },
                                                        {
                                                            "source": "get_from_array2.value",
                                                            "target": "vector3_to_scalar.vector3"
                                                        },
                                                        {
                                                            "source": "greater.output",
                                                            "target": "and.second"
                                                        },
                                                        {
                                                            "source": "if.output",
                                                            "target": ".larger_child_value"
                                                        },
                                                        {
                                                            "source": "if1.output",
                                                            "target": ".larger_child_index"
                                                        },
                                                        {
                                                            "source": "increment.output",
                                                            "target": "get_from_array2.index"
                                                        },
                                                        {
                                                            "source": "increment.output",
                                                            "target": "if1.false_case"
                                                        },
                                                        {
                                                            "source": "increment1.output",
                                                            "target": "get_from_array1.index"
                                                        },
                                                        {
                                                            "source": "increment1.output",
                                                            "target": "if1.true_case"
                                                        },
                                                        {
                                                            "source": "increment1.output",
                                                            "target": "less.first"
                                                        },
                                                        {
                                                            "source": "less.output",
                                                            "target": "and.first"
                                                        },
                                                        {
                                                            "source": "multiply.output",
                                                            "target": "increment.value"
                                                        },
                                                        {
                                                            "source": "multiply.output",
                                                            "target": "increment1.value"
                                                        },
                                                        {
                                                            "source": "value.output",
                                                            "target": "multiply.first.output2"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar.x",
                                                            "target": "greater.second"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar1.x",
                                                            "target": "greater.first"
                                                        },
                                                        {
                                                            "source": ".in_heap",
                                                            "target": "get_from_array1.array"
                                                        },
                                                        {
                                                            "source": ".in_heap",
                                                            "target": "get_from_array2.array"
                                                        },
                                                        {
                                                            "source": ".index",
                                                            "target": "multiply.first.output1"
                                                        },
                                                        {
                                                            "source": ".size",
                                                            "target": "less.second"
                                                        }
                                                    ],
                                                    "values": [
                                                        {
                                                            "valueName": "increment.by",
                                                            "valueType": "char",
                                                            "value": "1"
                                                        },
                                                        {
                                                            "valueName": "increment1.by",
                                                            "valueType": "char",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "valueName": "value.value",
                                                            "valueType": "long",
                                                            "value": "2"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "swap_indices",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Conversion,scalar_to_vector3"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Conversion,scalar_to_vector2"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Conversion,vector3_to_scalar"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                        },
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "910.611 -78.5044 1679.26 1081.93"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "array"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "first_index"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "second_index"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "out_array"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "array",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "first_index",
                                                            "portDirection": "input",
                                                            "portType": "long"
                                                        },
                                                        {
                                                            "portName": "second_index",
                                                            "portDirection": "input",
                                                            "portType": "long"
                                                        },
                                                        {
                                                            "portName": "out_array",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compounds": [
                                                        {
                                                            "name": "write_index",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "ViewportRect",
                                                                    "metaType": "string",
                                                                    "metaValue": "92.6283 -303.868 1511.08 973.574"
                                                                },
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "array"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "which_index_to_update"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "new_position"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "out_array"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "array",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "which_index_to_update",
                                                                    "portDirection": "input",
                                                                    "portType": "long"
                                                                },
                                                                {
                                                                    "portName": "new_position",
                                                                    "portDirection": "input",
                                                                    "portType": "long"
                                                                },
                                                                {
                                                                    "portName": "out_array",
                                                                    "portDirection": "output"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "get_from_array2",
                                                                    "nodeType": "Core::Array::get_from_array",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "315 154"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "scalar_to_vector5",
                                                                    "nodeType": "Core::Conversion::scalar_to_vector3",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "925 103"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "set_in_array2",
                                                                    "nodeType": "Core::Array::set_in_array",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "1230 9"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "vector3_to_scalar2",
                                                                    "nodeType": "Core::Conversion::vector3_to_scalar",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "620 86"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "get_from_array2.value",
                                                                    "target": "vector3_to_scalar2.vector3"
                                                                },
                                                                {
                                                                    "source": "scalar_to_vector5.vector3",
                                                                    "target": "set_in_array2.value"
                                                                },
                                                                {
                                                                    "source": "set_in_array2.out_array",
                                                                    "target": ".out_array"
                                                                },
                                                                {
                                                                    "source": "vector3_to_scalar2.x",
                                                                    "target": "scalar_to_vector5.x"
                                                                },
                                                                {
                                                                    "source": "vector3_to_scalar2.y",
                                                                    "target": "scalar_to_vector5.y"
                                                                },
                                                                {
                                                                    "source": ".array",
                                                                    "target": "get_from_array2.array"
                                                                },
                                                                {
                                                                    "source": ".array",
                                                                    "target": "set_in_array2.array"
                                                                },
                                                                {
                                                                    "source": ".which_index_to_update",
                                                                    "target": "get_from_array2.index"
                                                                },
                                                                {
                                                                    "source": ".which_index_to_update",
                                                                    "target": "set_in_array2.index"
                                                                },
                                                                {
                                                                    "source": ".new_position",
                                                                    "target": "scalar_to_vector5.z"
                                                                }
                                                            ],
                                                            "values": []
                                                        },
                                                        {
                                                            "name": "write_index1",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "array"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "which_index_to_update"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "new_position"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "out_array"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "array",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "which_index_to_update",
                                                                    "portDirection": "input",
                                                                    "portType": "long"
                                                                },
                                                                {
                                                                    "portName": "new_position",
                                                                    "portDirection": "input",
                                                                    "portType": "long"
                                                                },
                                                                {
                                                                    "portName": "out_array",
                                                                    "portDirection": "output"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "get_from_array2",
                                                                    "nodeType": "Core::Array::get_from_array",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "1859.86 372.727"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "scalar_to_vector5",
                                                                    "nodeType": "Core::Conversion::scalar_to_vector3",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "2519.62 353.531"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "set_in_array2",
                                                                    "nodeType": "Core::Array::set_in_array",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "2849.96 284.157"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "vector3_to_scalar2",
                                                                    "nodeType": "Core::Conversion::vector3_to_scalar",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "2208.06 293.418"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "get_from_array2.value",
                                                                    "target": "vector3_to_scalar2.vector3"
                                                                },
                                                                {
                                                                    "source": "scalar_to_vector5.vector3",
                                                                    "target": "set_in_array2.value"
                                                                },
                                                                {
                                                                    "source": "set_in_array2.out_array",
                                                                    "target": ".out_array"
                                                                },
                                                                {
                                                                    "source": "vector3_to_scalar2.x",
                                                                    "target": "scalar_to_vector5.x"
                                                                },
                                                                {
                                                                    "source": "vector3_to_scalar2.y",
                                                                    "target": "scalar_to_vector5.y"
                                                                },
                                                                {
                                                                    "source": ".array",
                                                                    "target": "get_from_array2.array"
                                                                },
                                                                {
                                                                    "source": ".array",
                                                                    "target": "set_in_array2.array"
                                                                },
                                                                {
                                                                    "source": ".which_index_to_update",
                                                                    "target": "get_from_array2.index"
                                                                },
                                                                {
                                                                    "source": ".which_index_to_update",
                                                                    "target": "set_in_array2.index"
                                                                },
                                                                {
                                                                    "source": ".new_position",
                                                                    "target": "scalar_to_vector5.z"
                                                                }
                                                            ],
                                                            "values": []
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "get_from_array",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 212"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "get_from_array1",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 431"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "set_in_array",
                                                            "nodeType": "Core::Array::set_in_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 9"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "set_in_array1",
                                                            "nodeType": "Core::Array::set_in_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1535 112"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "vector3_to_scalar",
                                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 182"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "vector3_to_scalar1",
                                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 425"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "scalar_to_vector3",
                                                            "nodeType": "Core::Conversion::scalar_to_vector3",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 292"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "scalar_to_vector4",
                                                            "nodeType": "Core::Conversion::scalar_to_vector3",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 77"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "to_long",
                                                            "nodeType": "Core::Type_Conversion::to_long",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1535 355"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "to_long1",
                                                            "nodeType": "Core::Type_Conversion::to_long",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1840 545"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "write_index",
                                                            "nodeType": "write_index",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1840 254"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "write_index1",
                                                            "nodeType": "write_index1",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "2145 448"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "get_from_array.value",
                                                            "target": "vector3_to_scalar.vector3"
                                                        },
                                                        {
                                                            "source": "get_from_array1.value",
                                                            "target": "vector3_to_scalar1.vector3"
                                                        },
                                                        {
                                                            "source": "set_in_array.out_array",
                                                            "target": "set_in_array1.array"
                                                        },
                                                        {
                                                            "source": "set_in_array1.out_array",
                                                            "target": "write_index.array"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar.x",
                                                            "target": "scalar_to_vector4.x"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar.y",
                                                            "target": "scalar_to_vector4.y"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar.y",
                                                            "target": "to_long.from"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar.z",
                                                            "target": "scalar_to_vector3.z"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar1.x",
                                                            "target": "scalar_to_vector3.x"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar1.y",
                                                            "target": "scalar_to_vector3.y"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar1.y",
                                                            "target": "to_long1.from"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar1.z",
                                                            "target": "scalar_to_vector4.z"
                                                        },
                                                        {
                                                            "source": "scalar_to_vector3.vector3",
                                                            "target": "set_in_array1.value"
                                                        },
                                                        {
                                                            "source": "scalar_to_vector4.vector3",
                                                            "target": "set_in_array.value"
                                                        },
                                                        {
                                                            "source": "to_long.long",
                                                            "target": "write_index.which_index_to_update"
                                                        },
                                                        {
                                                            "source": "to_long1.long",
                                                            "target": "write_index1.which_index_to_update"
                                                        },
                                                        {
                                                            "source": "write_index.out_array",
                                                            "target": "write_index1.array"
                                                        },
                                                        {
                                                            "source": "write_index1.out_array",
                                                            "target": ".out_array"
                                                        },
                                                        {
                                                            "source": ".array",
                                                            "target": "get_from_array.array"
                                                        },
                                                        {
                                                            "source": ".array",
                                                            "target": "get_from_array1.array"
                                                        },
                                                        {
                                                            "source": ".array",
                                                            "target": "set_in_array.array"
                                                        },
                                                        {
                                                            "source": ".first_index",
                                                            "target": "get_from_array.index"
                                                        },
                                                        {
                                                            "source": ".first_index",
                                                            "target": "set_in_array1.index"
                                                        },
                                                        {
                                                            "source": ".first_index",
                                                            "target": "write_index1.new_position"
                                                        },
                                                        {
                                                            "source": ".second_index",
                                                            "target": "get_from_array1.index"
                                                        },
                                                        {
                                                            "source": ".second_index",
                                                            "target": "set_in_array.index"
                                                        },
                                                        {
                                                            "source": ".second_index",
                                                            "target": "write_index.new_position"
                                                        }
                                                    ],
                                                    "values": [
                                                        {
                                                            "valueName": "write_index.which_index_to_update",
                                                            "valueType": "long",
                                                            "value": "0"
                                                        },
                                                        {
                                                            "valueName": "write_index.new_position",
                                                            "valueType": "long",
                                                            "value": "0"
                                                        },
                                                        {
                                                            "valueName": "write_index1.which_index_to_update",
                                                            "valueType": "long",
                                                            "value": "0"
                                                        },
                                                        {
                                                            "valueName": "write_index1.new_position",
                                                            "valueType": "long",
                                                            "value": "0"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "get_from_array",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 10"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "less2",
                                                    "nodeType": "Core::Logic::less",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 231"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "if2",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 431"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "less3",
                                                    "nodeType": "Core::Logic::less",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 12"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "and1",
                                                    "nodeType": "Core::Logic::and",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 172"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_larger_child",
                                                    "nodeType": "get_larger_child",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 229"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "vector3_to_scalar",
                                                    "nodeType": "Core::Conversion::vector3_to_scalar",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 41"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "vector3_to_scalar1",
                                                    "nodeType": "Core::Conversion::vector3_to_scalar",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 284"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "swap_indices",
                                                    "nodeType": "swap_indices",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 490"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": "vector3_to_scalar.vector3"
                                                },
                                                {
                                                    "source": "less2.output",
                                                    "target": "if2.condition"
                                                },
                                                {
                                                    "source": "less2.output",
                                                    "target": "and1.first"
                                                },
                                                {
                                                    "source": "if2.output",
                                                    "target": ".out_heap"
                                                },
                                                {
                                                    "source": "less3.output",
                                                    "target": "and1.second"
                                                },
                                                {
                                                    "source": "and1.output",
                                                    "target": ".looping_condition"
                                                },
                                                {
                                                    "source": "get_larger_child.larger_child_value",
                                                    "target": "vector3_to_scalar1.vector3"
                                                },
                                                {
                                                    "source": "get_larger_child.larger_child_index",
                                                    "target": ".child_index"
                                                },
                                                {
                                                    "source": "get_larger_child.larger_child_index",
                                                    "target": "less3.first"
                                                },
                                                {
                                                    "source": "get_larger_child.larger_child_index",
                                                    "target": "swap_indices.second_index"
                                                },
                                                {
                                                    "source": "vector3_to_scalar.x",
                                                    "target": "less2.first"
                                                },
                                                {
                                                    "source": "vector3_to_scalar1.x",
                                                    "target": "less2.second"
                                                },
                                                {
                                                    "source": "swap_indices.out_array",
                                                    "target": "if2.true_case"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "get_from_array.index"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "get_larger_child.index"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "swap_indices.first_index"
                                                },
                                                {
                                                    "source": ".in_heap",
                                                    "target": "get_from_array.array"
                                                },
                                                {
                                                    "source": ".in_heap",
                                                    "target": "if2.false_case"
                                                },
                                                {
                                                    "source": ".in_heap",
                                                    "target": "get_larger_child.in_heap"
                                                },
                                                {
                                                    "source": ".in_heap",
                                                    "target": "swap_indices.array"
                                                },
                                                {
                                                    "source": ".size",
                                                    "target": "get_larger_child.size"
                                                },
                                                {
                                                    "source": ".half_size",
                                                    "target": "less3.second"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "swap_indices.first_index",
                                                    "valueType": "long",
                                                    "value": "0"
                                                },
                                                {
                                                    "valueName": "swap_indices.second_index",
                                                    "valueType": "long",
                                                    "value": "0"
                                                }
                                            ],
                                            "whileCompound": {
                                                "ports": [
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "index",
                                                        "outputPortName": "child_index"
                                                    },
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "in_heap",
                                                        "outputPortName": "out_heap"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "half_of",
                                            "nodeType": "Core::Math::half_of",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 271"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "decrement",
                                            "nodeType": "Core::Math::decrement",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 341"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "swap_indices",
                                            "nodeType": "swap_indices",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 466"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "move_down",
                                            "nodeType": "move_down",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 268"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "less_or_equal",
                                            "nodeType": "Core::Logic::less_or_equal",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 9"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 293"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "half_of.half_value",
                                            "target": "move_down.half_size"
                                        },
                                        {
                                            "source": "decrement.output",
                                            "target": ".new_heap_size"
                                        },
                                        {
                                            "source": "decrement.output",
                                            "target": "half_of.value"
                                        },
                                        {
                                            "source": "decrement.output",
                                            "target": "swap_indices.second_index"
                                        },
                                        {
                                            "source": "decrement.output",
                                            "target": "move_down.size"
                                        },
                                        {
                                            "source": "swap_indices.out_array",
                                            "target": "move_down.in_heap"
                                        },
                                        {
                                            "source": "swap_indices.first_value",
                                            "target": ".top_value"
                                        },
                                        {
                                            "source": "swap_indices.first_index1",
                                            "target": ".top_index"
                                        },
                                        {
                                            "source": "move_down.out_heap",
                                            "target": "if.false_case"
                                        },
                                        {
                                            "source": "less_or_equal.output",
                                            "target": "if.condition"
                                        },
                                        {
                                            "source": "if.output",
                                            "target": ".out_heap"
                                        },
                                        {
                                            "source": ".in_heap",
                                            "target": "swap_indices.array"
                                        },
                                        {
                                            "source": ".in_heap",
                                            "target": "if.true_case"
                                        },
                                        {
                                            "source": ".heap_size",
                                            "target": "decrement.value"
                                        },
                                        {
                                            "source": ".heap_size",
                                            "target": "less_or_equal.first"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "decrement.by",
                                            "valueType": "char",
                                            "value": "1"
                                        },
                                        {
                                            "valueName": "swap_indices.first_index",
                                            "valueType": "long",
                                            "value": "0"
                                        },
                                        {
                                            "valueName": "swap_indices.second_index",
                                            "valueType": "long",
                                            "value": "0"
                                        },
                                        {
                                            "valueName": "move_down.half_size",
                                            "valueType": "long",
                                            "value": "10"
                                        },
                                        {
                                            "valueName": "less_or_equal.second",
                                            "valueType": "long",
                                            "value": "1"
                                        }
                                    ]
                                },
                                {
                                    "name": "update_neighboring_weights",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Type_Conversion,to_float"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Type_Conversion,to_long"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Conversion,vector2_to_scalar"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,subtract"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,if"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "-599.118 -406.214 1200.39 812.938"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "output"
                                                                        },
                                                                        {
                                                                            "metaName": "weights_heap"
                                                                        },
                                                                        {
                                                                            "metaName": "new_heap_size"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "out_heap"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "output",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "weights_heap",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "new_heap_size",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "out_heap",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compounds": [
                                        {
                                            "name": "move_down1",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Conversion,vector3_to_scalar"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,greater"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Type_Conversion,to_long"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,and"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "107.173 -198.529 1837.75 1184.04"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "index"
                                                                                },
                                                                                {
                                                                                    "metaName": "in_heap"
                                                                                },
                                                                                {
                                                                                    "metaName": "size"
                                                                                },
                                                                                {
                                                                                    "metaName": "half_size"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "looping_condition"
                                                                                },
                                                                                {
                                                                                    "metaName": "child_index"
                                                                                },
                                                                                {
                                                                                    "metaName": "out_heap"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "index",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "in_heap",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "size",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "half_size",
                                                    "portDirection": "input",
                                                    "portType": "long"
                                                },
                                                {
                                                    "portName": "child_index",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "out_heap",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compounds": [
                                                {
                                                    "name": "get_larger_child",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Conversion,vector3_to_scalar"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Logic,greater"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Type_Conversion,to_long"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Logic,and"
                                                        },
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "845.963 -114.978 1484.11 956.195"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "in_heap"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "index"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "size"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "larger_child_value"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "larger_child_index"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "in_heap",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "index",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "size",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "larger_child_value",
                                                            "portDirection": "output"
                                                        },
                                                        {
                                                            "portName": "larger_child_index",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "and",
                                                            "nodeType": "Core::Logic::and",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1840 259"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "get_from_array1",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 10"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "get_from_array2",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 269"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "greater",
                                                            "nodeType": "Core::Logic::greater",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1535 398"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "if",
                                                            "nodeType": "Core::Logic::if",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "2145 122"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "if1",
                                                            "nodeType": "Core::Logic::if",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "2145 365"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "increment",
                                                            "nodeType": "Core::Math::increment",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 373"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "increment1",
                                                            "nodeType": "Core::Math::increment",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 72"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "less",
                                                            "nodeType": "Core::Logic::less",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1535 179"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "multiply",
                                                            "nodeType": "Core::Math::multiply",
                                                            "multiInPortNames": [
                                                                "output1",
                                                                "output2"
                                                            ],
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 110"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "value",
                                                            "valueType": "long",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "10 277"
                                                                },
                                                                {
                                                                    "metaName": "valuenode_defaultvalue",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "vector3_to_scalar",
                                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 515"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "vector3_to_scalar1",
                                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 272"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "and.output",
                                                            "target": "if.condition"
                                                        },
                                                        {
                                                            "source": "and.output",
                                                            "target": "if1.condition"
                                                        },
                                                        {
                                                            "source": "get_from_array1.value",
                                                            "target": "if.true_case"
                                                        },
                                                        {
                                                            "source": "get_from_array1.value",
                                                            "target": "vector3_to_scalar1.vector3"
                                                        },
                                                        {
                                                            "source": "get_from_array2.value",
                                                            "target": "if.false_case"
                                                        },
                                                        {
                                                            "source": "get_from_array2.value",
                                                            "target": "vector3_to_scalar.vector3"
                                                        },
                                                        {
                                                            "source": "greater.output",
                                                            "target": "and.second"
                                                        },
                                                        {
                                                            "source": "if.output",
                                                            "target": ".larger_child_value"
                                                        },
                                                        {
                                                            "source": "if1.output",
                                                            "target": ".larger_child_index"
                                                        },
                                                        {
                                                            "source": "increment.output",
                                                            "target": "get_from_array2.index"
                                                        },
                                                        {
                                                            "source": "increment.output",
                                                            "target": "if1.false_case"
                                                        },
                                                        {
                                                            "source": "increment1.output",
                                                            "target": "get_from_array1.index"
                                                        },
                                                        {
                                                            "source": "increment1.output",
                                                            "target": "if1.true_case"
                                                        },
                                                        {
                                                            "source": "increment1.output",
                                                            "target": "less.first"
                                                        },
                                                        {
                                                            "source": "less.output",
                                                            "target": "and.first"
                                                        },
                                                        {
                                                            "source": "multiply.output",
                                                            "target": "increment.value"
                                                        },
                                                        {
                                                            "source": "multiply.output",
                                                            "target": "increment1.value"
                                                        },
                                                        {
                                                            "source": "value.output",
                                                            "target": "multiply.first.output2"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar.x",
                                                            "target": "greater.second"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar1.x",
                                                            "target": "greater.first"
                                                        },
                                                        {
                                                            "source": ".in_heap",
                                                            "target": "get_from_array1.array"
                                                        },
                                                        {
                                                            "source": ".in_heap",
                                                            "target": "get_from_array2.array"
                                                        },
                                                        {
                                                            "source": ".index",
                                                            "target": "multiply.first.output1"
                                                        },
                                                        {
                                                            "source": ".size",
                                                            "target": "less.second"
                                                        }
                                                    ],
                                                    "values": [
                                                        {
                                                            "valueName": "increment.by",
                                                            "valueType": "char",
                                                            "value": "1"
                                                        },
                                                        {
                                                            "valueName": "increment1.by",
                                                            "valueType": "char",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "valueName": "value.value",
                                                            "valueType": "long",
                                                            "value": "2"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "swap_indices",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Conversion,scalar_to_vector3"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Conversion,scalar_to_vector2"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Conversion,vector3_to_scalar"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                        },
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "910.611 -78.5044 1679.26 1081.93"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "array"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "first_index"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "second_index"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "out_array"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "array",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "first_index",
                                                            "portDirection": "input",
                                                            "portType": "long"
                                                        },
                                                        {
                                                            "portName": "second_index",
                                                            "portDirection": "input",
                                                            "portType": "long"
                                                        },
                                                        {
                                                            "portName": "out_array",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compounds": [
                                                        {
                                                            "name": "write_index",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "ViewportRect",
                                                                    "metaType": "string",
                                                                    "metaValue": "92.6283 -303.868 1511.08 973.574"
                                                                },
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "array"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "which_index_to_update"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "new_position"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "out_array"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "array",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "which_index_to_update",
                                                                    "portDirection": "input",
                                                                    "portType": "long"
                                                                },
                                                                {
                                                                    "portName": "new_position",
                                                                    "portDirection": "input",
                                                                    "portType": "long"
                                                                },
                                                                {
                                                                    "portName": "out_array",
                                                                    "portDirection": "output"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "get_from_array2",
                                                                    "nodeType": "Core::Array::get_from_array",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "315 154"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "scalar_to_vector5",
                                                                    "nodeType": "Core::Conversion::scalar_to_vector3",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "925 103"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "set_in_array2",
                                                                    "nodeType": "Core::Array::set_in_array",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "1230 9"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "vector3_to_scalar2",
                                                                    "nodeType": "Core::Conversion::vector3_to_scalar",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "620 86"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "get_from_array2.value",
                                                                    "target": "vector3_to_scalar2.vector3"
                                                                },
                                                                {
                                                                    "source": "scalar_to_vector5.vector3",
                                                                    "target": "set_in_array2.value"
                                                                },
                                                                {
                                                                    "source": "set_in_array2.out_array",
                                                                    "target": ".out_array"
                                                                },
                                                                {
                                                                    "source": "vector3_to_scalar2.x",
                                                                    "target": "scalar_to_vector5.x"
                                                                },
                                                                {
                                                                    "source": "vector3_to_scalar2.y",
                                                                    "target": "scalar_to_vector5.y"
                                                                },
                                                                {
                                                                    "source": ".array",
                                                                    "target": "get_from_array2.array"
                                                                },
                                                                {
                                                                    "source": ".array",
                                                                    "target": "set_in_array2.array"
                                                                },
                                                                {
                                                                    "source": ".which_index_to_update",
                                                                    "target": "get_from_array2.index"
                                                                },
                                                                {
                                                                    "source": ".which_index_to_update",
                                                                    "target": "set_in_array2.index"
                                                                },
                                                                {
                                                                    "source": ".new_position",
                                                                    "target": "scalar_to_vector5.z"
                                                                }
                                                            ],
                                                            "values": []
                                                        },
                                                        {
                                                            "name": "write_index1",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "array"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "which_index_to_update"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "new_position"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "out_array"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "array",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "which_index_to_update",
                                                                    "portDirection": "input",
                                                                    "portType": "long"
                                                                },
                                                                {
                                                                    "portName": "new_position",
                                                                    "portDirection": "input",
                                                                    "portType": "long"
                                                                },
                                                                {
                                                                    "portName": "out_array",
                                                                    "portDirection": "output"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "get_from_array2",
                                                                    "nodeType": "Core::Array::get_from_array",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "1859.86 372.727"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "scalar_to_vector5",
                                                                    "nodeType": "Core::Conversion::scalar_to_vector3",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "2519.62 353.531"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "set_in_array2",
                                                                    "nodeType": "Core::Array::set_in_array",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "2849.96 284.157"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "vector3_to_scalar2",
                                                                    "nodeType": "Core::Conversion::vector3_to_scalar",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "2208.06 293.418"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "get_from_array2.value",
                                                                    "target": "vector3_to_scalar2.vector3"
                                                                },
                                                                {
                                                                    "source": "scalar_to_vector5.vector3",
                                                                    "target": "set_in_array2.value"
                                                                },
                                                                {
                                                                    "source": "set_in_array2.out_array",
                                                                    "target": ".out_array"
                                                                },
                                                                {
                                                                    "source": "vector3_to_scalar2.x",
                                                                    "target": "scalar_to_vector5.x"
                                                                },
                                                                {
                                                                    "source": "vector3_to_scalar2.y",
                                                                    "target": "scalar_to_vector5.y"
                                                                },
                                                                {
                                                                    "source": ".array",
                                                                    "target": "get_from_array2.array"
                                                                },
                                                                {
                                                                    "source": ".array",
                                                                    "target": "set_in_array2.array"
                                                                },
                                                                {
                                                                    "source": ".which_index_to_update",
                                                                    "target": "get_from_array2.index"
                                                                },
                                                                {
                                                                    "source": ".which_index_to_update",
                                                                    "target": "set_in_array2.index"
                                                                },
                                                                {
                                                                    "source": ".new_position",
                                                                    "target": "scalar_to_vector5.z"
                                                                }
                                                            ],
                                                            "values": []
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "get_from_array",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 212"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "get_from_array1",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 431"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "set_in_array",
                                                            "nodeType": "Core::Array::set_in_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 9"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "set_in_array1",
                                                            "nodeType": "Core::Array::set_in_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1535 112"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "vector3_to_scalar",
                                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 182"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "vector3_to_scalar1",
                                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 425"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "scalar_to_vector3",
                                                            "nodeType": "Core::Conversion::scalar_to_vector3",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 292"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "scalar_to_vector4",
                                                            "nodeType": "Core::Conversion::scalar_to_vector3",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 77"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "to_long",
                                                            "nodeType": "Core::Type_Conversion::to_long",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1535 355"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "to_long1",
                                                            "nodeType": "Core::Type_Conversion::to_long",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1840 545"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "write_index",
                                                            "nodeType": "write_index",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1840 254"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "write_index1",
                                                            "nodeType": "write_index1",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "2145 448"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "get_from_array.value",
                                                            "target": "vector3_to_scalar.vector3"
                                                        },
                                                        {
                                                            "source": "get_from_array1.value",
                                                            "target": "vector3_to_scalar1.vector3"
                                                        },
                                                        {
                                                            "source": "set_in_array.out_array",
                                                            "target": "set_in_array1.array"
                                                        },
                                                        {
                                                            "source": "set_in_array1.out_array",
                                                            "target": "write_index.array"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar.x",
                                                            "target": "scalar_to_vector4.x"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar.y",
                                                            "target": "scalar_to_vector4.y"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar.y",
                                                            "target": "to_long.from"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar.z",
                                                            "target": "scalar_to_vector3.z"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar1.x",
                                                            "target": "scalar_to_vector3.x"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar1.y",
                                                            "target": "scalar_to_vector3.y"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar1.y",
                                                            "target": "to_long1.from"
                                                        },
                                                        {
                                                            "source": "vector3_to_scalar1.z",
                                                            "target": "scalar_to_vector4.z"
                                                        },
                                                        {
                                                            "source": "scalar_to_vector3.vector3",
                                                            "target": "set_in_array1.value"
                                                        },
                                                        {
                                                            "source": "scalar_to_vector4.vector3",
                                                            "target": "set_in_array.value"
                                                        },
                                                        {
                                                            "source": "to_long.long",
                                                            "target": "write_index.which_index_to_update"
                                                        },
                                                        {
                                                            "source": "to_long1.long",
                                                            "target": "write_index1.which_index_to_update"
                                                        },
                                                        {
                                                            "source": "write_index.out_array",
                                                            "target": "write_index1.array"
                                                        },
                                                        {
                                                            "source": "write_index1.out_array",
                                                            "target": ".out_array"
                                                        },
                                                        {
                                                            "source": ".array",
                                                            "target": "get_from_array.array"
                                                        },
                                                        {
                                                            "source": ".array",
                                                            "target": "get_from_array1.array"
                                                        },
                                                        {
                                                            "source": ".array",
                                                            "target": "set_in_array.array"
                                                        },
                                                        {
                                                            "source": ".first_index",
                                                            "target": "get_from_array.index"
                                                        },
                                                        {
                                                            "source": ".first_index",
                                                            "target": "set_in_array1.index"
                                                        },
                                                        {
                                                            "source": ".first_index",
                                                            "target": "write_index1.new_position"
                                                        },
                                                        {
                                                            "source": ".second_index",
                                                            "target": "get_from_array1.index"
                                                        },
                                                        {
                                                            "source": ".second_index",
                                                            "target": "set_in_array.index"
                                                        },
                                                        {
                                                            "source": ".second_index",
                                                            "target": "write_index.new_position"
                                                        }
                                                    ],
                                                    "values": [
                                                        {
                                                            "valueName": "write_index.which_index_to_update",
                                                            "valueType": "long",
                                                            "value": "0"
                                                        },
                                                        {
                                                            "valueName": "write_index.new_position",
                                                            "valueType": "long",
                                                            "value": "0"
                                                        },
                                                        {
                                                            "valueName": "write_index1.which_index_to_update",
                                                            "valueType": "long",
                                                            "value": "0"
                                                        },
                                                        {
                                                            "valueName": "write_index1.new_position",
                                                            "valueType": "long",
                                                            "value": "0"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "get_from_array",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 10"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "less2",
                                                    "nodeType": "Core::Logic::less",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 231"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "if2",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 431"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "less3",
                                                    "nodeType": "Core::Logic::less",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 12"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "and1",
                                                    "nodeType": "Core::Logic::and",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 172"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_larger_child",
                                                    "nodeType": "get_larger_child",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 229"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "vector3_to_scalar",
                                                    "nodeType": "Core::Conversion::vector3_to_scalar",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 41"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "vector3_to_scalar1",
                                                    "nodeType": "Core::Conversion::vector3_to_scalar",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 284"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "swap_indices",
                                                    "nodeType": "swap_indices",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 490"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": "vector3_to_scalar.vector3"
                                                },
                                                {
                                                    "source": "less2.output",
                                                    "target": "if2.condition"
                                                },
                                                {
                                                    "source": "less2.output",
                                                    "target": "and1.first"
                                                },
                                                {
                                                    "source": "if2.output",
                                                    "target": ".out_heap"
                                                },
                                                {
                                                    "source": "less3.output",
                                                    "target": "and1.second"
                                                },
                                                {
                                                    "source": "and1.output",
                                                    "target": ".looping_condition"
                                                },
                                                {
                                                    "source": "get_larger_child.larger_child_value",
                                                    "target": "vector3_to_scalar1.vector3"
                                                },
                                                {
                                                    "source": "get_larger_child.larger_child_index",
                                                    "target": ".child_index"
                                                },
                                                {
                                                    "source": "get_larger_child.larger_child_index",
                                                    "target": "less3.first"
                                                },
                                                {
                                                    "source": "get_larger_child.larger_child_index",
                                                    "target": "swap_indices.second_index"
                                                },
                                                {
                                                    "source": "vector3_to_scalar.x",
                                                    "target": "less2.first"
                                                },
                                                {
                                                    "source": "vector3_to_scalar1.x",
                                                    "target": "less2.second"
                                                },
                                                {
                                                    "source": "swap_indices.out_array",
                                                    "target": "if2.true_case"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "get_from_array.index"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "get_larger_child.index"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "swap_indices.first_index"
                                                },
                                                {
                                                    "source": ".in_heap",
                                                    "target": "get_from_array.array"
                                                },
                                                {
                                                    "source": ".in_heap",
                                                    "target": "if2.false_case"
                                                },
                                                {
                                                    "source": ".in_heap",
                                                    "target": "get_larger_child.in_heap"
                                                },
                                                {
                                                    "source": ".in_heap",
                                                    "target": "swap_indices.array"
                                                },
                                                {
                                                    "source": ".size",
                                                    "target": "get_larger_child.size"
                                                },
                                                {
                                                    "source": ".half_size",
                                                    "target": "less3.second"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "swap_indices.first_index",
                                                    "valueType": "long",
                                                    "value": "0"
                                                },
                                                {
                                                    "valueName": "swap_indices.second_index",
                                                    "valueType": "long",
                                                    "value": "0"
                                                }
                                            ],
                                            "whileCompound": {
                                                "ports": [
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "index",
                                                        "outputPortName": "child_index"
                                                    },
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "in_heap",
                                                        "outputPortName": "out_heap"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "half_of",
                                            "nodeType": "Core::Math::half_of",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2450 153"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "get_from_array",
                                            "nodeType": "Core::Array::get_from_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 597"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "get_from_array1",
                                            "nodeType": "Core::Array::get_from_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 771"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "set_in_array1",
                                            "nodeType": "Core::Array::set_in_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2450 521"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "less",
                                            "nodeType": "Core::Logic::less",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2755 9"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "move_down1",
                                            "nodeType": "move_down1",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2755 228"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "vector3_to_scalar",
                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 564"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "to_long",
                                            "nodeType": "Core::Type_Conversion::to_long",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 567"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "vector3_to_scalar1",
                                            "nodeType": "Core::Conversion::vector3_to_scalar",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 741"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "scalar_to_vector4",
                                            "nodeType": "Core::Conversion::scalar_to_vector3",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2145 659"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "3060 228"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "subtract",
                                            "nodeType": "Core::Math::subtract",
                                            "multiInPortNames": [
                                                "x",
                                                "output1"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1840 613"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "vector2_to_scalar",
                                            "nodeType": "Core::Conversion::vector2_to_scalar",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "356 947"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "to_long1",
                                            "nodeType": "Core::Type_Conversion::to_long",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "595 867"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "to_float",
                                            "nodeType": "Core::Type_Conversion::to_float",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "912 1033"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "half_of.half_value",
                                            "target": "less.second"
                                        },
                                        {
                                            "source": "half_of.half_value",
                                            "target": "move_down1.half_size"
                                        },
                                        {
                                            "source": "get_from_array.value",
                                            "target": "vector3_to_scalar.vector3"
                                        },
                                        {
                                            "source": "get_from_array1.value",
                                            "target": "vector3_to_scalar1.vector3"
                                        },
                                        {
                                            "source": "set_in_array1.out_array",
                                            "target": "if.false_case"
                                        },
                                        {
                                            "source": "set_in_array1.out_array",
                                            "target": "move_down1.in_heap"
                                        },
                                        {
                                            "source": "less.output",
                                            "target": "if.condition"
                                        },
                                        {
                                            "source": "move_down1.out_heap",
                                            "target": "if.true_case"
                                        },
                                        {
                                            "source": "vector3_to_scalar.z",
                                            "target": "to_long.from"
                                        },
                                        {
                                            "source": "to_long.long",
                                            "target": "get_from_array1.index"
                                        },
                                        {
                                            "source": "to_long.long",
                                            "target": "less.first"
                                        },
                                        {
                                            "source": "to_long.long",
                                            "target": "set_in_array1.index"
                                        },
                                        {
                                            "source": "to_long.long",
                                            "target": "move_down1.index"
                                        },
                                        {
                                            "source": "vector3_to_scalar1.x",
                                            "target": "subtract.first.x"
                                        },
                                        {
                                            "source": "vector3_to_scalar1.y",
                                            "target": "scalar_to_vector4.y"
                                        },
                                        {
                                            "source": "vector3_to_scalar1.z",
                                            "target": "scalar_to_vector4.z"
                                        },
                                        {
                                            "source": "scalar_to_vector4.vector3",
                                            "target": "set_in_array1.value"
                                        },
                                        {
                                            "source": "if.output",
                                            "target": ".out_heap"
                                        },
                                        {
                                            "source": "subtract.output",
                                            "target": "scalar_to_vector4.x"
                                        },
                                        {
                                            "source": "vector2_to_scalar.x",
                                            "target": "to_long1.from"
                                        },
                                        {
                                            "source": "vector2_to_scalar.y",
                                            "target": "to_float.from"
                                        },
                                        {
                                            "source": "to_long1.long",
                                            "target": "get_from_array.index"
                                        },
                                        {
                                            "source": "to_float.float",
                                            "target": "subtract.first.output1"
                                        },
                                        {
                                            "source": ".output",
                                            "target": "vector2_to_scalar.vector2"
                                        },
                                        {
                                            "source": ".weights_heap",
                                            "target": "get_from_array1.array"
                                        },
                                        {
                                            "source": ".weights_heap",
                                            "target": "set_in_array1.array"
                                        },
                                        {
                                            "source": ".weights_heap",
                                            "target": "get_from_array.array"
                                        },
                                        {
                                            "source": ".new_heap_size",
                                            "target": "half_of.value"
                                        },
                                        {
                                            "source": ".new_heap_size",
                                            "target": "move_down1.size"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "move_down1.half_size",
                                            "valueType": "long",
                                            "value": "10"
                                        }
                                    ],
                                    "iterateCompound": {
                                        "ports": [
                                            {
                                                "portKind": "state",
                                                "inputPortName": "weights_heap",
                                                "outputPortName": "out_heap"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "pop_heap_with_positions",
                                    "nodeType": "pop_heap_with_positions",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 569"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "update_neighboring_weights",
                                    "nodeType": "update_neighboring_weights",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1230 416"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "not_equal",
                                    "nodeType": "Core::Logic::not_equal",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 10"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "and",
                                    "nodeType": "Core::Logic::and",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1230 197"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "first_in_array",
                                    "nodeType": "Core::Array::first_in_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 320"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "vector3_to_scalar2",
                                    "nodeType": "Core::Conversion::vector3_to_scalar",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 243"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "greater",
                                    "nodeType": "Core::Logic::greater",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 229"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "if",
                                    "nodeType": "Core::Logic::if",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1535 361"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "if1",
                                    "nodeType": "Core::Logic::if",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1535 604"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "get_from_array8",
                                    "nodeType": "Core::Array::get_from_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 667"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "pop_heap_with_positions.out_heap",
                                    "target": "update_neighboring_weights.weights_heap"
                                },
                                {
                                    "source": "pop_heap_with_positions.top_index",
                                    "target": "get_from_array8.index"
                                },
                                {
                                    "source": "pop_heap_with_positions.new_heap_size",
                                    "target": "update_neighboring_weights.new_heap_size"
                                },
                                {
                                    "source": "pop_heap_with_positions.new_heap_size",
                                    "target": "if1.true_case"
                                },
                                {
                                    "source": "update_neighboring_weights.out_heap",
                                    "target": "if.true_case"
                                },
                                {
                                    "source": "not_equal.output",
                                    "target": "and.first"
                                },
                                {
                                    "source": "and.output",
                                    "target": ".looping_condition"
                                },
                                {
                                    "source": "and.output",
                                    "target": "if.condition"
                                },
                                {
                                    "source": "and.output",
                                    "target": "if1.condition"
                                },
                                {
                                    "source": "first_in_array.first",
                                    "target": "vector3_to_scalar2.vector3"
                                },
                                {
                                    "source": "vector3_to_scalar2.x",
                                    "target": "greater.first"
                                },
                                {
                                    "source": "greater.output",
                                    "target": "and.second"
                                },
                                {
                                    "source": "if.output",
                                    "target": ".out_heap"
                                },
                                {
                                    "source": "if1.output",
                                    "target": ".new_heap_size"
                                },
                                {
                                    "source": "get_from_array8.value",
                                    "target": "update_neighboring_weights.output"
                                },
                                {
                                    "source": ".individual_contributions",
                                    "target": "get_from_array8.array"
                                },
                                {
                                    "source": ".heap",
                                    "target": "first_in_array.array"
                                },
                                {
                                    "source": ".heap",
                                    "target": "if.false_case"
                                },
                                {
                                    "source": ".heap",
                                    "target": "pop_heap_with_positions.in_heap"
                                },
                                {
                                    "source": ".heap_size",
                                    "target": "pop_heap_with_positions.heap_size"
                                },
                                {
                                    "source": ".heap_size",
                                    "target": "not_equal.first"
                                },
                                {
                                    "source": ".heap_size",
                                    "target": "if1.false_case"
                                }
                            ],
                            "values": [
                                {
                                    "valueName": "greater.second",
                                    "valueType": "double",
                                    "value": "9.9999999999999995e-07"
                                }
                            ],
                            "whileCompound": {
                                "ports": [
                                    {
                                        "portKind": "state",
                                        "inputPortName": "heap",
                                        "outputPortName": "out_heap"
                                    },
                                    {
                                        "portKind": "state",
                                        "inputPortName": "heap_size",
                                        "outputPortName": "new_heap_size"
                                    }
                                ]
                            }
                        },
                        {
                            "name": "get_remaining_indices",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                },
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                },
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Type_Conversion,to_long"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Conversion,vector3_to_scalar"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Logic,greater"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Array,first_in_array"
                                },
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "278.139 -256.448 1072.4 726.26"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "max_iterations"
                                                                },
                                                                {
                                                                    "metaName": "current_index"
                                                                },
                                                                {
                                                                    "metaName": "heap"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "indices_to_keep"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "max_iterations",
                                    "portDirection": "input",
                                    "portType": "long",
                                    "portIterationLimit": "true"
                                },
                                {
                                    "portName": "current_index",
                                    "portDirection": "input",
                                    "portType": "long",
                                    "portIterationCounter": "true"
                                },
                                {
                                    "portName": "heap",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "indices_to_keep",
                                    "portDirection": "output",
                                    "portIterationTarget": "true"
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "get_from_array",
                                    "nodeType": "Core::Array::get_from_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 82"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "vector3_to_scalar",
                                    "nodeType": "Core::Conversion::vector3_to_scalar",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 10"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "to_long",
                                    "nodeType": "Core::Type_Conversion::to_long",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 10"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "get_from_array.value",
                                    "target": "vector3_to_scalar.vector3"
                                },
                                {
                                    "source": "vector3_to_scalar.y",
                                    "target": "to_long.from"
                                },
                                {
                                    "source": "to_long.long",
                                    "target": ".indices_to_keep"
                                },
                                {
                                    "source": ".current_index",
                                    "target": "get_from_array.index"
                                },
                                {
                                    "source": ".heap",
                                    "target": "get_from_array.array"
                                }
                            ],
                            "values": [],
                            "forEachCompound": {
                                "ports": [],
                                "grainSize": "1"
                            }
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "calculate_initial_weights",
                            "nodeType": "calculate_initial_weights",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "620 219"
                                }
                            ]
                        },
                        {
                            "nodeName": "heap_add_positions",
                            "nodeType": "heap_add_positions",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1840 114"
                                }
                            ]
                        },
                        {
                            "nodeName": "make_heap",
                            "nodeType": "make_heap",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1535 258"
                                }
                            ]
                        },
                        {
                            "nodeName": "array_size",
                            "nodeType": "Core::Array::array_size",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1840 357"
                                }
                            ]
                        },
                        {
                            "nodeName": "build_closest_accelerator",
                            "nodeType": "Geometry::Query::build_closest_accelerator",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "315 364"
                                }
                            ]
                        },
                        {
                            "nodeName": "multiply",
                            "nodeType": "Core::Math::multiply",
                            "multiInPortNames": [
                                "output1",
                                "output2"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "315 121"
                                }
                            ]
                        },
                        {
                            "nodeName": "multiply3",
                            "nodeType": "Core::Math::multiply",
                            "multiInPortNames": [
                                "rmin",
                                "rmin1"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "315 583"
                                }
                            ]
                        },
                        {
                            "nodeName": "remove_top_heap_items",
                            "nodeType": "remove_top_heap_items",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "2145 70"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_remaining_indices",
                            "nodeType": "get_remaining_indices",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "2450 10"
                                }
                            ]
                        },
                        {
                            "nodeName": "subtract1",
                            "nodeType": "Core::Math::subtract",
                            "multiInPortNames": [
                                "point_weights",
                                "output1"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1230 297"
                                }
                            ]
                        },
                        {
                            "nodeName": "multiply9",
                            "nodeType": "Core::Math::multiply",
                            "multiInPortNames": [
                                "point_weights",
                                "mask",
                                "mask1"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "925 414"
                                }
                            ]
                        }
                    ],
                    "connections": [
                        {
                            "source": "calculate_initial_weights.point_weights",
                            "target": "subtract1.first.point_weights"
                        },
                        {
                            "source": "calculate_initial_weights.point_weights",
                            "target": "multiply9.first.point_weights"
                        },
                        {
                            "source": "calculate_initial_weights.individual_contributions",
                            "target": "remove_top_heap_items.individual_contributions"
                        },
                        {
                            "source": "heap_add_positions.out_array",
                            "target": "remove_top_heap_items.heap"
                        },
                        {
                            "source": "make_heap.vector2",
                            "target": "array_size.array"
                        },
                        {
                            "source": "make_heap.vector2",
                            "target": "heap_add_positions.vector2"
                        },
                        {
                            "source": "array_size.size",
                            "target": "remove_top_heap_items.heap_size"
                        },
                        {
                            "source": "build_closest_accelerator.accelerator",
                            "target": "calculate_initial_weights.accelerator"
                        },
                        {
                            "source": "multiply.output",
                            "target": "calculate_initial_weights.sample_radius"
                        },
                        {
                            "source": "multiply3.output",
                            "target": "calculate_initial_weights.rmin_squared"
                        },
                        {
                            "source": "remove_top_heap_items.out_heap",
                            "target": "get_remaining_indices.heap"
                        },
                        {
                            "source": "remove_top_heap_items.new_heap_size",
                            "target": "get_remaining_indices.max_iterations"
                        },
                        {
                            "source": "get_remaining_indices.indices_to_keep",
                            "target": ".points_to_keep"
                        },
                        {
                            "source": "subtract1.output",
                            "target": "make_heap.weights"
                        },
                        {
                            "source": "multiply9.output",
                            "target": "subtract1.first.output1"
                        },
                        {
                            "source": ".points",
                            "target": "build_closest_accelerator.geo"
                        },
                        {
                            "source": ".positions",
                            "target": "calculate_initial_weights.my_position"
                        },
                        {
                            "source": ".positions",
                            "target": "calculate_initial_weights.positions"
                        },
                        {
                            "source": ".mask",
                            "target": "multiply9.first.mask"
                        },
                        {
                            "source": ".mask",
                            "target": "multiply9.first.mask1"
                        },
                        {
                            "source": ".radius",
                            "target": "multiply.first.output1"
                        },
                        {
                            "source": ".radius",
                            "target": "multiply3.first.rmin"
                        },
                        {
                            "source": ".radius",
                            "target": "multiply3.first.rmin1"
                        },
                        {
                            "source": ".influence_limit",
                            "target": "multiply.first.output2"
                        }
                    ],
                    "values": [
                        {
                            "valueName": "build_closest_accelerator.geo_component",
                            "valueType": "string",
                            "value": "point_component"
                        }
                    ]
                },
                {
                    "name": "blue_noise_dart_throwing",
                    "uriImported": "file:///scatter_points_in_gaps.json",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "746.306 1836.86"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Type_Conversion,to_unsigned_int"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Type_Conversion,to_unsigned_long"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Array,sequence_array"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Geometry::Strands,construct_strands"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Array,flatten_nested_array"
                        },
                        {
                            "metaName": "io_nodes",
                            "metadata": [
                                {
                                    "metaName": "io_inodes",
                                    "metadata": [
                                        {
                                            "metaName": "input",
                                            "metadata": [
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "mesh"
                                                        },
                                                        {
                                                            "metaName": "seed"
                                                        },
                                                        {
                                                            "metaName": "radius"
                                                        },
                                                        {
                                                            "metaName": "blocking_accelerators"
                                                        },
                                                        {
                                                            "metaName": "blocking_accelerator_radius"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_metadata",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "10 769"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "io_onodes",
                                    "metadata": [
                                        {
                                            "metaName": "output",
                                            "metadata": [
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "points"
                                                        },
                                                        {
                                                            "metaName": "positions"
                                                        },
                                                        {
                                                            "metaName": "locations"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_metadata",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2450 129"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "backdrop",
                            "metadata": [
                                {
                                    "metaName": "type",
                                    "metaType": "string",
                                    "metaValue": "backdrop"
                                },
                                {
                                    "metaName": "text",
                                    "metaType": "string",
                                    "metaValue": "this is an implementation of the paper \"Dart Throwing on Surfaces\"\nhttps://www.cg.tuwien.ac.at/research/publications/2009/cline-09-poisson/cline-09-poisson-paper.pdf"
                                },
                                {
                                    "metaName": "coords",
                                    "metaType": "string",
                                    "metaValue": "911.43 -0.337959 557.721 605.898"
                                }
                            ]
                        },
                        {
                            "metaName": "backdrop1",
                            "metadata": [
                                {
                                    "metaName": "type",
                                    "metaType": "string",
                                    "metaValue": "backdrop"
                                },
                                {
                                    "metaName": "text",
                                    "metaType": "string",
                                    "metaValue": "we need to shuffle the triangles to not have\nvisible patterns in the resulting points. this also\navoids some slow cases where there are lots of\nsmall triangles arranged in a long chain. in that\ncase the collision resolution between neighboring\ntriangles would turn into a O(n^2) algorithm if it\nwasn't for randomization"
                                },
                                {
                                    "metaName": "coords",
                                    "metaType": "string",
                                    "metaValue": "601.567 80.5115 266.577 392.869"
                                }
                            ]
                        },
                        {
                            "metaName": "ViewportRect",
                            "metaType": "string",
                            "metaValue": "449 -18 1172 643"
                        }
                    ],
                    "ports": [
                        {
                            "portName": "mesh",
                            "portDirection": "input"
                        },
                        {
                            "portName": "seed",
                            "portDirection": "input"
                        },
                        {
                            "portName": "radius",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "blocking_accelerators",
                            "portDirection": "input",
                            "portType": "array<Amino::Object>"
                        },
                        {
                            "portName": "blocking_accelerator_radius",
                            "portDirection": "input",
                            "portType": "array<float>"
                        },
                        {
                            "portName": "points",
                            "portDirection": "output"
                        },
                        {
                            "portName": "positions",
                            "portDirection": "output"
                        },
                        {
                            "portName": "locations",
                            "portDirection": "output"
                        }
                    ],
                    "compounds": [
                        {
                            "name": "all_triangles",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1228.8 826.838"
                                },
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Array,flatten_nested_array"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Graph,compound"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Geometry::Query,sample_closest_point_accelerator"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Geometry::Query,sample_closest_in_radius_accelerator"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Geometry::Query,sample_closest_accelerator"
                                },
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "311.41 -129.701 1175 644.646"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "mesh"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "triangles"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "mesh",
                                    "portDirection": "input",
                                    "portType": "Amino::Object"
                                },
                                {
                                    "portName": "triangles",
                                    "portDirection": "output"
                                }
                            ],
                            "compounds": [
                                {
                                    "name": "for_each_face",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Iterators,for_each"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostBoard,Math,clamp"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostBoard,Math,max"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostBoard,Core,slice"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostBoard,Core,lessOrEqual"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "754.85 56.9815 1053.15 577.792"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "face_count"
                                                                        },
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "face_offset_array"
                                                                        },
                                                                        {
                                                                            "metaName": "face_vertex"
                                                                        },
                                                                        {
                                                                            "metaName": "positions"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "face_count",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationLimit": "true"
                                        },
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "face_offset_array",
                                            "portDirection": "input",
                                            "portType": "array<uint>"
                                        },
                                        {
                                            "portName": "face_vertex",
                                            "portDirection": "input",
                                            "portType": "array<uint>"
                                        },
                                        {
                                            "portName": "positions",
                                            "portDirection": "input",
                                            "portType": "array<Math::float3>"
                                        },
                                        {
                                            "portName": "output",
                                            "portDirection": "output",
                                            "portIterationTarget": "true"
                                        }
                                    ],
                                    "compounds": [
                                        {
                                            "name": "unsigned_safe_count",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Core,if"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Core,lessOrEqual"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Math,add"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Arrays,get_from_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Arrays,sum_array"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "326.552 -277.248 1147 584.529"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "value"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "safe_value"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "value",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "safe_value",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "lessOrEqual",
                                                    "nodeType": "Core::Logic::less_or_equal",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "599.993 -250.072"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "if",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "853.575 -131.056"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "lessOrEqual.output",
                                                    "target": "if.condition"
                                                },
                                                {
                                                    "source": "if.output",
                                                    "target": ".safe_value"
                                                },
                                                {
                                                    "source": ".value",
                                                    "target": "lessOrEqual.first"
                                                },
                                                {
                                                    "source": ".value",
                                                    "target": "if.false_case"
                                                }
                                            ],
                                            "values": []
                                        },
                                        {
                                            "name": "indexer_accessor",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Math,add"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Math,subtract"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Arrays,array_size"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Arrays,get_from_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Math,normalize"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "-1966.36 -225 3110.57 994.846"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "index"
                                                                                },
                                                                                {
                                                                                    "metaName": "offset_array"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "start"
                                                                                },
                                                                                {
                                                                                    "metaName": "end"
                                                                                },
                                                                                {
                                                                                    "metaName": "length"
                                                                                },
                                                                                {
                                                                                    "metaName": "capacity"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "index",
                                                    "portDirection": "input",
                                                    "portType": "long"
                                                },
                                                {
                                                    "portName": "offset_array",
                                                    "portDirection": "input",
                                                    "portType": "array<uint>"
                                                },
                                                {
                                                    "portName": "start",
                                                    "portDirection": "output",
                                                    "portType": "long"
                                                },
                                                {
                                                    "portName": "end",
                                                    "portDirection": "output",
                                                    "portType": "long"
                                                },
                                                {
                                                    "portName": "length",
                                                    "portDirection": "output",
                                                    "portType": "long"
                                                },
                                                {
                                                    "portName": "capacity",
                                                    "portDirection": "output",
                                                    "portType": "long"
                                                }
                                            ],
                                            "compounds": [
                                                {
                                                    "name": "increment",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "-942.173 113.198 956.25 487.32"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "current_index"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "output"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "current_index",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "output",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "add",
                                                            "nodeType": "Core::Math::add",
                                                            "multiInPortNames": [
                                                                "current_index",
                                                                "output1"
                                                            ],
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "-528 368"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "value",
                                                            "valueType": "long",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "-775 479"
                                                                },
                                                                {
                                                                    "metaName": "valuenode_defaultvalue",
                                                                    "metaType": "string",
                                                                    "metaValue": "1"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "add.output",
                                                            "target": ".output"
                                                        },
                                                        {
                                                            "source": "value.output",
                                                            "target": "add.first.output1"
                                                        },
                                                        {
                                                            "source": ".current_index",
                                                            "target": "add.first.current_index"
                                                        }
                                                    ],
                                                    "values": [
                                                        {
                                                            "valueName": "value.value",
                                                            "valueType": "long",
                                                            "value": "1"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "increment",
                                                    "nodeType": "increment",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "-948.546 267.505"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "subtract1",
                                                    "nodeType": "Core::Math::subtract",
                                                    "multiInPortNames": [
                                                        "output1",
                                                        "output2"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "-362 82"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "-666 98"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array1",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "-670 -157"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "add",
                                                    "nodeType": "Core::Math::add",
                                                    "multiInPortNames": [
                                                        "value",
                                                        "output1"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "-103 -204"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "increment.output",
                                                    "target": "get_from_array.index"
                                                },
                                                {
                                                    "source": "subtract1.output",
                                                    "target": ".length"
                                                },
                                                {
                                                    "source": "subtract1.output",
                                                    "target": ".capacity"
                                                },
                                                {
                                                    "source": "subtract1.output",
                                                    "target": "add.first.output1"
                                                },
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": "subtract1.first.output1"
                                                },
                                                {
                                                    "source": "get_from_array1.value",
                                                    "target": "subtract1.first.output2"
                                                },
                                                {
                                                    "source": "get_from_array1.value",
                                                    "target": ".start"
                                                },
                                                {
                                                    "source": "get_from_array1.value",
                                                    "target": "add.first.value"
                                                },
                                                {
                                                    "source": "add.output",
                                                    "target": ".end"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "get_from_array1.index"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "increment.current_index"
                                                },
                                                {
                                                    "source": ".offset_array",
                                                    "target": "get_from_array.array"
                                                },
                                                {
                                                    "source": ".offset_array",
                                                    "target": "get_from_array1.array"
                                                }
                                            ],
                                            "values": []
                                        },
                                        {
                                            "name": "for_each",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Constants,float"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Iterators,for_each"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Math,clamp"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Math,max"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostBoard,Core,slice"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "-520.128 -294.791 1300.76 713.642"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "max_iterations"
                                                                                },
                                                                                {
                                                                                    "metaName": "current_index"
                                                                                },
                                                                                {
                                                                                    "metaName": "slice"
                                                                                },
                                                                                {
                                                                                    "metaName": "positions"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "max_iterations",
                                                    "portDirection": "input",
                                                    "portType": "long",
                                                    "portIterationLimit": "true"
                                                },
                                                {
                                                    "portName": "current_index",
                                                    "portDirection": "input",
                                                    "portType": "long",
                                                    "portIterationCounter": "true"
                                                },
                                                {
                                                    "portName": "slice",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "positions",
                                                    "portDirection": "input",
                                                    "portType": "array<Math::float3>"
                                                },
                                                {
                                                    "portName": "output",
                                                    "portDirection": "output",
                                                    "portIterationTarget": "true"
                                                }
                                            ],
                                            "compounds": [
                                                {
                                                    "name": "get_face_triangle_vertices",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "125.038 -100.902 1268.08 817.009"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "triangle_index"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "face_vertex_slice"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "index0"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "index1"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "index2"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "triangle_index",
                                                            "portDirection": "input",
                                                            "portType": "long"
                                                        },
                                                        {
                                                            "portName": "face_vertex_slice",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "index0",
                                                            "portDirection": "output"
                                                        },
                                                        {
                                                            "portName": "index1",
                                                            "portDirection": "output"
                                                        },
                                                        {
                                                            "portName": "index2",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compounds": [
                                                        {
                                                            "name": "increment",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "ViewportRect",
                                                                    "metaType": "string",
                                                                    "metaValue": "-2010.69 53.733 1043.88 531.975"
                                                                },
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "value"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "incremented"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "value",
                                                                    "portDirection": "input",
                                                                    "portType": "long"
                                                                },
                                                                {
                                                                    "portName": "incremented",
                                                                    "portDirection": "output"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "add2",
                                                                    "nodeType": "Core::Math::add",
                                                                    "multiInPortNames": [
                                                                        "current_index",
                                                                        "offset2"
                                                                    ],
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "-1598 135"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "one",
                                                                    "valueType": "uchar",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "-1930.77 347"
                                                                        },
                                                                        {
                                                                            "metaName": "valuenode_defaultvalue",
                                                                            "metaType": "string",
                                                                            "metaValue": "1"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "add2.output",
                                                                    "target": ".incremented"
                                                                },
                                                                {
                                                                    "source": "one.output",
                                                                    "target": "add2.first.offset2"
                                                                },
                                                                {
                                                                    "source": ".value",
                                                                    "target": "add2.first.current_index"
                                                                }
                                                            ],
                                                            "values": [
                                                                {
                                                                    "valueName": "one.value",
                                                                    "valueType": "uchar",
                                                                    "value": "1"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "name": "increment1",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "ViewportRect",
                                                                    "metaType": "string",
                                                                    "metaValue": "-2010.69 53.733 1043.88 531.975"
                                                                },
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "value"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "incremented"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "value",
                                                                    "portDirection": "input",
                                                                    "portType": "long"
                                                                },
                                                                {
                                                                    "portName": "incremented",
                                                                    "portDirection": "output"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "add2",
                                                                    "nodeType": "Core::Math::add",
                                                                    "multiInPortNames": [
                                                                        "current_index",
                                                                        "offset2"
                                                                    ],
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "-1598 135"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "one",
                                                                    "valueType": "uchar",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "-1930.77 347"
                                                                        },
                                                                        {
                                                                            "metaName": "valuenode_defaultvalue",
                                                                            "metaType": "string",
                                                                            "metaValue": "1"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "add2.output",
                                                                    "target": ".incremented"
                                                                },
                                                                {
                                                                    "source": "one.output",
                                                                    "target": "add2.first.offset2"
                                                                },
                                                                {
                                                                    "source": ".value",
                                                                    "target": "add2.first.current_index"
                                                                }
                                                            ],
                                                            "values": [
                                                                {
                                                                    "valueName": "one.value",
                                                                    "valueType": "uchar",
                                                                    "value": "1"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "get_from_array1",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 228"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "get_from_array3",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 447"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "triangle_fan_root_vertex",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 9"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "increment",
                                                            "nodeType": "increment",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 254"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "increment1",
                                                            "nodeType": "increment1",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 454"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "get_from_array1.value",
                                                            "target": ".index1"
                                                        },
                                                        {
                                                            "source": "get_from_array3.value",
                                                            "target": ".index2"
                                                        },
                                                        {
                                                            "source": "triangle_fan_root_vertex.value",
                                                            "target": ".index0"
                                                        },
                                                        {
                                                            "source": "increment.incremented",
                                                            "target": "get_from_array1.index"
                                                        },
                                                        {
                                                            "source": "increment.incremented",
                                                            "target": "increment1.value"
                                                        },
                                                        {
                                                            "source": "increment1.incremented",
                                                            "target": "get_from_array3.index"
                                                        },
                                                        {
                                                            "source": ".triangle_index",
                                                            "target": "increment.value"
                                                        },
                                                        {
                                                            "source": ".face_vertex_slice",
                                                            "target": "get_from_array1.array"
                                                        },
                                                        {
                                                            "source": ".face_vertex_slice",
                                                            "target": "get_from_array3.array"
                                                        },
                                                        {
                                                            "source": ".face_vertex_slice",
                                                            "target": "triangle_fan_root_vertex.array"
                                                        }
                                                    ],
                                                    "values": []
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "get_face_triangle_vertices",
                                                    "nodeType": "get_face_triangle_vertices",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "-335 -85"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "-30 -213"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array1",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "-30 6"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array2",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "-30 225"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "value",
                                                    "valueType": "Math::float3x3",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "262 -113"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "PortExpandedState",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "value",
                                                                    "metaType": "string",
                                                                    "metaValue": "1"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "get_face_triangle_vertices.index0",
                                                    "target": "get_from_array.index"
                                                },
                                                {
                                                    "source": "get_face_triangle_vertices.index1",
                                                    "target": "get_from_array1.index"
                                                },
                                                {
                                                    "source": "get_face_triangle_vertices.index2",
                                                    "target": "get_from_array2.index"
                                                },
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": "value.value.c0"
                                                },
                                                {
                                                    "source": "get_from_array1.value",
                                                    "target": "value.value.c1"
                                                },
                                                {
                                                    "source": "get_from_array2.value",
                                                    "target": "value.value.c2"
                                                },
                                                {
                                                    "source": "value.output",
                                                    "target": ".output"
                                                },
                                                {
                                                    "source": ".current_index",
                                                    "target": "get_face_triangle_vertices.triangle_index"
                                                },
                                                {
                                                    "source": ".slice",
                                                    "target": "get_face_triangle_vertices.face_vertex_slice"
                                                },
                                                {
                                                    "source": ".positions",
                                                    "target": "get_from_array.array"
                                                },
                                                {
                                                    "source": ".positions",
                                                    "target": "get_from_array1.array"
                                                },
                                                {
                                                    "source": ".positions",
                                                    "target": "get_from_array2.array"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "value.value",
                                                    "valueType": "Math::float3x3",
                                                    "value": {
                                                        "c0": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c1": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c2": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        }
                                                    }
                                                }
                                            ],
                                            "forEachCompound": {
                                                "ports": [],
                                                "grainSize": "1"
                                            }
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "subtract",
                                            "nodeType": "Core::Math::subtract",
                                            "multiInPortNames": [
                                                "num_vertices",
                                                "output1"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 10"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "value1",
                                            "valueType": "int",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 17"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "unsigned_safe_count",
                                            "nodeType": "unsigned_safe_count",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 47"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "slice",
                                            "nodeType": "Core::Array::slice_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 290"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "indexer_accessor",
                                            "nodeType": "indexer_accessor",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 252"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "value2",
                                            "valueType": "long",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 381"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "1"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "for_each",
                                            "nodeType": "for_each",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1253 175"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "subtract.output",
                                            "target": "unsigned_safe_count.value"
                                        },
                                        {
                                            "source": "value1.output",
                                            "target": "subtract.first.output1"
                                        },
                                        {
                                            "source": "unsigned_safe_count.safe_value",
                                            "target": "for_each.max_iterations"
                                        },
                                        {
                                            "source": "slice.slice",
                                            "target": "for_each.slice"
                                        },
                                        {
                                            "source": "indexer_accessor.start",
                                            "target": "slice.start"
                                        },
                                        {
                                            "source": "indexer_accessor.end",
                                            "target": "slice.stop"
                                        },
                                        {
                                            "source": "indexer_accessor.length",
                                            "target": "subtract.first.num_vertices"
                                        },
                                        {
                                            "source": "value2.output",
                                            "target": "slice.stride"
                                        },
                                        {
                                            "source": "for_each.output",
                                            "target": ".output"
                                        },
                                        {
                                            "source": ".current_index",
                                            "target": "indexer_accessor.index"
                                        },
                                        {
                                            "source": ".face_offset_array",
                                            "target": "indexer_accessor.offset_array"
                                        },
                                        {
                                            "source": ".face_vertex",
                                            "target": "slice.array"
                                        },
                                        {
                                            "source": ".positions",
                                            "target": "for_each.positions"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "value1.value",
                                            "valueType": "int",
                                            "value": "2L"
                                        },
                                        {
                                            "valueName": "slice.stride",
                                            "valueType": "long",
                                            "value": "1"
                                        },
                                        {
                                            "valueName": "value2.value",
                                            "valueType": "long",
                                            "value": "1"
                                        },
                                        {
                                            "valueName": "for_each.max_iterations",
                                            "valueType": "long",
                                            "value": "10"
                                        }
                                    ],
                                    "forEachCompound": {
                                        "ports": [],
                                        "grainSize": "1"
                                    }
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "for_each_face",
                                    "nodeType": "for_each_face",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 34"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "get_mesh_structure",
                                    "nodeType": "Geometry::Mesh::get_mesh_structure",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 52"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "flatten_nested_array",
                                    "nodeType": "Core::Array::flatten_nested_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 11"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "for_each_face.output",
                                    "target": "flatten_nested_array.nested_array"
                                },
                                {
                                    "source": "get_mesh_structure.face_count",
                                    "target": "for_each_face.face_count"
                                },
                                {
                                    "source": "get_mesh_structure.point_position",
                                    "target": "for_each_face.positions"
                                },
                                {
                                    "source": "get_mesh_structure.face_vertex",
                                    "target": "for_each_face.face_vertex"
                                },
                                {
                                    "source": "get_mesh_structure.face_offset",
                                    "target": "for_each_face.face_offset_array"
                                },
                                {
                                    "source": "flatten_nested_array.flattened_array",
                                    "target": ".triangles"
                                },
                                {
                                    "source": ".mesh",
                                    "target": "get_mesh_structure.mesh"
                                }
                            ],
                            "values": [
                                {
                                    "valueName": "for_each_face.face_count",
                                    "valueType": "ulong",
                                    "value": "10"
                                }
                            ]
                        },
                        {
                            "name": "do_while",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                },
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                },
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Math,add"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Math,multiply"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Geometry::Query,sample_closest_point_accelerator"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Geometry::Query,sample_closest_accelerator"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Constants,float"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "current_index"
                                                                },
                                                                {
                                                                    "metaName": "triangles"
                                                                },
                                                                {
                                                                    "metaName": "radius"
                                                                },
                                                                {
                                                                    "metaName": "seed"
                                                                },
                                                                {
                                                                    "metaName": "positions_state"
                                                                },
                                                                {
                                                                    "metaName": "closest_accelerators"
                                                                },
                                                                {
                                                                    "metaName": "blocking_accelerators"
                                                                },
                                                                {
                                                                    "metaName": "blocking_accelerator_radius"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_metadata",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "10 1009"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "looping_condition"
                                                                },
                                                                {
                                                                    "metaName": "most_recent_positions"
                                                                },
                                                                {
                                                                    "metaName": "accelerator_state"
                                                                },
                                                                {
                                                                    "metaName": "remaining_triangles"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_metadata",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "4585 407"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "backdrop",
                                    "metadata": [
                                        {
                                            "metaName": "type",
                                            "metaType": "string",
                                            "metaValue": "backdrop"
                                        },
                                        {
                                            "metaName": "text",
                                            "metaType": "string",
                                            "metaValue": "this is different from the original paper: we also sort\ntriangles into bins, but then we do all the triangles\nin the same bin at the same time in parallel, instead\nof one at a time. we have to resolve collisions later,\nbut that's still faster than doing one at a time"
                                        },
                                        {
                                            "metaName": "coords",
                                            "metaType": "string",
                                            "metaValue": "301.996 210.97 278.54 384.046"
                                        }
                                    ]
                                },
                                {
                                    "metaName": "backdrop1",
                                    "metadata": [
                                        {
                                            "metaName": "type",
                                            "metaType": "string",
                                            "metaValue": "backdrop"
                                        },
                                        {
                                            "metaName": "text",
                                            "metaType": "string",
                                            "metaValue": "here we handle that multiple triangles might have\ngenerated overlapping points in parallel. we keep\nthe one with the lowest index. this might\nintroduce a bias, but in practice we found that the\ninitial shuffle (outside this loop) was enough"
                                        },
                                        {
                                            "metaName": "coords",
                                            "metaType": "string",
                                            "metaValue": "2426.54 589.368 266.818 356.14"
                                        }
                                    ]
                                },
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "1546.82 410.883 1651.35 905.987"
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "current_index",
                                    "portDirection": "input",
                                    "portType": "long",
                                    "portIterationCounter": "true"
                                },
                                {
                                    "portName": "triangles",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "radius",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "seed",
                                    "portDirection": "input",
                                    "portType": "long"
                                },
                                {
                                    "portName": "positions_state",
                                    "portDirection": "input",
                                    "portType": "array<Math::float3>"
                                },
                                {
                                    "portName": "closest_accelerators",
                                    "portDirection": "input",
                                    "portType": "array<Amino::Object>"
                                },
                                {
                                    "portName": "blocking_accelerators",
                                    "portDirection": "input",
                                    "portType": "array<Amino::Object>"
                                },
                                {
                                    "portName": "blocking_accelerator_radius",
                                    "portDirection": "input",
                                    "portType": "array<float>"
                                },
                                {
                                    "portName": "most_recent_positions",
                                    "portDirection": "output"
                                },
                                {
                                    "portName": "accelerator_state",
                                    "portDirection": "output"
                                },
                                {
                                    "portName": "remaining_triangles",
                                    "portDirection": "output"
                                }
                            ],
                            "compounds": [
                                {
                                    "name": "add_to_accelerator",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,greater_or_equal"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,find_all_in_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Iterators,for_each"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,shuffle_array"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "284.072 -222.471 1373.62 930.256"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "point_to_add"
                                                                        },
                                                                        {
                                                                            "metaName": "positions_state"
                                                                        },
                                                                        {
                                                                            "metaName": "closest_accelerators"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "last_positions"
                                                                        },
                                                                        {
                                                                            "metaName": "accelerators"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "point_to_add",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "positions_state",
                                            "portDirection": "input",
                                            "portType": "array<Math::float3>"
                                        },
                                        {
                                            "portName": "closest_accelerators",
                                            "portDirection": "input",
                                            "portType": "array<Amino::Object>"
                                        },
                                        {
                                            "portName": "last_positions",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "accelerators",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compounds": [
                                        {
                                            "name": "add_to_accelerator",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Geometry::Points,construct_points"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,build_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Diagnostic::IO,dump_object"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Graph,compound"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "581.634 13.5971 1443.33 977.471"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "closest_accelerators"
                                                                                },
                                                                                {
                                                                                    "metaName": "point_position"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "closest_accelerators",
                                                    "portDirection": "input",
                                                    "portType": "array<Amino::Object>"
                                                },
                                                {
                                                    "portName": "point_position",
                                                    "portDirection": "input",
                                                    "portType": "array<Math::float3>"
                                                },
                                                {
                                                    "portName": "output",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compounds": [
                                                {
                                                    "name": "do_while",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "icon",
                                                            "metaType": "string",
                                                            "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                        },
                                                        {
                                                            "metaName": "icon",
                                                            "metaType": "string",
                                                            "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                        },
                                                        {
                                                            "metaName": "icon",
                                                            "metaType": "string",
                                                            "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Math,divide"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Logic,greater_or_equal"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Array,array_size"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Array,build_array"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Math,decrement"
                                                        },
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "588.899 -126.029 1425.42 965.34"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "max_iterations"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "current_index"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "closest_accelerators"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "points_to_add"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "looping_condition"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "output"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "points_to_add_state"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "max_iterations",
                                                            "portDirection": "input",
                                                            "portType": "long",
                                                            "portIterationLimit": "true"
                                                        },
                                                        {
                                                            "portName": "current_index",
                                                            "portDirection": "input",
                                                            "portType": "long",
                                                            "portIterationCounter": "true"
                                                        },
                                                        {
                                                            "portName": "closest_accelerators",
                                                            "portDirection": "input",
                                                            "portType": "array<Amino::Object>"
                                                        },
                                                        {
                                                            "portName": "points_to_add",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "output",
                                                            "portDirection": "output"
                                                        },
                                                        {
                                                            "portName": "points_to_add_state",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compounds": [
                                                        {
                                                            "name": "get_accelerator_positions",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "ViewportRect",
                                                                    "metaType": "string",
                                                                    "metaValue": "-70 -193.611 1301 838.222"
                                                                },
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "object"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "point_position"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "object",
                                                                    "portDirection": "input",
                                                                    "portType": "Amino::Object"
                                                                },
                                                                {
                                                                    "portName": "point_position",
                                                                    "portDirection": "output",
                                                                    "portType": "array<Math::float3>"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "get_point_position",
                                                                    "nodeType": "Geometry::Properties::get_point_position",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "620 47"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "get_property",
                                                                    "nodeType": "Core::Object::get_property",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "315 71"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "value",
                                                                    "valueType": "Amino::Object",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "10 205"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "get_point_position.point_position",
                                                                    "target": ".point_position"
                                                                },
                                                                {
                                                                    "source": "get_property.value",
                                                                    "target": "get_point_position.geometry"
                                                                },
                                                                {
                                                                    "source": "value.output",
                                                                    "target": "get_property.default_and_type"
                                                                },
                                                                {
                                                                    "source": ".object",
                                                                    "target": "get_property.object"
                                                                }
                                                            ],
                                                            "values": [
                                                                {
                                                                    "valueName": "get_property.key",
                                                                    "valueType": "string",
                                                                    "value": "geometry"
                                                                },
                                                                {
                                                                    "valueName": "value.value",
                                                                    "valueType": "Amino::Object",
                                                                    "value": {}
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "last_in_array",
                                                            "nodeType": "Core::Array::last_in_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 280"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "if",
                                                            "nodeType": "Core::Logic::if",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1840 224"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "build_array1",
                                                            "nodeType": "Core::Array::build_array",
                                                            "multiInPortNames": [
                                                                "point_position",
                                                                "point_position1"
                                                            ],
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1535 596"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "resize_array",
                                                            "nodeType": "Core::Array::resize_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1535 313"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "array_size",
                                                            "nodeType": "Core::Array::array_size",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 480"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "decrement",
                                                            "nodeType": "Core::Math::decrement",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 488"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "if1",
                                                            "nodeType": "Core::Logic::if",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1840 467"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "get_accelerator_positions",
                                                            "nodeType": "get_accelerator_positions",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 312"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "array_size1",
                                                            "nodeType": "Core::Array::array_size",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 50"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "array_size2",
                                                            "nodeType": "Core::Array::array_size",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 10"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "greater_or_equal",
                                                            "nodeType": "Core::Logic::greater_or_equal",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1535 94"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "divide",
                                                            "nodeType": "Core::Math::divide",
                                                            "multiInPortNames": [
                                                                "size",
                                                                "output1"
                                                            ],
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 205"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "value",
                                                            "valueType": "long",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 245"
                                                                },
                                                                {
                                                                    "metaName": "valuenode_defaultvalue",
                                                                    "metaType": "string",
                                                                    "metaValue": "4"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "last_in_array.last",
                                                            "target": "get_accelerator_positions.object"
                                                        },
                                                        {
                                                            "source": "if.output",
                                                            "target": ".output"
                                                        },
                                                        {
                                                            "source": "build_array1.array",
                                                            "target": "if1.true_case"
                                                        },
                                                        {
                                                            "source": "resize_array.resized",
                                                            "target": "if.true_case"
                                                        },
                                                        {
                                                            "source": "array_size.size",
                                                            "target": "decrement.value"
                                                        },
                                                        {
                                                            "source": "decrement.output",
                                                            "target": "resize_array.new_size"
                                                        },
                                                        {
                                                            "source": "if1.output",
                                                            "target": ".points_to_add_state"
                                                        },
                                                        {
                                                            "source": "get_accelerator_positions.point_position",
                                                            "target": "build_array1.first.point_position"
                                                        },
                                                        {
                                                            "source": "get_accelerator_positions.point_position",
                                                            "target": "array_size1.array"
                                                        },
                                                        {
                                                            "source": "array_size1.size",
                                                            "target": "divide.first.size"
                                                        },
                                                        {
                                                            "source": "array_size2.size",
                                                            "target": "greater_or_equal.first"
                                                        },
                                                        {
                                                            "source": "greater_or_equal.output",
                                                            "target": ".looping_condition"
                                                        },
                                                        {
                                                            "source": "greater_or_equal.output",
                                                            "target": "if.condition"
                                                        },
                                                        {
                                                            "source": "greater_or_equal.output",
                                                            "target": "if1.condition"
                                                        },
                                                        {
                                                            "source": "divide.output",
                                                            "target": "greater_or_equal.second"
                                                        },
                                                        {
                                                            "source": "value.output",
                                                            "target": "divide.first.output1"
                                                        },
                                                        {
                                                            "source": ".closest_accelerators",
                                                            "target": "last_in_array.array"
                                                        },
                                                        {
                                                            "source": ".closest_accelerators",
                                                            "target": "resize_array.array"
                                                        },
                                                        {
                                                            "source": ".closest_accelerators",
                                                            "target": "array_size.array"
                                                        },
                                                        {
                                                            "source": ".closest_accelerators",
                                                            "target": "if.false_case"
                                                        },
                                                        {
                                                            "source": ".points_to_add",
                                                            "target": "if1.false_case"
                                                        },
                                                        {
                                                            "source": ".points_to_add",
                                                            "target": "build_array1.first.point_position1"
                                                        },
                                                        {
                                                            "source": ".points_to_add",
                                                            "target": "array_size2.array"
                                                        }
                                                    ],
                                                    "values": [
                                                        {
                                                            "valueName": "decrement.by",
                                                            "valueType": "char",
                                                            "value": "1"
                                                        },
                                                        {
                                                            "valueName": "value.value",
                                                            "valueType": "long",
                                                            "value": "4"
                                                        }
                                                    ],
                                                    "whileCompound": {
                                                        "ports": [
                                                            {
                                                                "portKind": "state",
                                                                "inputPortName": "closest_accelerators",
                                                                "outputPortName": "output"
                                                            },
                                                            {
                                                                "portKind": "state",
                                                                "inputPortName": "points_to_add",
                                                                "outputPortName": "points_to_add_state"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "do_while",
                                                    "nodeType": "do_while",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 400"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "array_size2",
                                                    "nodeType": "Core::Array::array_size",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 261"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "build_array1",
                                                    "nodeType": "Core::Array::build_array",
                                                    "multiInPortNames": [
                                                        "accelerator"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 228"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "build_closest_accelerator",
                                                    "nodeType": "Geometry::Query::build_closest_accelerator",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 229"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "construct_points",
                                                    "nodeType": "Geometry::Points::construct_points",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 248"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "equal2",
                                                    "nodeType": "Core::Logic::equal",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 9"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "if3",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1840 187"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "build_closest_accelerator2",
                                                    "nodeType": "Geometry::Query::build_closest_accelerator",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 488"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "build_array",
                                                    "nodeType": "Core::Array::build_array",
                                                    "multiInPortNames": [
                                                        "output",
                                                        "accelerator"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 447"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "construct_points1",
                                                    "nodeType": "Geometry::Points::construct_points",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 483"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "do_while.output",
                                                    "target": "build_array.first.output"
                                                },
                                                {
                                                    "source": "do_while.points_to_add_state",
                                                    "target": "construct_points1.point_position"
                                                },
                                                {
                                                    "source": "array_size2.size",
                                                    "target": "do_while.max_iterations"
                                                },
                                                {
                                                    "source": "array_size2.size",
                                                    "target": "equal2.first"
                                                },
                                                {
                                                    "source": "build_array1.array",
                                                    "target": "if3.true_case"
                                                },
                                                {
                                                    "source": "build_closest_accelerator.accelerator",
                                                    "target": "build_array1.first.accelerator"
                                                },
                                                {
                                                    "source": "construct_points.points",
                                                    "target": "build_closest_accelerator.geo"
                                                },
                                                {
                                                    "source": "equal2.output",
                                                    "target": "if3.condition"
                                                },
                                                {
                                                    "source": "if3.output",
                                                    "target": ".output"
                                                },
                                                {
                                                    "source": "build_closest_accelerator2.accelerator",
                                                    "target": "build_array.first.accelerator"
                                                },
                                                {
                                                    "source": "build_array.array",
                                                    "target": "if3.false_case"
                                                },
                                                {
                                                    "source": "construct_points1.points",
                                                    "target": "build_closest_accelerator2.geo"
                                                },
                                                {
                                                    "source": ".closest_accelerators",
                                                    "target": "array_size2.array"
                                                },
                                                {
                                                    "source": ".closest_accelerators",
                                                    "target": "do_while.closest_accelerators"
                                                },
                                                {
                                                    "source": ".point_position",
                                                    "target": "construct_points.point_position"
                                                },
                                                {
                                                    "source": ".point_position",
                                                    "target": "do_while.points_to_add"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "do_while.max_iterations",
                                                    "valueType": "long",
                                                    "value": "10"
                                                },
                                                {
                                                    "valueName": "build_closest_accelerator.geo_component",
                                                    "valueType": "string",
                                                    "value": "point_component"
                                                },
                                                {
                                                    "valueName": "build_closest_accelerator2.geo_component",
                                                    "valueType": "string",
                                                    "value": "point_component"
                                                }
                                            ]
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "array_size1",
                                            "nodeType": "Core::Array::array_size",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 15"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "build_array",
                                            "nodeType": "Core::Array::build_array",
                                            "multiInPortNames": [
                                                "port",
                                                "output"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 154"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 10"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if2",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 253"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "value",
                                            "valueType": "long",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 210"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "16"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "add_to_accelerator",
                                            "nodeType": "add_to_accelerator",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 294"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "greater_or_equal",
                                            "nodeType": "Core::Logic::greater_or_equal",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 75"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "array_size1.size",
                                            "target": "greater_or_equal.first"
                                        },
                                        {
                                            "source": "build_array.array",
                                            "target": "array_size1.array"
                                        },
                                        {
                                            "source": "build_array.array",
                                            "target": "if.false_case"
                                        },
                                        {
                                            "source": "build_array.array",
                                            "target": "add_to_accelerator.point_position"
                                        },
                                        {
                                            "source": "if.output",
                                            "target": ".last_positions"
                                        },
                                        {
                                            "source": "if2.output",
                                            "target": ".accelerators"
                                        },
                                        {
                                            "source": "value.output",
                                            "target": "greater_or_equal.second"
                                        },
                                        {
                                            "source": "add_to_accelerator.output",
                                            "target": "if2.true_case"
                                        },
                                        {
                                            "source": "greater_or_equal.output",
                                            "target": "if.condition"
                                        },
                                        {
                                            "source": "greater_or_equal.output",
                                            "target": "if2.condition"
                                        },
                                        {
                                            "source": ".point_to_add",
                                            "target": "build_array.first.output"
                                        },
                                        {
                                            "source": ".positions_state",
                                            "target": "build_array.first.port"
                                        },
                                        {
                                            "source": ".closest_accelerators",
                                            "target": "if2.false_case"
                                        },
                                        {
                                            "source": ".closest_accelerators",
                                            "target": "add_to_accelerator.closest_accelerators"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "value.value",
                                            "valueType": "long",
                                            "value": "16"
                                        }
                                    ]
                                },
                                {
                                    "name": "add_split_triangles",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,if"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,empty_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,first_in_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "117.837 -7.00485 2079.3 1140.78"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "to_add_to"
                                                                        },
                                                                        {
                                                                            "metaName": "value"
                                                                        },
                                                                        {
                                                                            "metaName": "triangle_bin_index"
                                                                        },
                                                                        {
                                                                            "metaName": "point_to_compare_against"
                                                                        },
                                                                        {
                                                                            "metaName": "radius"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "to_add_to",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "value",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "triangle_bin_index",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "point_to_compare_against",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "radius",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "output",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compounds": [
                                        {
                                            "name": "split_triangle",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,multiply"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,and"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,less"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,length"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,subtract"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "204.015 223.777 2112.87 1159.19"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "value"
                                                                                },
                                                                                {
                                                                                    "metaName": "point_to_compare_against"
                                                                                },
                                                                                {
                                                                                    "metaName": "radius"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "new_triangle_point_1"
                                                                                },
                                                                                {
                                                                                    "metaName": "first_is_overlapping"
                                                                                },
                                                                                {
                                                                                    "metaName": "new_triangle_point_2"
                                                                                },
                                                                                {
                                                                                    "metaName": "second_is_overlapping"
                                                                                },
                                                                                {
                                                                                    "metaName": "new_triangle_point_3"
                                                                                },
                                                                                {
                                                                                    "metaName": "third_is_overlapping"
                                                                                },
                                                                                {
                                                                                    "metaName": "middle_triangle"
                                                                                },
                                                                                {
                                                                                    "metaName": "fourth_is_overlapping"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "value",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "point_to_compare_against",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "radius",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "new_triangle_point_1",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "first_is_overlapping",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "new_triangle_point_2",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "second_is_overlapping",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "new_triangle_point_3",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "third_is_overlapping",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "middle_triangle",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "fourth_is_overlapping",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compounds": [
                                                {
                                                    "name": "three_midpoints",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "-3 -203 1376 868"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "c0"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "c1"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "c2"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "midpoint_ab"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "midpoint_ac"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "midpoint_bc"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "c0",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "c1",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "c2",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "midpoint_ab",
                                                            "portDirection": "output"
                                                        },
                                                        {
                                                            "portName": "midpoint_ac",
                                                            "portDirection": "output"
                                                        },
                                                        {
                                                            "portName": "midpoint_bc",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "add",
                                                            "nodeType": "Core::Math::add",
                                                            "multiInPortNames": [
                                                                "c0",
                                                                "c1"
                                                            ],
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 10"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "add1",
                                                            "nodeType": "Core::Math::add",
                                                            "multiInPortNames": [
                                                                "c0",
                                                                "c1"
                                                            ],
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 253"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "add2",
                                                            "nodeType": "Core::Math::add",
                                                            "multiInPortNames": [
                                                                "c0",
                                                                "c1"
                                                            ],
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 496"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "half_of",
                                                            "nodeType": "Core::Math::half_of",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 34"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "half_of1",
                                                            "nodeType": "Core::Math::half_of",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 229"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "half_of2",
                                                            "nodeType": "Core::Math::half_of",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 424"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "add.output",
                                                            "target": "half_of.value"
                                                        },
                                                        {
                                                            "source": "add1.output",
                                                            "target": "half_of1.value"
                                                        },
                                                        {
                                                            "source": "add2.output",
                                                            "target": "half_of2.value"
                                                        },
                                                        {
                                                            "source": "half_of.half_value",
                                                            "target": ".midpoint_ab"
                                                        },
                                                        {
                                                            "source": "half_of1.half_value",
                                                            "target": ".midpoint_ac"
                                                        },
                                                        {
                                                            "source": "half_of2.half_value",
                                                            "target": ".midpoint_bc"
                                                        },
                                                        {
                                                            "source": ".c0",
                                                            "target": "add.first.c0"
                                                        },
                                                        {
                                                            "source": ".c0",
                                                            "target": "add1.first.c0"
                                                        },
                                                        {
                                                            "source": ".c1",
                                                            "target": "add.first.c1"
                                                        },
                                                        {
                                                            "source": ".c1",
                                                            "target": "add2.first.c0"
                                                        },
                                                        {
                                                            "source": ".c2",
                                                            "target": "add1.first.c1"
                                                        },
                                                        {
                                                            "source": ".c2",
                                                            "target": "add2.first.c1"
                                                        }
                                                    ],
                                                    "values": []
                                                },
                                                {
                                                    "name": "is_too_close",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "-111.599 44.7888 1455.91 798.763"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "point_ab"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "point_ac"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "point_bc"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "point_to_compare_against"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "radius_squared"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "too_close_ab"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "too_close_ac"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "too_close_bc"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "point_ab",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "point_ac",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "point_bc",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "point_to_compare_against",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "radius_squared",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "too_close_ab",
                                                            "portDirection": "output",
                                                            "portType": "array<bool>"
                                                        },
                                                        {
                                                            "portName": "too_close_ac",
                                                            "portDirection": "output",
                                                            "portType": "array<bool>"
                                                        },
                                                        {
                                                            "portName": "too_close_bc",
                                                            "portDirection": "output",
                                                            "portType": "array<bool>"
                                                        }
                                                    ],
                                                    "compounds": [
                                                        {
                                                            "name": "distance_squared10",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "ViewportRect",
                                                                    "metaType": "string",
                                                                    "metaValue": "-70.0414 -285.101 1301.27 838.399"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,length_squared"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Logic,less"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,length"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,subtract"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Constants,float"
                                                                },
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "point1"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "point2"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "distance_squared"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "point1",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "point2",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "distance_squared",
                                                                    "portDirection": "output"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "subtract",
                                                                    "nodeType": "Core::Math::subtract",
                                                                    "multiInPortNames": [
                                                                        "c0",
                                                                        "point_to_compare_against"
                                                                    ],
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "315 34"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "length_squared",
                                                                    "nodeType": "Core::Math::length_squared",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "620 10"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "subtract.output",
                                                                    "target": "length_squared.vector"
                                                                },
                                                                {
                                                                    "source": "length_squared.length_squared",
                                                                    "target": ".distance_squared"
                                                                },
                                                                {
                                                                    "source": ".point1",
                                                                    "target": "subtract.first.c0"
                                                                },
                                                                {
                                                                    "source": ".point2",
                                                                    "target": "subtract.first.point_to_compare_against"
                                                                }
                                                            ],
                                                            "values": []
                                                        },
                                                        {
                                                            "name": "distance_squared8",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,length_squared"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Logic,less"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,length"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,subtract"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Constants,float"
                                                                },
                                                                {
                                                                    "metaName": "ViewportRect",
                                                                    "metaType": "string",
                                                                    "metaValue": "-143.534 -437.996 1455.04 937.466"
                                                                },
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "point1"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "point2"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "distance_squared"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "point1",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "point2",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "distance_squared",
                                                                    "portDirection": "output"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "subtract",
                                                                    "nodeType": "Core::Math::subtract",
                                                                    "multiInPortNames": [
                                                                        "c0",
                                                                        "point_to_compare_against"
                                                                    ],
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "315 34"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "length_squared",
                                                                    "nodeType": "Core::Math::length_squared",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "620 10"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "subtract.output",
                                                                    "target": "length_squared.vector"
                                                                },
                                                                {
                                                                    "source": "length_squared.length_squared",
                                                                    "target": ".distance_squared"
                                                                },
                                                                {
                                                                    "source": ".point1",
                                                                    "target": "subtract.first.c0"
                                                                },
                                                                {
                                                                    "source": ".point2",
                                                                    "target": "subtract.first.point_to_compare_against"
                                                                }
                                                            ],
                                                            "values": []
                                                        },
                                                        {
                                                            "name": "distance_squared9",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "ViewportRect",
                                                                    "metaType": "string",
                                                                    "metaValue": "-70.0414 -285.101 1301.27 838.399"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,length_squared"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Logic,less"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,length"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,subtract"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Constants,float"
                                                                },
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "point1"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "point2"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "distance_squared"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "point1",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "point2",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "distance_squared",
                                                                    "portDirection": "output"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "subtract",
                                                                    "nodeType": "Core::Math::subtract",
                                                                    "multiInPortNames": [
                                                                        "c0",
                                                                        "point_to_compare_against"
                                                                    ],
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "315 34"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "length_squared",
                                                                    "nodeType": "Core::Math::length_squared",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "620 10"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "subtract.output",
                                                                    "target": "length_squared.vector"
                                                                },
                                                                {
                                                                    "source": "length_squared.length_squared",
                                                                    "target": ".distance_squared"
                                                                },
                                                                {
                                                                    "source": ".point1",
                                                                    "target": "subtract.first.c0"
                                                                },
                                                                {
                                                                    "source": ".point2",
                                                                    "target": "subtract.first.point_to_compare_against"
                                                                }
                                                            ],
                                                            "values": []
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "distance_squared10",
                                                            "nodeType": "distance_squared10",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 624"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "distance_squared8",
                                                            "nodeType": "distance_squared8",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 10"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "distance_squared9",
                                                            "nodeType": "distance_squared9",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 317"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "less3",
                                                            "nodeType": "Core::Logic::less",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 243"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "less4",
                                                            "nodeType": "Core::Logic::less",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 462"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "less5",
                                                            "nodeType": "Core::Logic::less",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 681"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "distance_squared10.distance_squared",
                                                            "target": "less5.first"
                                                        },
                                                        {
                                                            "source": "distance_squared8.distance_squared",
                                                            "target": "less3.first"
                                                        },
                                                        {
                                                            "source": "distance_squared9.distance_squared",
                                                            "target": "less4.first"
                                                        },
                                                        {
                                                            "source": "less3.output",
                                                            "target": ".too_close_ab"
                                                        },
                                                        {
                                                            "source": "less4.output",
                                                            "target": ".too_close_ac"
                                                        },
                                                        {
                                                            "source": "less5.output",
                                                            "target": ".too_close_bc"
                                                        },
                                                        {
                                                            "source": ".point_ab",
                                                            "target": "distance_squared8.point1"
                                                        },
                                                        {
                                                            "source": ".point_ac",
                                                            "target": "distance_squared9.point1"
                                                        },
                                                        {
                                                            "source": ".point_bc",
                                                            "target": "distance_squared10.point1"
                                                        },
                                                        {
                                                            "source": ".point_to_compare_against",
                                                            "target": "distance_squared10.point2"
                                                        },
                                                        {
                                                            "source": ".point_to_compare_against",
                                                            "target": "distance_squared8.point2"
                                                        },
                                                        {
                                                            "source": ".point_to_compare_against",
                                                            "target": "distance_squared9.point2"
                                                        },
                                                        {
                                                            "source": ".radius_squared",
                                                            "target": "less3.second"
                                                        },
                                                        {
                                                            "source": ".radius_squared",
                                                            "target": "less4.second"
                                                        },
                                                        {
                                                            "source": ".radius_squared",
                                                            "target": "less5.second"
                                                        }
                                                    ],
                                                    "values": []
                                                },
                                                {
                                                    "name": "is_too_close1",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "-1.13589 133.429 1374.47 633.544"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "point1"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "point2"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "point3"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "point_to_compare_against"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "radius_squared"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "output"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "output1"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "output2"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "point1",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "point2",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "point3",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "point_to_compare_against",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "radius_squared",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "output",
                                                            "portDirection": "output",
                                                            "portType": "array<bool>"
                                                        },
                                                        {
                                                            "portName": "output1",
                                                            "portDirection": "output",
                                                            "portType": "array<bool>"
                                                        },
                                                        {
                                                            "portName": "output2",
                                                            "portDirection": "output",
                                                            "portType": "array<bool>"
                                                        }
                                                    ],
                                                    "compounds": [
                                                        {
                                                            "name": "distance_squared",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "ViewportRect",
                                                                    "metaType": "string",
                                                                    "metaValue": "-70.0414 -285.101 1301.27 838.399"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,length_squared"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Logic,less"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,length"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,subtract"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Constants,float"
                                                                },
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "point1"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "point2"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "distance_squared"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "point1",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "point2",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "distance_squared",
                                                                    "portDirection": "output"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "subtract",
                                                                    "nodeType": "Core::Math::subtract",
                                                                    "multiInPortNames": [
                                                                        "c0",
                                                                        "point_to_compare_against"
                                                                    ],
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "315 34"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "length_squared",
                                                                    "nodeType": "Core::Math::length_squared",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "620 10"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "subtract.output",
                                                                    "target": "length_squared.vector"
                                                                },
                                                                {
                                                                    "source": "length_squared.length_squared",
                                                                    "target": ".distance_squared"
                                                                },
                                                                {
                                                                    "source": ".point1",
                                                                    "target": "subtract.first.c0"
                                                                },
                                                                {
                                                                    "source": ".point2",
                                                                    "target": "subtract.first.point_to_compare_against"
                                                                }
                                                            ],
                                                            "values": []
                                                        },
                                                        {
                                                            "name": "distance_squared6",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "ViewportRect",
                                                                    "metaType": "string",
                                                                    "metaValue": "-70.0414 -285.101 1301.27 838.399"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,length_squared"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Logic,less"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,length"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,subtract"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Constants,float"
                                                                },
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "point1"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "point2"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "distance_squared"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "point1",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "point2",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "distance_squared",
                                                                    "portDirection": "output"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "subtract",
                                                                    "nodeType": "Core::Math::subtract",
                                                                    "multiInPortNames": [
                                                                        "c0",
                                                                        "point_to_compare_against"
                                                                    ],
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "315 34"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "length_squared",
                                                                    "nodeType": "Core::Math::length_squared",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "620 10"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "subtract.output",
                                                                    "target": "length_squared.vector"
                                                                },
                                                                {
                                                                    "source": "length_squared.length_squared",
                                                                    "target": ".distance_squared"
                                                                },
                                                                {
                                                                    "source": ".point1",
                                                                    "target": "subtract.first.c0"
                                                                },
                                                                {
                                                                    "source": ".point2",
                                                                    "target": "subtract.first.point_to_compare_against"
                                                                }
                                                            ],
                                                            "values": []
                                                        },
                                                        {
                                                            "name": "distance_squared7",
                                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "ViewportRect",
                                                                    "metaType": "string",
                                                                    "metaValue": "-70.0414 -285.101 1301.27 838.399"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,length_squared"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Logic,less"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,length"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Math,subtract"
                                                                },
                                                                {
                                                                    "metaName": "_recentNode_",
                                                                    "metaType": "string",
                                                                    "metaValue": "BifrostGraph,Core::Constants,float"
                                                                },
                                                                {
                                                                    "metaName": "io_nodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_inodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "point1"
                                                                                                },
                                                                                                {
                                                                                                    "metaName": "point2"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "metaName": "io_onodes",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "io_ports",
                                                                                            "metadata": [
                                                                                                {
                                                                                                    "metaName": "distance_squared"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "ports": [
                                                                {
                                                                    "portName": "point1",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "point2",
                                                                    "portDirection": "input"
                                                                },
                                                                {
                                                                    "portName": "distance_squared",
                                                                    "portDirection": "output"
                                                                }
                                                            ],
                                                            "compoundNodes": [
                                                                {
                                                                    "nodeName": "subtract",
                                                                    "nodeType": "Core::Math::subtract",
                                                                    "multiInPortNames": [
                                                                        "c0",
                                                                        "point_to_compare_against"
                                                                    ],
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "315 34"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "nodeName": "length_squared",
                                                                    "nodeType": "Core::Math::length_squared",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "DisplayMode",
                                                                            "metaType": "string",
                                                                            "metaValue": "2"
                                                                        },
                                                                        {
                                                                            "metaName": "LayoutPos",
                                                                            "metaType": "string",
                                                                            "metaValue": "620 10"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "connections": [
                                                                {
                                                                    "source": "subtract.output",
                                                                    "target": "length_squared.vector"
                                                                },
                                                                {
                                                                    "source": "length_squared.length_squared",
                                                                    "target": ".distance_squared"
                                                                },
                                                                {
                                                                    "source": ".point1",
                                                                    "target": "subtract.first.c0"
                                                                },
                                                                {
                                                                    "source": ".point2",
                                                                    "target": "subtract.first.point_to_compare_against"
                                                                }
                                                            ],
                                                            "values": []
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "distance_squared",
                                                            "nodeType": "distance_squared",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 10"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "distance_squared6",
                                                            "nodeType": "distance_squared6",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 317"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "distance_squared7",
                                                            "nodeType": "distance_squared7",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 624"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "less",
                                                            "nodeType": "Core::Logic::less",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 243"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "less1",
                                                            "nodeType": "Core::Logic::less",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 462"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "less2",
                                                            "nodeType": "Core::Logic::less",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 681"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "distance_squared.distance_squared",
                                                            "target": "less.first"
                                                        },
                                                        {
                                                            "source": "distance_squared6.distance_squared",
                                                            "target": "less1.first"
                                                        },
                                                        {
                                                            "source": "distance_squared7.distance_squared",
                                                            "target": "less2.first"
                                                        },
                                                        {
                                                            "source": "less.output",
                                                            "target": ".output"
                                                        },
                                                        {
                                                            "source": "less1.output",
                                                            "target": ".output1"
                                                        },
                                                        {
                                                            "source": "less2.output",
                                                            "target": ".output2"
                                                        },
                                                        {
                                                            "source": ".point1",
                                                            "target": "distance_squared.point1"
                                                        },
                                                        {
                                                            "source": ".point2",
                                                            "target": "distance_squared6.point1"
                                                        },
                                                        {
                                                            "source": ".point3",
                                                            "target": "distance_squared7.point1"
                                                        },
                                                        {
                                                            "source": ".point_to_compare_against",
                                                            "target": "distance_squared.point2"
                                                        },
                                                        {
                                                            "source": ".point_to_compare_against",
                                                            "target": "distance_squared6.point2"
                                                        },
                                                        {
                                                            "source": ".point_to_compare_against",
                                                            "target": "distance_squared7.point2"
                                                        },
                                                        {
                                                            "source": ".radius_squared",
                                                            "target": "less.second"
                                                        },
                                                        {
                                                            "source": ".radius_squared",
                                                            "target": "less1.second"
                                                        },
                                                        {
                                                            "source": ".radius_squared",
                                                            "target": "less2.second"
                                                        }
                                                    ],
                                                    "values": []
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "and",
                                                    "nodeType": "Core::Logic::and",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 277"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "and1",
                                                    "nodeType": "Core::Logic::and",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 149"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "and2",
                                                    "nodeType": "Core::Logic::and",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 763"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "and3",
                                                    "nodeType": "Core::Logic::and",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 875"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "and4",
                                                    "nodeType": "Core::Logic::and",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 1249"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "and5",
                                                    "nodeType": "Core::Logic::and",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 1294"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "and6",
                                                    "nodeType": "Core::Logic::and",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 1735"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "three_midpoints",
                                                    "nodeType": "three_midpoints",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 325"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "is_too_close",
                                                    "nodeType": "is_too_close",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 520"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "is_too_close1",
                                                    "nodeType": "is_too_close1",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 488"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "value",
                                                    "valueType": "Math::float3x3",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 257"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "PortExpandedState",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metaType": "string",
                                                                    "metaValue": "1"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "value1",
                                                    "valueType": "Math::float3x3",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 10"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "PortExpandedState",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "value",
                                                                    "metaType": "string",
                                                                    "metaValue": "1"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "value2",
                                                    "valueType": "Math::float3x3",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 496"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "PortExpandedState",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "value",
                                                                    "metaType": "string",
                                                                    "metaValue": "1"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "value3",
                                                    "valueType": "Math::float3x3",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 982"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "PortExpandedState",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "value",
                                                                    "metaType": "string",
                                                                    "metaValue": "1"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "value4",
                                                    "valueType": "Math::float3x3",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 1468"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "PortExpandedState",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "value",
                                                                    "metaType": "string",
                                                                    "metaValue": "1"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "multiply",
                                                    "nodeType": "Core::Math::multiply",
                                                    "multiInPortNames": [
                                                        "radius",
                                                        "radius1"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "201.15 847.209"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "and.output",
                                                    "target": ".first_is_overlapping"
                                                },
                                                {
                                                    "source": "and1.output",
                                                    "target": "and.second"
                                                },
                                                {
                                                    "source": "and2.output",
                                                    "target": ".second_is_overlapping"
                                                },
                                                {
                                                    "source": "and3.output",
                                                    "target": "and2.second"
                                                },
                                                {
                                                    "source": "and4.output",
                                                    "target": ".third_is_overlapping"
                                                },
                                                {
                                                    "source": "and5.output",
                                                    "target": "and4.second"
                                                },
                                                {
                                                    "source": "and5.output",
                                                    "target": "and6.second"
                                                },
                                                {
                                                    "source": "and6.output",
                                                    "target": ".fourth_is_overlapping"
                                                },
                                                {
                                                    "source": "three_midpoints.midpoint_ab",
                                                    "target": "is_too_close.point_ab"
                                                },
                                                {
                                                    "source": "three_midpoints.midpoint_ab",
                                                    "target": "value1.value.c1"
                                                },
                                                {
                                                    "source": "three_midpoints.midpoint_ab",
                                                    "target": "value2.value.c1"
                                                },
                                                {
                                                    "source": "three_midpoints.midpoint_ab",
                                                    "target": "value4.value.c0"
                                                },
                                                {
                                                    "source": "three_midpoints.midpoint_ac",
                                                    "target": "is_too_close.point_ac"
                                                },
                                                {
                                                    "source": "three_midpoints.midpoint_ac",
                                                    "target": "value1.value.c2"
                                                },
                                                {
                                                    "source": "three_midpoints.midpoint_ac",
                                                    "target": "value3.value.c1"
                                                },
                                                {
                                                    "source": "three_midpoints.midpoint_ac",
                                                    "target": "value4.value.c1"
                                                },
                                                {
                                                    "source": "three_midpoints.midpoint_bc",
                                                    "target": "is_too_close.point_bc"
                                                },
                                                {
                                                    "source": "three_midpoints.midpoint_bc",
                                                    "target": "value2.value.c2"
                                                },
                                                {
                                                    "source": "three_midpoints.midpoint_bc",
                                                    "target": "value3.value.c2"
                                                },
                                                {
                                                    "source": "three_midpoints.midpoint_bc",
                                                    "target": "value4.value.c2"
                                                },
                                                {
                                                    "source": "is_too_close.too_close_ab",
                                                    "target": "and3.first"
                                                },
                                                {
                                                    "source": "is_too_close.too_close_ab",
                                                    "target": "and6.first"
                                                },
                                                {
                                                    "source": "is_too_close.too_close_ab",
                                                    "target": "and1.first"
                                                },
                                                {
                                                    "source": "is_too_close.too_close_ac",
                                                    "target": "and1.second"
                                                },
                                                {
                                                    "source": "is_too_close.too_close_ac",
                                                    "target": "and5.first"
                                                },
                                                {
                                                    "source": "is_too_close.too_close_bc",
                                                    "target": "and3.second"
                                                },
                                                {
                                                    "source": "is_too_close.too_close_bc",
                                                    "target": "and5.second"
                                                },
                                                {
                                                    "source": "is_too_close1.output",
                                                    "target": "and.first"
                                                },
                                                {
                                                    "source": "is_too_close1.output1",
                                                    "target": "and2.first"
                                                },
                                                {
                                                    "source": "is_too_close1.output2",
                                                    "target": "and4.first"
                                                },
                                                {
                                                    "source": "value.output.c0",
                                                    "target": "three_midpoints.c0"
                                                },
                                                {
                                                    "source": "value.output.c0",
                                                    "target": "is_too_close1.point1"
                                                },
                                                {
                                                    "source": "value.output.c0",
                                                    "target": "value1.value.c0"
                                                },
                                                {
                                                    "source": "value.output.c1",
                                                    "target": "three_midpoints.c1"
                                                },
                                                {
                                                    "source": "value.output.c1",
                                                    "target": "is_too_close1.point2"
                                                },
                                                {
                                                    "source": "value.output.c1",
                                                    "target": "value2.value.c0"
                                                },
                                                {
                                                    "source": "value.output.c2",
                                                    "target": "three_midpoints.c2"
                                                },
                                                {
                                                    "source": "value.output.c2",
                                                    "target": "is_too_close1.point3"
                                                },
                                                {
                                                    "source": "value.output.c2",
                                                    "target": "value3.value.c0"
                                                },
                                                {
                                                    "source": "value1.output",
                                                    "target": ".new_triangle_point_1"
                                                },
                                                {
                                                    "source": "value2.output",
                                                    "target": ".new_triangle_point_2"
                                                },
                                                {
                                                    "source": "value3.output",
                                                    "target": ".new_triangle_point_3"
                                                },
                                                {
                                                    "source": "value4.output",
                                                    "target": ".middle_triangle"
                                                },
                                                {
                                                    "source": "multiply.output",
                                                    "target": "is_too_close1.radius_squared"
                                                },
                                                {
                                                    "source": "multiply.output",
                                                    "target": "is_too_close.radius_squared"
                                                },
                                                {
                                                    "source": ".value",
                                                    "target": "value.value"
                                                },
                                                {
                                                    "source": ".point_to_compare_against",
                                                    "target": "is_too_close.point_to_compare_against"
                                                },
                                                {
                                                    "source": ".point_to_compare_against",
                                                    "target": "is_too_close1.point_to_compare_against"
                                                },
                                                {
                                                    "source": ".radius",
                                                    "target": "multiply.first.radius"
                                                },
                                                {
                                                    "source": ".radius",
                                                    "target": "multiply.first.radius1"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "is_too_close.point_ab",
                                                    "valueType": "Math::float3",
                                                    "value": {
                                                        "x": "0f",
                                                        "y": "0f",
                                                        "z": "0f"
                                                    }
                                                },
                                                {
                                                    "valueName": "is_too_close.point_ac",
                                                    "valueType": "Math::float3",
                                                    "value": {
                                                        "x": "0f",
                                                        "y": "0f",
                                                        "z": "0f"
                                                    }
                                                },
                                                {
                                                    "valueName": "is_too_close.point_bc",
                                                    "valueType": "Math::float3",
                                                    "value": {
                                                        "x": "0f",
                                                        "y": "0f",
                                                        "z": "0f"
                                                    }
                                                },
                                                {
                                                    "valueName": "is_too_close.radius_squared",
                                                    "valueType": "float",
                                                    "value": "0f"
                                                },
                                                {
                                                    "valueName": "is_too_close1.point1",
                                                    "valueType": "Math::float3",
                                                    "value": {
                                                        "x": "0f",
                                                        "y": "0f",
                                                        "z": "0f"
                                                    }
                                                },
                                                {
                                                    "valueName": "is_too_close1.point2",
                                                    "valueType": "Math::float3",
                                                    "value": {
                                                        "x": "0f",
                                                        "y": "0f",
                                                        "z": "0f"
                                                    }
                                                },
                                                {
                                                    "valueName": "is_too_close1.point3",
                                                    "valueType": "Math::float3",
                                                    "value": {
                                                        "x": "0f",
                                                        "y": "0f",
                                                        "z": "0f"
                                                    }
                                                },
                                                {
                                                    "valueName": "is_too_close1.radius_squared",
                                                    "valueType": "float",
                                                    "value": "0f"
                                                },
                                                {
                                                    "valueName": "value.value",
                                                    "valueType": "Math::float3x3",
                                                    "value": {
                                                        "c0": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c1": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c2": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        }
                                                    }
                                                },
                                                {
                                                    "valueName": "value1.value",
                                                    "valueType": "Math::float3x3",
                                                    "value": {
                                                        "c0": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c1": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c2": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        }
                                                    }
                                                },
                                                {
                                                    "valueName": "value2.value",
                                                    "valueType": "Math::float3x3",
                                                    "value": {
                                                        "c0": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c1": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c2": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        }
                                                    }
                                                },
                                                {
                                                    "valueName": "value3.value",
                                                    "valueType": "Math::float3x3",
                                                    "value": {
                                                        "c0": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c1": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c2": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        }
                                                    }
                                                },
                                                {
                                                    "valueName": "value4.value",
                                                    "valueType": "Math::float3x3",
                                                    "value": {
                                                        "c0": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c1": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c2": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "name": "force_sequence",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,resize_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,bitwise_xor"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,xor"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,array_size"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Constants,float"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "221.813 -154.719 1468.87 677.057"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input_a"
                                                                                },
                                                                                {
                                                                                    "metaName": "input_b"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output_a"
                                                                                },
                                                                                {
                                                                                    "metaName": "output_b"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "input_a",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "input_b",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "output_a",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "output_b",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "array_size",
                                                    "nodeType": "Core::Array::array_size",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "297 300"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "array_size1",
                                                    "nodeType": "Core::Array::array_size",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "307 78"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "bitwise_xor",
                                                    "nodeType": "Core::Math::bitwise_xor",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 186"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "resize_array",
                                                    "nodeType": "Core::Array::resize_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 253"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "bitwise_xor1",
                                                    "nodeType": "Core::Math::bitwise_xor",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 312"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "bitwise_xor2",
                                                    "nodeType": "Core::Math::bitwise_xor",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 53"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "resize_array1",
                                                    "nodeType": "Core::Array::resize_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 10"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "array_size.size",
                                                    "target": "bitwise_xor.second"
                                                },
                                                {
                                                    "source": "array_size.size",
                                                    "target": "bitwise_xor2.first"
                                                },
                                                {
                                                    "source": "array_size1.size",
                                                    "target": "bitwise_xor.first"
                                                },
                                                {
                                                    "source": "array_size1.size",
                                                    "target": "bitwise_xor1.first"
                                                },
                                                {
                                                    "source": "bitwise_xor.output",
                                                    "target": "bitwise_xor1.second"
                                                },
                                                {
                                                    "source": "bitwise_xor.output",
                                                    "target": "bitwise_xor2.second"
                                                },
                                                {
                                                    "source": "resize_array.resized",
                                                    "target": ".output_b"
                                                },
                                                {
                                                    "source": "bitwise_xor1.output",
                                                    "target": "resize_array.new_size"
                                                },
                                                {
                                                    "source": "bitwise_xor2.output",
                                                    "target": "resize_array1.new_size"
                                                },
                                                {
                                                    "source": "resize_array1.resized",
                                                    "target": ".output_a"
                                                },
                                                {
                                                    "source": ".input_a",
                                                    "target": "array_size1.array"
                                                },
                                                {
                                                    "source": ".input_a",
                                                    "target": "resize_array1.array"
                                                },
                                                {
                                                    "source": ".input_b",
                                                    "target": "array_size.array"
                                                },
                                                {
                                                    "source": ".input_b",
                                                    "target": "resize_array.array"
                                                }
                                            ],
                                            "values": []
                                        },
                                        {
                                            "name": "get_and_replace_with_empty",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "to_add_to"
                                                                                },
                                                                                {
                                                                                    "metaName": "triangle_bin_index"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "out_array"
                                                                                },
                                                                                {
                                                                                    "metaName": "value_at_index"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "to_add_to",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "triangle_bin_index",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "out_array",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "value_at_index",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "empty_array",
                                                    "nodeType": "Core::Array::empty_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 59"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "first_in_array",
                                                    "nodeType": "Core::Array::first_in_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 59"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 88"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "set_in_array1",
                                                    "nodeType": "Core::Array::set_in_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 10"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "empty_array.empty_array",
                                                    "target": "set_in_array1.value"
                                                },
                                                {
                                                    "source": "first_in_array.first",
                                                    "target": "empty_array.value_type"
                                                },
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": "first_in_array.array"
                                                },
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": ".value_at_index"
                                                },
                                                {
                                                    "source": "set_in_array1.out_array",
                                                    "target": ".out_array"
                                                },
                                                {
                                                    "source": ".to_add_to",
                                                    "target": "get_from_array.array"
                                                },
                                                {
                                                    "source": ".to_add_to",
                                                    "target": "set_in_array1.array"
                                                },
                                                {
                                                    "source": ".triangle_bin_index",
                                                    "target": "get_from_array.index"
                                                },
                                                {
                                                    "source": ".triangle_bin_index",
                                                    "target": "set_in_array1.index"
                                                }
                                            ],
                                            "values": []
                                        },
                                        {
                                            "name": "iterate",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,build_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,find_all_in_array"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "-86.6102 -11.0847 1058.3 580.62"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "to_add_to"
                                                                                },
                                                                                {
                                                                                    "metaName": "new_triangle"
                                                                                },
                                                                                {
                                                                                    "metaName": "is_overlapping"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "with_new_triangles"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "to_add_to",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "new_triangle",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "is_overlapping",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "with_new_triangles",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "if",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 10"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "build_array",
                                                    "nodeType": "Core::Array::build_array",
                                                    "multiInPortNames": [
                                                        "to_add_to",
                                                        "new_triangle"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 26"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "if.output",
                                                    "target": ".with_new_triangles"
                                                },
                                                {
                                                    "source": "build_array.array",
                                                    "target": "if.false_case"
                                                },
                                                {
                                                    "source": ".to_add_to",
                                                    "target": "if.true_case"
                                                },
                                                {
                                                    "source": ".to_add_to",
                                                    "target": "build_array.first.to_add_to"
                                                },
                                                {
                                                    "source": ".new_triangle",
                                                    "target": "build_array.first.new_triangle"
                                                },
                                                {
                                                    "source": ".is_overlapping",
                                                    "target": "if.condition"
                                                }
                                            ],
                                            "values": [],
                                            "iterateCompound": {
                                                "ports": [
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "to_add_to",
                                                        "outputPortName": "with_new_triangles"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "name": "iterate1",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,build_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,find_all_in_array"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "-70 -194.887 1301 713.774"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "to_add_to"
                                                                                },
                                                                                {
                                                                                    "metaName": "new_triangle"
                                                                                },
                                                                                {
                                                                                    "metaName": "is_overlapping"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "with_new_triangles"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "to_add_to",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "new_triangle",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "is_overlapping",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "with_new_triangles",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "if",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 22"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "build_array",
                                                    "nodeType": "Core::Array::build_array",
                                                    "multiInPortNames": [
                                                        "to_add_to",
                                                        "new_triangle"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 106"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "if.output",
                                                    "target": ".with_new_triangles"
                                                },
                                                {
                                                    "source": "build_array.array",
                                                    "target": "if.false_case"
                                                },
                                                {
                                                    "source": ".to_add_to",
                                                    "target": "if.true_case"
                                                },
                                                {
                                                    "source": ".to_add_to",
                                                    "target": "build_array.first.to_add_to"
                                                },
                                                {
                                                    "source": ".new_triangle",
                                                    "target": "build_array.first.new_triangle"
                                                },
                                                {
                                                    "source": ".is_overlapping",
                                                    "target": "if.condition"
                                                }
                                            ],
                                            "values": [],
                                            "iterateCompound": {
                                                "ports": [
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "to_add_to",
                                                        "outputPortName": "with_new_triangles"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "name": "iterate2",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,build_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,find_all_in_array"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "-70 -186.887 1301 713.774"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "to_add_to"
                                                                                },
                                                                                {
                                                                                    "metaName": "new_triangle"
                                                                                },
                                                                                {
                                                                                    "metaName": "is_overlapping"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "with_new_triangles"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "to_add_to",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "new_triangle",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "is_overlapping",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "with_new_triangles",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "if",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 22"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "build_array",
                                                    "nodeType": "Core::Array::build_array",
                                                    "multiInPortNames": [
                                                        "to_add_to",
                                                        "new_triangle"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 106"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "if.output",
                                                    "target": ".with_new_triangles"
                                                },
                                                {
                                                    "source": "build_array.array",
                                                    "target": "if.false_case"
                                                },
                                                {
                                                    "source": ".to_add_to",
                                                    "target": "if.true_case"
                                                },
                                                {
                                                    "source": ".to_add_to",
                                                    "target": "build_array.first.to_add_to"
                                                },
                                                {
                                                    "source": ".new_triangle",
                                                    "target": "build_array.first.new_triangle"
                                                },
                                                {
                                                    "source": ".is_overlapping",
                                                    "target": "if.condition"
                                                }
                                            ],
                                            "values": [],
                                            "iterateCompound": {
                                                "ports": [
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "to_add_to",
                                                        "outputPortName": "with_new_triangles"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "name": "iterate3",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,build_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,find_all_in_array"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "-70 -194.887 1301 713.774"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "to_add_to"
                                                                                },
                                                                                {
                                                                                    "metaName": "new_triangle"
                                                                                },
                                                                                {
                                                                                    "metaName": "is_overlapping"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "with_new_triangles"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "to_add_to",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "new_triangle",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "is_overlapping",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "with_new_triangles",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "if",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 22"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "build_array",
                                                    "nodeType": "Core::Array::build_array",
                                                    "multiInPortNames": [
                                                        "to_add_to",
                                                        "new_triangle"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 106"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "if.output",
                                                    "target": ".with_new_triangles"
                                                },
                                                {
                                                    "source": "build_array.array",
                                                    "target": "if.false_case"
                                                },
                                                {
                                                    "source": ".to_add_to",
                                                    "target": "if.true_case"
                                                },
                                                {
                                                    "source": ".to_add_to",
                                                    "target": "build_array.first.to_add_to"
                                                },
                                                {
                                                    "source": ".new_triangle",
                                                    "target": "build_array.first.new_triangle"
                                                },
                                                {
                                                    "source": ".is_overlapping",
                                                    "target": "if.condition"
                                                }
                                            ],
                                            "values": [],
                                            "iterateCompound": {
                                                "ports": [
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "to_add_to",
                                                        "outputPortName": "with_new_triangles"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "split_triangle",
                                            "nodeType": "split_triangle",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 376"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "set_in_array",
                                            "nodeType": "Core::Array::set_in_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2145 436"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "force_sequence",
                                            "nodeType": "force_sequence",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 9"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "get_and_replace_with_empty",
                                            "nodeType": "get_and_replace_with_empty",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 70"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "iterate",
                                            "nodeType": "iterate",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 179"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "iterate1",
                                            "nodeType": "iterate1",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 248"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "iterate2",
                                            "nodeType": "iterate2",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 358"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "iterate3",
                                            "nodeType": "iterate3",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1840 535"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "split_triangle.new_triangle_point_1",
                                            "target": "iterate.new_triangle"
                                        },
                                        {
                                            "source": "split_triangle.first_is_overlapping",
                                            "target": "iterate.is_overlapping"
                                        },
                                        {
                                            "source": "split_triangle.new_triangle_point_2",
                                            "target": "iterate1.new_triangle"
                                        },
                                        {
                                            "source": "split_triangle.second_is_overlapping",
                                            "target": "iterate1.is_overlapping"
                                        },
                                        {
                                            "source": "split_triangle.new_triangle_point_3",
                                            "target": "iterate2.new_triangle"
                                        },
                                        {
                                            "source": "split_triangle.third_is_overlapping",
                                            "target": "iterate2.is_overlapping"
                                        },
                                        {
                                            "source": "split_triangle.middle_triangle",
                                            "target": "iterate3.new_triangle"
                                        },
                                        {
                                            "source": "split_triangle.fourth_is_overlapping",
                                            "target": "iterate3.is_overlapping"
                                        },
                                        {
                                            "source": "set_in_array.out_array",
                                            "target": ".output"
                                        },
                                        {
                                            "source": "force_sequence.output_a",
                                            "target": "set_in_array.array"
                                        },
                                        {
                                            "source": "force_sequence.output_b",
                                            "target": "iterate.to_add_to"
                                        },
                                        {
                                            "source": "get_and_replace_with_empty.out_array",
                                            "target": "force_sequence.input_a"
                                        },
                                        {
                                            "source": "get_and_replace_with_empty.value_at_index",
                                            "target": "force_sequence.input_b"
                                        },
                                        {
                                            "source": "iterate.with_new_triangles",
                                            "target": "iterate1.to_add_to"
                                        },
                                        {
                                            "source": "iterate1.with_new_triangles",
                                            "target": "iterate2.to_add_to"
                                        },
                                        {
                                            "source": "iterate2.with_new_triangles",
                                            "target": "iterate3.to_add_to"
                                        },
                                        {
                                            "source": "iterate3.with_new_triangles",
                                            "target": "set_in_array.value"
                                        },
                                        {
                                            "source": ".to_add_to",
                                            "target": "get_and_replace_with_empty.to_add_to"
                                        },
                                        {
                                            "source": ".value",
                                            "target": "split_triangle.value"
                                        },
                                        {
                                            "source": ".triangle_bin_index",
                                            "target": "set_in_array.index"
                                        },
                                        {
                                            "source": ".triangle_bin_index",
                                            "target": "get_and_replace_with_empty.triangle_bin_index"
                                        },
                                        {
                                            "source": ".point_to_compare_against",
                                            "target": "split_triangle.point_to_compare_against"
                                        },
                                        {
                                            "source": ".radius",
                                            "target": "split_triangle.radius"
                                        }
                                    ],
                                    "values": []
                                },
                                {
                                    "name": "do_while1",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,not"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,equal"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,array_size"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,subtract"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "1089.77 -62.1475 1162.29 535.744"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "max_iterations"
                                                                        },
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "output"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "looping_condition"
                                                                        },
                                                                        {
                                                                            "metaName": "found_non_empty"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "max_iterations",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationLimit": "true"
                                        },
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "output",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "found_non_empty",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "subtract",
                                            "nodeType": "Core::Math::subtract",
                                            "multiInPortNames": [
                                                "max_iterations",
                                                "current_index",
                                                "output1"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 99"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "value",
                                            "valueType": "long",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "10 252"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "1"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "get_from_array",
                                            "nodeType": "Core::Array::get_from_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 98"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "array_size",
                                            "nodeType": "Core::Array::array_size",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 106"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "equal",
                                            "nodeType": "Core::Logic::equal",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 118"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "not",
                                            "nodeType": "Core::Logic::not",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 158"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "subtract.output",
                                            "target": "get_from_array.index"
                                        },
                                        {
                                            "source": "value.output",
                                            "target": "subtract.first.output1"
                                        },
                                        {
                                            "source": "get_from_array.value",
                                            "target": "array_size.array"
                                        },
                                        {
                                            "source": "array_size.size",
                                            "target": "equal.first"
                                        },
                                        {
                                            "source": "equal.output",
                                            "target": ".looping_condition"
                                        },
                                        {
                                            "source": "equal.output",
                                            "target": "not.value"
                                        },
                                        {
                                            "source": "not.output",
                                            "target": ".found_non_empty"
                                        },
                                        {
                                            "source": ".max_iterations",
                                            "target": "subtract.first.max_iterations"
                                        },
                                        {
                                            "source": ".current_index",
                                            "target": "subtract.first.current_index"
                                        },
                                        {
                                            "source": ".output",
                                            "target": "get_from_array.array"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "value.value",
                                            "valueType": "long",
                                            "value": "1"
                                        }
                                    ],
                                    "whileCompound": {
                                        "ports": []
                                    }
                                },
                                {
                                    "name": "get_only_new_points",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,build_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,if"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,find_all_in_array"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "8.74288 -82.5365 1319.34 723.838"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "to_add_to"
                                                                        },
                                                                        {
                                                                            "metaName": "new_points"
                                                                        },
                                                                        {
                                                                            "metaName": "is_blocked"
                                                                        },
                                                                        {
                                                                            "metaName": "original_indices_state"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "non_overlapping_points"
                                                                        },
                                                                        {
                                                                            "metaName": "original_indices"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "to_add_to",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "new_points",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "is_blocked",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "original_indices_state",
                                            "portDirection": "input",
                                            "portType": "array<long>"
                                        },
                                        {
                                            "portName": "non_overlapping_points",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "original_indices",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "if",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 22"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "build_array",
                                            "nodeType": "Core::Array::build_array",
                                            "multiInPortNames": [
                                                "to_add_to",
                                                "new_triangle"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 90"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if1",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "580 228"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "build_array1",
                                            "nodeType": "Core::Array::build_array",
                                            "multiInPortNames": [
                                                "original_indices",
                                                "current_index"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "217 296"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "if.output",
                                            "target": ".non_overlapping_points"
                                        },
                                        {
                                            "source": "build_array.array",
                                            "target": "if.false_case"
                                        },
                                        {
                                            "source": "if1.output",
                                            "target": ".original_indices"
                                        },
                                        {
                                            "source": "build_array1.array",
                                            "target": "if1.false_case"
                                        },
                                        {
                                            "source": ".current_index",
                                            "target": "build_array1.first.current_index"
                                        },
                                        {
                                            "source": ".to_add_to",
                                            "target": "if.true_case"
                                        },
                                        {
                                            "source": ".to_add_to",
                                            "target": "build_array.first.to_add_to"
                                        },
                                        {
                                            "source": ".new_points",
                                            "target": "build_array.first.new_triangle"
                                        },
                                        {
                                            "source": ".is_blocked",
                                            "target": "if.condition"
                                        },
                                        {
                                            "source": ".is_blocked",
                                            "target": "if1.condition"
                                        },
                                        {
                                            "source": ".original_indices_state",
                                            "target": "if1.true_case"
                                        },
                                        {
                                            "source": ".original_indices_state",
                                            "target": "build_array1.first.original_indices"
                                        }
                                    ],
                                    "values": [],
                                    "iterateCompound": {
                                        "ports": [
                                            {
                                                "portKind": "state",
                                                "inputPortName": "to_add_to",
                                                "outputPortName": "non_overlapping_points"
                                            },
                                            {
                                                "portKind": "state",
                                                "inputPortName": "original_indices_state",
                                                "outputPortName": "original_indices"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "pick_biggest_triangles",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,resize_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Graph,pass"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Iterators,do_while"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,first_in_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,empty_array"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "-17.6721 -22.6777 1868.17 861.111"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "triangles"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "new_triangles"
                                                                        },
                                                                        {
                                                                            "metaName": "picked_triangle"
                                                                        },
                                                                        {
                                                                            "metaName": "subdivided_triangle_bin"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "triangles",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "new_triangles",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "picked_triangle",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "subdivided_triangle_bin",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compounds": [
                                        {
                                            "name": "get_and_replace_with_empty",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "504.262 -233.341 1427.01 900.177"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "array"
                                                                                },
                                                                                {
                                                                                    "metaName": "index"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "out_array"
                                                                                },
                                                                                {
                                                                                    "metaName": "value"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "array",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "index",
                                                    "portDirection": "input",
                                                    "portType": "long"
                                                },
                                                {
                                                    "portName": "out_array",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "value",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "empty_array",
                                                    "nodeType": "Core::Array::empty_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "874.639 87.8587"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "first_in_array",
                                                    "nodeType": "Core::Array::first_in_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "569.639 128.859"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "264.639 234.859"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "set_in_array",
                                                    "nodeType": "Core::Array::set_in_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1179.64 -5.14131"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "empty_array.empty_array",
                                                    "target": "set_in_array.value"
                                                },
                                                {
                                                    "source": "first_in_array.first",
                                                    "target": "empty_array.value_type"
                                                },
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": "first_in_array.array"
                                                },
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": ".value"
                                                },
                                                {
                                                    "source": "set_in_array.out_array",
                                                    "target": ".out_array"
                                                },
                                                {
                                                    "source": ".array",
                                                    "target": "get_from_array.array"
                                                },
                                                {
                                                    "source": ".array",
                                                    "target": "set_in_array.array"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "get_from_array.index"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "set_in_array.index"
                                                }
                                            ],
                                            "values": []
                                        },
                                        {
                                            "name": "force_sequence1",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,resize_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,bitwise_xor"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,xor"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,array_size"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Constants,float"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "-39.4452 -427.859 1767.92 1115.23"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "input_a"
                                                                                },
                                                                                {
                                                                                    "metaName": "input_b"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output_a"
                                                                                },
                                                                                {
                                                                                    "metaName": "output_b"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "input_a",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "input_b",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "output_a",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "output_b",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "array_size",
                                                    "nodeType": "Core::Array::array_size",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "297 300"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "array_size1",
                                                    "nodeType": "Core::Array::array_size",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "307 78"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "bitwise_xor",
                                                    "nodeType": "Core::Math::bitwise_xor",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 186"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "resize_array",
                                                    "nodeType": "Core::Array::resize_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 253"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "bitwise_xor1",
                                                    "nodeType": "Core::Math::bitwise_xor",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 312"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "bitwise_xor2",
                                                    "nodeType": "Core::Math::bitwise_xor",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 53"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "resize_array1",
                                                    "nodeType": "Core::Array::resize_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 10"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "array_size.size",
                                                    "target": "bitwise_xor.second"
                                                },
                                                {
                                                    "source": "array_size.size",
                                                    "target": "bitwise_xor2.first"
                                                },
                                                {
                                                    "source": "array_size1.size",
                                                    "target": "bitwise_xor.first"
                                                },
                                                {
                                                    "source": "array_size1.size",
                                                    "target": "bitwise_xor1.first"
                                                },
                                                {
                                                    "source": "bitwise_xor.output",
                                                    "target": "bitwise_xor1.second"
                                                },
                                                {
                                                    "source": "bitwise_xor.output",
                                                    "target": "bitwise_xor2.second"
                                                },
                                                {
                                                    "source": "resize_array.resized",
                                                    "target": ".output_b"
                                                },
                                                {
                                                    "source": "bitwise_xor1.output",
                                                    "target": "resize_array.new_size"
                                                },
                                                {
                                                    "source": "bitwise_xor2.output",
                                                    "target": "resize_array1.new_size"
                                                },
                                                {
                                                    "source": "resize_array1.resized",
                                                    "target": ".output_a"
                                                },
                                                {
                                                    "source": ".input_a",
                                                    "target": "array_size1.array"
                                                },
                                                {
                                                    "source": ".input_a",
                                                    "target": "resize_array1.array"
                                                },
                                                {
                                                    "source": ".input_b",
                                                    "target": "array_size.array"
                                                },
                                                {
                                                    "source": ".input_b",
                                                    "target": "resize_array.array"
                                                }
                                            ],
                                            "values": []
                                        },
                                        {
                                            "name": "do_while",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,array_is_empty"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,subtract"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Iterators,do_while"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,resize_array"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "-29.1245 -141.518 1537.54 708.709"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "max_iterations"
                                                                                },
                                                                                {
                                                                                    "metaName": "current_index"
                                                                                },
                                                                                {
                                                                                    "metaName": "triangles"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "looping_condition"
                                                                                },
                                                                                {
                                                                                    "metaName": "selected_index"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "max_iterations",
                                                    "portDirection": "input",
                                                    "portType": "long",
                                                    "portIterationLimit": "true"
                                                },
                                                {
                                                    "portName": "current_index",
                                                    "portDirection": "input",
                                                    "portType": "long",
                                                    "portIterationCounter": "true"
                                                },
                                                {
                                                    "portName": "triangles",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "selected_index",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "subtract",
                                                    "nodeType": "Core::Math::subtract",
                                                    "multiInPortNames": [
                                                        "max_iterations",
                                                        "current_index",
                                                        "output1"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 100"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "value",
                                                    "valueType": "long",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "10 252"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "1"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 16"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "array_is_empty",
                                                    "nodeType": "Core::Array::array_is_empty",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 68"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "subtract.output",
                                                    "target": "get_from_array.index"
                                                },
                                                {
                                                    "source": "subtract.output",
                                                    "target": ".selected_index"
                                                },
                                                {
                                                    "source": "value.output",
                                                    "target": "subtract.first.output1"
                                                },
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": "array_is_empty.array"
                                                },
                                                {
                                                    "source": "array_is_empty.empty",
                                                    "target": ".looping_condition"
                                                },
                                                {
                                                    "source": ".max_iterations",
                                                    "target": "subtract.first.max_iterations"
                                                },
                                                {
                                                    "source": ".current_index",
                                                    "target": "subtract.first.current_index"
                                                },
                                                {
                                                    "source": ".triangles",
                                                    "target": "get_from_array.array"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "value.value",
                                                    "valueType": "long",
                                                    "value": "1"
                                                }
                                            ],
                                            "whileCompound": {
                                                "ports": []
                                            }
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "array_size",
                                            "nodeType": "Core::Array::array_size",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 337"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "decrement",
                                            "nodeType": "Core::Math::decrement",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 312"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "get_and_replace_with_empty",
                                            "nodeType": "get_and_replace_with_empty",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 171"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "force_sequence1",
                                            "nodeType": "force_sequence1",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 114"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "do_while",
                                            "nodeType": "do_while",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 330"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "resize_array",
                                            "nodeType": "Core::Array::resize_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 9"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "array_size.size",
                                            "target": "do_while.max_iterations"
                                        },
                                        {
                                            "source": "decrement.output",
                                            "target": ".subdivided_triangle_bin"
                                        },
                                        {
                                            "source": "get_and_replace_with_empty.out_array",
                                            "target": "force_sequence1.input_a"
                                        },
                                        {
                                            "source": "get_and_replace_with_empty.value",
                                            "target": "force_sequence1.input_b"
                                        },
                                        {
                                            "source": "force_sequence1.output_a",
                                            "target": "resize_array.array"
                                        },
                                        {
                                            "source": "force_sequence1.output_b",
                                            "target": ".picked_triangle"
                                        },
                                        {
                                            "source": "do_while.selected_index",
                                            "target": "decrement.value"
                                        },
                                        {
                                            "source": "do_while.selected_index",
                                            "target": "get_and_replace_with_empty.index"
                                        },
                                        {
                                            "source": "do_while.selected_index",
                                            "target": "resize_array.new_size"
                                        },
                                        {
                                            "source": "resize_array.resized",
                                            "target": ".new_triangles"
                                        },
                                        {
                                            "source": ".triangles",
                                            "target": "array_size.array"
                                        },
                                        {
                                            "source": ".triangles",
                                            "target": "do_while.triangles"
                                        },
                                        {
                                            "source": ".triangles",
                                            "target": "get_and_replace_with_empty.array"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "decrement.by",
                                            "valueType": "char",
                                            "value": "1"
                                        },
                                        {
                                            "valueName": "get_and_replace_with_empty.index",
                                            "valueType": "long",
                                            "value": "0"
                                        },
                                        {
                                            "valueName": "do_while.max_iterations",
                                            "valueType": "long",
                                            "value": "10"
                                        }
                                    ]
                                },
                                {
                                    "name": "get_non_overlapping_among_new_points",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Diagnostic::Profiling,profiler_end"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Diagnostic::Profiling,profiler_start"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,and"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,greater"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,multiply"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "628.352 31.3961 1275.38 699.719"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "point_position"
                                                                        },
                                                                        {
                                                                            "metaName": "radius"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "new_or_blocking_points"
                                                                        },
                                                                        {
                                                                            "metaName": "only_new_points"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "point_position",
                                            "portDirection": "input",
                                            "portType": "array<Math::float3>"
                                        },
                                        {
                                            "portName": "radius",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "new_or_blocking_points",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "only_new_points",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compounds": [
                                        {
                                            "name": "for_each",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,array_size"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Iterators,do_while"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,less"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,equal"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Constants,numeric_max"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "9.70479 -147.623 1425.66 782.169"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "current_index"
                                                                                },
                                                                                {
                                                                                    "metaName": "value"
                                                                                },
                                                                                {
                                                                                    "metaName": "points"
                                                                                },
                                                                                {
                                                                                    "metaName": "radius"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "overlapping_id"
                                                                                },
                                                                                {
                                                                                    "metaName": "found_other"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "current_index",
                                                    "portDirection": "input",
                                                    "portType": "long",
                                                    "portIterationCounter": "true"
                                                },
                                                {
                                                    "portName": "value",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "points",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "radius",
                                                    "portDirection": "input",
                                                    "portType": "float"
                                                },
                                                {
                                                    "portName": "overlapping_id",
                                                    "portDirection": "output",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "found_other",
                                                    "portDirection": "output",
                                                    "portIterationTarget": "true"
                                                }
                                            ],
                                            "compounds": [
                                                {
                                                    "name": "do_while",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "icon",
                                                            "metaType": "string",
                                                            "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                        },
                                                        {
                                                            "metaName": "icon",
                                                            "metaType": "string",
                                                            "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                        },
                                                        {
                                                            "metaName": "icon",
                                                            "metaType": "string",
                                                            "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Logic,if"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Logic,not"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Logic,less"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Array,array_size"
                                                        },
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "91.0414 -210.877 1454 984.697"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "max_iterations"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "current_index"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "point_index"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "compare_index"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "looping_condition"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "overlapping_index"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "found_other"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "max_iterations",
                                                            "portDirection": "input",
                                                            "portType": "long",
                                                            "portIterationLimit": "true"
                                                        },
                                                        {
                                                            "portName": "current_index",
                                                            "portDirection": "input",
                                                            "portType": "long",
                                                            "portIterationCounter": "true"
                                                        },
                                                        {
                                                            "portName": "point_index",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "compare_index",
                                                            "portDirection": "input",
                                                            "portType": "long"
                                                        },
                                                        {
                                                            "portName": "overlapping_index",
                                                            "portDirection": "output"
                                                        },
                                                        {
                                                            "portName": "found_other",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "get_from_array",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 236"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "less",
                                                            "nodeType": "Core::Logic::less",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 118"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "not",
                                                            "nodeType": "Core::Logic::not",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 9"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "if",
                                                            "nodeType": "Core::Logic::if",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 204"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "get_from_array.value",
                                                            "target": "less.first"
                                                        },
                                                        {
                                                            "source": "get_from_array.value",
                                                            "target": "if.true_case"
                                                        },
                                                        {
                                                            "source": "less.output",
                                                            "target": "not.value"
                                                        },
                                                        {
                                                            "source": "less.output",
                                                            "target": ".found_other"
                                                        },
                                                        {
                                                            "source": "less.output",
                                                            "target": "if.condition"
                                                        },
                                                        {
                                                            "source": "not.output",
                                                            "target": ".looping_condition"
                                                        },
                                                        {
                                                            "source": "if.output",
                                                            "target": ".overlapping_index"
                                                        },
                                                        {
                                                            "source": ".current_index",
                                                            "target": "get_from_array.index"
                                                        },
                                                        {
                                                            "source": ".point_index",
                                                            "target": "get_from_array.array"
                                                        },
                                                        {
                                                            "source": ".compare_index",
                                                            "target": "less.second"
                                                        },
                                                        {
                                                            "source": ".compare_index",
                                                            "target": "if.false_case"
                                                        }
                                                    ],
                                                    "values": [],
                                                    "whileCompound": {
                                                        "ports": []
                                                    }
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "sample_closest_in_radius_accelerator",
                                                    "nodeType": "Geometry::Query::sample_closest_in_radius_accelerator",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 29"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "do_while",
                                                    "nodeType": "do_while",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 160"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "array_size",
                                                    "nodeType": "Core::Array::array_size",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 9"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "sample_closest_in_radius_accelerator.point_index",
                                                    "target": "array_size.array"
                                                },
                                                {
                                                    "source": "sample_closest_in_radius_accelerator.point_index",
                                                    "target": "do_while.point_index"
                                                },
                                                {
                                                    "source": "do_while.overlapping_index",
                                                    "target": ".overlapping_id"
                                                },
                                                {
                                                    "source": "do_while.found_other",
                                                    "target": ".found_other"
                                                },
                                                {
                                                    "source": "array_size.size",
                                                    "target": "do_while.max_iterations"
                                                },
                                                {
                                                    "source": ".current_index",
                                                    "target": "do_while.compare_index"
                                                },
                                                {
                                                    "source": ".value",
                                                    "target": "sample_closest_in_radius_accelerator.position"
                                                },
                                                {
                                                    "source": ".points",
                                                    "target": "sample_closest_in_radius_accelerator.accelerator"
                                                },
                                                {
                                                    "source": ".radius",
                                                    "target": "sample_closest_in_radius_accelerator.radius"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "do_while.max_iterations",
                                                    "valueType": "long",
                                                    "value": "10"
                                                }
                                            ],
                                            "forEachCompound": {
                                                "ports": [],
                                                "grainSize": "1"
                                            }
                                        },
                                        {
                                            "name": "iterate2",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,build_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,find_all_in_array"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "11.1183 -111.766 1155.92 532.808"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "current_index"
                                                                                },
                                                                                {
                                                                                    "metaName": "to_add_to"
                                                                                },
                                                                                {
                                                                                    "metaName": "new_points"
                                                                                },
                                                                                {
                                                                                    "metaName": "is_overlapping"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "non_overlapping_points"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "current_index",
                                                    "portDirection": "input",
                                                    "portType": "long",
                                                    "portIterationCounter": "true"
                                                },
                                                {
                                                    "portName": "to_add_to",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "new_points",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "is_overlapping",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "non_overlapping_points",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "if",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 22"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "build_array",
                                                    "nodeType": "Core::Array::build_array",
                                                    "multiInPortNames": [
                                                        "to_add_to",
                                                        "new_triangle"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 90"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "if.output",
                                                    "target": ".non_overlapping_points"
                                                },
                                                {
                                                    "source": "build_array.array",
                                                    "target": "if.false_case"
                                                },
                                                {
                                                    "source": ".to_add_to",
                                                    "target": "if.true_case"
                                                },
                                                {
                                                    "source": ".to_add_to",
                                                    "target": "build_array.first.to_add_to"
                                                },
                                                {
                                                    "source": ".new_points",
                                                    "target": "build_array.first.new_triangle"
                                                },
                                                {
                                                    "source": ".is_overlapping",
                                                    "target": "if.condition"
                                                }
                                            ],
                                            "values": [],
                                            "iterateCompound": {
                                                "ports": [
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "to_add_to",
                                                        "outputPortName": "non_overlapping_points"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "name": "walk_chain",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Iterators,do_while"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Iterators,for_each"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,multiply"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "115.557 -40.65 781.438 360.194"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "current_index"
                                                                                },
                                                                                {
                                                                                    "metaName": "overlapping_points"
                                                                                },
                                                                                {
                                                                                    "metaName": "overlapping_points1"
                                                                                },
                                                                                {
                                                                                    "metaName": "point_position"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "overlapping_point"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "backdrop",
                                                    "metadata": [
                                                        {
                                                            "metaName": "type",
                                                            "metaType": "string",
                                                            "metaValue": "backdrop"
                                                        },
                                                        {
                                                            "metaName": "text",
                                                            "metaType": "string",
                                                            "metaValue": "if point 5 is blocked by point 3 and point 3\nin turn is blocked by 2, then both point 3 and\npoint 5 will be removed. but further down the\nchain, when we're cutting triangles, we have to\nmake sure that we don't accidentally compare\nagainst point 3. so for point 5 we have to return\npoint 2 from this function. even if that one is too\nfar away. meaning we might accidentally keep\ntoo many triangles. but that's a better mistake to\nmake than to cut too many triangles. keeping too\nmany triangles will be fixed in the next outer loop\niteration. removing too many triangles can not be\nfixed later"
                                                        },
                                                        {
                                                            "metaName": "coords",
                                                            "metaType": "string",
                                                            "metaValue": "296.472 -117.158 267.398 433.411"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "current_index",
                                                    "portDirection": "input",
                                                    "portType": "long",
                                                    "portIterationCounter": "true"
                                                },
                                                {
                                                    "portName": "overlapping_points",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "overlapping_points1",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "point_position",
                                                    "portDirection": "input",
                                                    "portType": "array<Math::float3>"
                                                },
                                                {
                                                    "portName": "overlapping_point",
                                                    "portDirection": "output",
                                                    "portIterationTarget": "true"
                                                }
                                            ],
                                            "compounds": [
                                                {
                                                    "name": "walk_chain_to_end",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "icon",
                                                            "metaType": "string",
                                                            "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                        },
                                                        {
                                                            "metaName": "icon",
                                                            "metaType": "string",
                                                            "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                        },
                                                        {
                                                            "metaName": "icon",
                                                            "metaType": "string",
                                                            "metaValue": "<NATIVE>../icons/LoopDo_While.svg"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Logic,not"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Logic,equal"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Iterators,do_while"
                                                        },
                                                        {
                                                            "metaName": "_recentNode_",
                                                            "metaType": "string",
                                                            "metaValue": "BifrostGraph,Core::Iterators,for_each"
                                                        },
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "-398.186 -141.368 1298.07 598.33"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "current_index"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "overlapping_points1"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "overlapping_points"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "looping_condition"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "value"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "current_index",
                                                            "portDirection": "input",
                                                            "portType": "long",
                                                            "portIterationCounter": "true"
                                                        },
                                                        {
                                                            "portName": "overlapping_points1",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "overlapping_points",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "value",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "get_from_array",
                                                            "nodeType": "Core::Array::get_from_array",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "-28.7079 50.4288"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "equal",
                                                            "nodeType": "Core::Logic::equal",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "244.57 148.398"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "not",
                                                            "nodeType": "Core::Logic::not",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "528.077 151.806"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "get_from_array.value",
                                                            "target": "equal.first"
                                                        },
                                                        {
                                                            "source": "get_from_array.value",
                                                            "target": ".value"
                                                        },
                                                        {
                                                            "source": "equal.output",
                                                            "target": "not.value"
                                                        },
                                                        {
                                                            "source": "not.output",
                                                            "target": ".looping_condition"
                                                        },
                                                        {
                                                            "source": ".overlapping_points1",
                                                            "target": "get_from_array.array"
                                                        },
                                                        {
                                                            "source": ".overlapping_points",
                                                            "target": "get_from_array.index"
                                                        },
                                                        {
                                                            "source": ".overlapping_points",
                                                            "target": "equal.second"
                                                        }
                                                    ],
                                                    "values": [],
                                                    "whileCompound": {
                                                        "ports": [
                                                            {
                                                                "portKind": "state",
                                                                "inputPortName": "overlapping_points",
                                                                "outputPortName": "value"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "walk_chain_to_end",
                                                    "nodeType": "walk_chain_to_end",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 75"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 33"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "walk_chain_to_end.value",
                                                    "target": "get_from_array.index"
                                                },
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": ".overlapping_point"
                                                },
                                                {
                                                    "source": ".overlapping_points",
                                                    "target": "walk_chain_to_end.overlapping_points"
                                                },
                                                {
                                                    "source": ".overlapping_points1",
                                                    "target": "walk_chain_to_end.overlapping_points1"
                                                },
                                                {
                                                    "source": ".point_position",
                                                    "target": "get_from_array.array"
                                                }
                                            ],
                                            "values": [],
                                            "forEachCompound": {
                                                "ports": [],
                                                "grainSize": "1"
                                            }
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "for_each",
                                            "nodeType": "for_each",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 173"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "iterate2",
                                            "nodeType": "iterate2",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 324"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "walk_chain",
                                            "nodeType": "walk_chain",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 9"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "build_closest_accelerator",
                                            "nodeType": "Geometry::Query::build_closest_accelerator",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 316"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "construct_points",
                                            "nodeType": "Geometry::Points::construct_points",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 414"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "for_each.overlapping_id",
                                            "target": "walk_chain.overlapping_points"
                                        },
                                        {
                                            "source": "for_each.overlapping_id",
                                            "target": "walk_chain.overlapping_points1"
                                        },
                                        {
                                            "source": "for_each.found_other",
                                            "target": "iterate2.is_overlapping"
                                        },
                                        {
                                            "source": "iterate2.non_overlapping_points",
                                            "target": ".only_new_points"
                                        },
                                        {
                                            "source": "walk_chain.overlapping_point",
                                            "target": ".new_or_blocking_points"
                                        },
                                        {
                                            "source": "build_closest_accelerator.accelerator",
                                            "target": "for_each.points"
                                        },
                                        {
                                            "source": "construct_points.points",
                                            "target": "build_closest_accelerator.geo"
                                        },
                                        {
                                            "source": ".point_position",
                                            "target": "construct_points.point_position"
                                        },
                                        {
                                            "source": ".point_position",
                                            "target": "for_each.value"
                                        },
                                        {
                                            "source": ".point_position",
                                            "target": "iterate2.new_points"
                                        },
                                        {
                                            "source": ".point_position",
                                            "target": "walk_chain.point_position"
                                        },
                                        {
                                            "source": ".radius",
                                            "target": "for_each.radius"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "for_each.radius",
                                            "valueType": "float",
                                            "value": "0f"
                                        },
                                        {
                                            "valueName": "build_closest_accelerator.geo_component",
                                            "valueType": "string",
                                            "value": "point_component"
                                        }
                                    ]
                                },
                                {
                                    "name": "random_point_in_triangle",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Constants,float"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,add"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Iterators,for_each"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,and"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,less"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "-37.4668 -151.987 1154.91 633.625"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "picked_triangle"
                                                                        },
                                                                        {
                                                                            "metaName": "index"
                                                                        },
                                                                        {
                                                                            "metaName": "seed"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "random_point"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "picked_triangle",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "index",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "seed",
                                            "portDirection": "input",
                                            "portType": "long"
                                        },
                                        {
                                            "portName": "random_point",
                                            "portDirection": "output",
                                            "portIterationTarget": "true"
                                        }
                                    ],
                                    "compounds": [
                                        {
                                            "name": "random_point_in_triangle",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "679.203 -1.84345 1648.45 759.831"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "value"
                                                                                },
                                                                                {
                                                                                    "metaName": "index"
                                                                                },
                                                                                {
                                                                                    "metaName": "seed"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "value",
                                                    "portDirection": "input",
                                                    "portType": "Math::float3x4"
                                                },
                                                {
                                                    "portName": "index",
                                                    "portDirection": "input",
                                                    "portType": "long"
                                                },
                                                {
                                                    "portName": "seed",
                                                    "portDirection": "input",
                                                    "portType": "long"
                                                },
                                                {
                                                    "portName": "output",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "add",
                                                    "nodeType": "Core::Math::add",
                                                    "multiInPortNames": [
                                                        "output1",
                                                        "output2",
                                                        "output3"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1840 257"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "multiply",
                                                    "nodeType": "Core::Math::multiply",
                                                    "multiInPortNames": [
                                                        "root",
                                                        "y",
                                                        "c1"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 297"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "multiply1",
                                                    "nodeType": "Core::Math::multiply",
                                                    "multiInPortNames": [
                                                        "root",
                                                        "y",
                                                        "c2"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 564"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "multiply2",
                                                    "nodeType": "Core::Math::multiply",
                                                    "multiInPortNames": [
                                                        "c0",
                                                        "output1"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 54"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "random_value1",
                                                    "nodeType": "Core::Randomization::random_value",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 293"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "square_root",
                                                    "nodeType": "Core::Math::square_root",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 82"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "subtract",
                                                    "nodeType": "Core::Math::subtract",
                                                    "multiInPortNames": [
                                                        "output1",
                                                        "root"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 10"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "subtract1",
                                                    "nodeType": "Core::Math::subtract",
                                                    "multiInPortNames": [
                                                        "output1",
                                                        "y"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 640"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "value",
                                                    "valueType": "float",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 317"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "1"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "value1",
                                                    "valueType": "Math::float3x4",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 333"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "valuenode_defaultvalue",
                                                            "metaType": "string",
                                                            "metaValue": "0"
                                                        },
                                                        {
                                                            "metaName": "PortExpandedState",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metaType": "string",
                                                                    "metaValue": "1"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "vector2_to_scalar",
                                                    "nodeType": "Core::Conversion::vector2_to_scalar",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 301"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "add.output",
                                                    "target": ".output"
                                                },
                                                {
                                                    "source": "multiply.output",
                                                    "target": "add.first.output2"
                                                },
                                                {
                                                    "source": "multiply1.output",
                                                    "target": "add.first.output3"
                                                },
                                                {
                                                    "source": "multiply2.output",
                                                    "target": "add.first.output1"
                                                },
                                                {
                                                    "source": "random_value1.random_value",
                                                    "target": "vector2_to_scalar.vector2"
                                                },
                                                {
                                                    "source": "square_root.root",
                                                    "target": "multiply.first.root"
                                                },
                                                {
                                                    "source": "square_root.root",
                                                    "target": "multiply1.first.root"
                                                },
                                                {
                                                    "source": "square_root.root",
                                                    "target": "subtract.first.root"
                                                },
                                                {
                                                    "source": "subtract.output",
                                                    "target": "multiply2.first.output1"
                                                },
                                                {
                                                    "source": "subtract1.output",
                                                    "target": "multiply1.first.y"
                                                },
                                                {
                                                    "source": "value.output",
                                                    "target": "subtract.first.output1"
                                                },
                                                {
                                                    "source": "value.output",
                                                    "target": "subtract1.first.output1"
                                                },
                                                {
                                                    "source": "value1.output.c0",
                                                    "target": "multiply2.first.c0"
                                                },
                                                {
                                                    "source": "value1.output.c1",
                                                    "target": "multiply.first.c1"
                                                },
                                                {
                                                    "source": "value1.output.c2",
                                                    "target": "multiply1.first.c2"
                                                },
                                                {
                                                    "source": "vector2_to_scalar.x",
                                                    "target": "square_root.value"
                                                },
                                                {
                                                    "source": "vector2_to_scalar.y",
                                                    "target": "multiply.first.y"
                                                },
                                                {
                                                    "source": "vector2_to_scalar.y",
                                                    "target": "subtract1.first.y"
                                                },
                                                {
                                                    "source": ".value",
                                                    "target": "value1.value"
                                                },
                                                {
                                                    "source": ".index",
                                                    "target": "random_value1.index"
                                                },
                                                {
                                                    "source": ".seed",
                                                    "target": "random_value1.seed"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "random_value1.index",
                                                    "valueType": "long",
                                                    "value": "0"
                                                },
                                                {
                                                    "valueName": "random_value1.max",
                                                    "valueType": "Math::float2",
                                                    "value": {
                                                        "x": "1f",
                                                        "y": "1f"
                                                    }
                                                },
                                                {
                                                    "valueName": "random_value1.seed",
                                                    "valueType": "long",
                                                    "value": "0"
                                                },
                                                {
                                                    "valueName": "value.value",
                                                    "valueType": "float",
                                                    "value": "1f"
                                                },
                                                {
                                                    "valueName": "value1.value",
                                                    "valueType": "Math::float3x4",
                                                    "value": {
                                                        "c0": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c1": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c2": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        },
                                                        "c3": {
                                                            "x": "0f",
                                                            "y": "0f",
                                                            "z": "0f"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "random_point_in_triangle",
                                            "nodeType": "random_point_in_triangle",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 57"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "add",
                                            "nodeType": "Core::Math::add",
                                            "multiInPortNames": [
                                                "current_index",
                                                "index"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 10"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "random_point_in_triangle.output",
                                            "target": ".random_point"
                                        },
                                        {
                                            "source": "add.output",
                                            "target": "random_point_in_triangle.index"
                                        },
                                        {
                                            "source": ".current_index",
                                            "target": "add.first.current_index"
                                        },
                                        {
                                            "source": ".picked_triangle",
                                            "target": "random_point_in_triangle.value"
                                        },
                                        {
                                            "source": ".index",
                                            "target": "add.first.index"
                                        },
                                        {
                                            "source": ".seed",
                                            "target": "random_point_in_triangle.seed"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "random_point_in_triangle.index",
                                            "valueType": "long",
                                            "value": "0"
                                        },
                                        {
                                            "valueName": "random_point_in_triangle.seed",
                                            "valueType": "long",
                                            "value": "0"
                                        }
                                    ],
                                    "forEachCompound": {
                                        "ports": [],
                                        "grainSize": "1"
                                    }
                                },
                                {
                                    "name": "check_blocking_accelerators",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,or"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,if"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,less_or_equal"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,less"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Fields,sample_field"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "1102.46 903.018 1328.92 729.089"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "blocking_accelerators"
                                                                        },
                                                                        {
                                                                            "metaName": "blocking_accelerator_radius"
                                                                        },
                                                                        {
                                                                            "metaName": "random_point"
                                                                        },
                                                                        {
                                                                            "metaName": "radius"
                                                                        },
                                                                        {
                                                                            "metaName": "is_blocked_state"
                                                                        },
                                                                        {
                                                                            "metaName": "distance_state"
                                                                        },
                                                                        {
                                                                            "metaName": "result_point_state"
                                                                        },
                                                                        {
                                                                            "metaName": "radius_state"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "is_blocked"
                                                                        },
                                                                        {
                                                                            "metaName": "new_or_existing_point"
                                                                        },
                                                                        {
                                                                            "metaName": "distance_to_point"
                                                                        },
                                                                        {
                                                                            "metaName": "radius_to_use"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "blocking_accelerators",
                                            "portDirection": "input",
                                            "portType": "array<Amino::Object>",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "blocking_accelerator_radius",
                                            "portDirection": "input",
                                            "portType": "array<float>",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "random_point",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "radius",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "is_blocked_state",
                                            "portDirection": "input",
                                            "portType": "array<bool>"
                                        },
                                        {
                                            "portName": "distance_state",
                                            "portDirection": "input",
                                            "portType": "array<float>"
                                        },
                                        {
                                            "portName": "result_point_state",
                                            "portDirection": "input",
                                            "portType": "array<Math::float3>"
                                        },
                                        {
                                            "portName": "radius_state",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "is_blocked",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "new_or_existing_point",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "distance_to_point",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "radius_to_use",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compounds": [
                                        {
                                            "name": "distance",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "output1"
                                                                                },
                                                                                {
                                                                                    "metaName": "random_point"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "length"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "output1",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "random_point",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "length",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "length",
                                                    "nodeType": "Core::Math::length",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2451 358"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "subtract",
                                                    "nodeType": "Core::Math::subtract",
                                                    "multiInPortNames": [
                                                        "output1",
                                                        "random_point"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2146 437"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "length.length",
                                                    "target": ".length"
                                                },
                                                {
                                                    "source": "subtract.output",
                                                    "target": "length.vector"
                                                },
                                                {
                                                    "source": ".output1",
                                                    "target": "subtract.first.output1"
                                                },
                                                {
                                                    "source": ".random_point",
                                                    "target": "subtract.first.random_point"
                                                }
                                            ],
                                            "values": []
                                        },
                                        {
                                            "name": "closest_point_in_volume",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "483.298 -62.0802 1419.18 778.609"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "points_to_check"
                                                                                },
                                                                                {
                                                                                    "metaName": "signed_distance_field"
                                                                                },
                                                                                {
                                                                                    "metaName": "radius_squared"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "closest_position"
                                                                                },
                                                                                {
                                                                                    "metaName": "is_blocked"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "points_to_check",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "signed_distance_field",
                                                    "portDirection": "input",
                                                    "portType": "Core::Fields::ScalarField"
                                                },
                                                {
                                                    "portName": "radius_squared",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "closest_position",
                                                    "portDirection": "output",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "is_blocked",
                                                    "portDirection": "output",
                                                    "portIterationTarget": "true"
                                                }
                                            ],
                                            "compounds": [
                                                {
                                                    "name": "distance_squared",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "result"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "random_point"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "length_squared"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "result",
                                                            "portDirection": "input",
                                                            "portType": "Math::float3"
                                                        },
                                                        {
                                                            "portName": "random_point",
                                                            "portDirection": "input",
                                                            "portType": "Math::float3"
                                                        },
                                                        {
                                                            "portName": "length_squared",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "length_squared",
                                                            "nodeType": "Core::Math::length_squared",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "2824.84 -255.72"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "subtract",
                                                            "nodeType": "Core::Math::subtract",
                                                            "multiInPortNames": [
                                                                "result",
                                                                "random_point"
                                                            ],
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "2536.29 -316.214"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "length_squared.length_squared",
                                                            "target": ".length_squared"
                                                        },
                                                        {
                                                            "source": "subtract.output",
                                                            "target": "length_squared.vector"
                                                        },
                                                        {
                                                            "source": ".result",
                                                            "target": "subtract.first.result"
                                                        },
                                                        {
                                                            "source": ".random_point",
                                                            "target": "subtract.first.random_point"
                                                        }
                                                    ],
                                                    "values": []
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "distance_squared",
                                                    "nodeType": "distance_squared",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 366"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "closest_point_field",
                                                    "nodeType": "Core::Fields::closest_point_field",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 208"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "if13",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 9"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "less1",
                                                    "nodeType": "Core::Logic::less",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 378"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "less_or_equal",
                                                    "nodeType": "Core::Logic::less_or_equal",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 156"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "or1",
                                                    "nodeType": "Core::Logic::or",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1535 252"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "sample_field",
                                                    "nodeType": "Core::Fields::sample_field",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 156"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "sample_field1",
                                                    "nodeType": "Core::Fields::sample_field",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 147"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "distance_squared.length_squared",
                                                    "target": "less1.first"
                                                },
                                                {
                                                    "source": "closest_point_field.closest_point",
                                                    "target": "sample_field.field"
                                                },
                                                {
                                                    "source": "if13.output",
                                                    "target": ".closest_position"
                                                },
                                                {
                                                    "source": "less1.output",
                                                    "target": "or1.second"
                                                },
                                                {
                                                    "source": "less_or_equal.output",
                                                    "target": "if13.condition"
                                                },
                                                {
                                                    "source": "less_or_equal.output",
                                                    "target": "or1.first"
                                                },
                                                {
                                                    "source": "or1.output",
                                                    "target": ".is_blocked"
                                                },
                                                {
                                                    "source": "sample_field.result",
                                                    "target": "distance_squared.result"
                                                },
                                                {
                                                    "source": "sample_field.result",
                                                    "target": "if13.false_case"
                                                },
                                                {
                                                    "source": "sample_field1.result",
                                                    "target": "less_or_equal.first"
                                                },
                                                {
                                                    "source": ".points_to_check",
                                                    "target": "distance_squared.random_point"
                                                },
                                                {
                                                    "source": ".points_to_check",
                                                    "target": "if13.true_case"
                                                },
                                                {
                                                    "source": ".points_to_check",
                                                    "target": "sample_field.position"
                                                },
                                                {
                                                    "source": ".points_to_check",
                                                    "target": "sample_field1.position"
                                                },
                                                {
                                                    "source": ".signed_distance_field",
                                                    "target": "closest_point_field.signed_distance_field"
                                                },
                                                {
                                                    "source": ".signed_distance_field",
                                                    "target": "sample_field1.field"
                                                },
                                                {
                                                    "source": ".radius_squared",
                                                    "target": "less1.second"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "sample_field.position",
                                                    "valueType": "Math::float3",
                                                    "value": {
                                                        "x": "0f",
                                                        "y": "0f",
                                                        "z": "0f"
                                                    }
                                                },
                                                {
                                                    "valueName": "sample_field1.position",
                                                    "valueType": "Math::float3",
                                                    "value": {
                                                        "x": "0f",
                                                        "y": "0f",
                                                        "z": "0f"
                                                    }
                                                }
                                            ],
                                            "forEachCompound": {
                                                "ports": [],
                                                "grainSize": "1"
                                            }
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "get_property",
                                            "nodeType": "Core::Object::get_property",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 301"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "value",
                                            "valueType": "string",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 343"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "component"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "equal",
                                            "nodeType": "Core::Logic::equal",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1840 168"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2145 584"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "sample_closest_point_accelerator",
                                            "nodeType": "Geometry::Query::sample_closest_point_accelerator",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 10"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "add",
                                            "nodeType": "Core::Math::add",
                                            "multiInPortNames": [
                                                "radius",
                                                "blocking_accelerator_radius"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 732"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "get_property1",
                                            "nodeType": "Core::Object::get_property",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 456"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "value1",
                                            "valueType": "Amino::Object",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 417"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "get_point_position",
                                            "nodeType": "Geometry::Properties::get_point_position",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 544"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if1",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1840 427"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "get_from_array",
                                            "nodeType": "Core::Array::get_from_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 307"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if2",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2755 712"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "sample_closest_accelerator",
                                            "nodeType": "Geometry::Query::sample_closest_accelerator",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 739"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "sample_property",
                                            "nodeType": "Geometry::Query::sample_property",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 662"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "and",
                                            "nodeType": "Core::Logic::and",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 899"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if5",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 566"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if7",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "3060 1029"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "subtract3",
                                            "nodeType": "Core::Math::subtract",
                                            "multiInPortNames": [
                                                "length",
                                                "blocking_accelerator_radius"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2755 1051"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "distance",
                                            "nodeType": "distance",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2450 1074"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "or",
                                            "nodeType": "Core::Logic::or",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "3670 608"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "less",
                                            "nodeType": "Core::Logic::less",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "3365 913"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if8",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "3670 1070"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if9",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "3670 827"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if10",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "3670 1313"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "equal1",
                                            "nodeType": "Core::Logic::equal",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 809"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "value2",
                                            "valueType": "string",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 1017"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "voxel_field"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if11",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1840 670"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if12",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2450 751"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "get_property2",
                                            "nodeType": "Core::Object::get_property",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 1158"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "value3",
                                            "valueType": "Core::Fields::ScalarField",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 1292"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "multiply",
                                            "nodeType": "Core::Math::multiply",
                                            "multiInPortNames": [
                                                "output1",
                                                "output2"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 1401"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "closest_point_in_volume",
                                            "nodeType": "closest_point_in_volume",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 1028"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "get_property.value",
                                            "target": "equal.first"
                                        },
                                        {
                                            "source": "get_property.value",
                                            "target": "equal1.first"
                                        },
                                        {
                                            "source": "value.output",
                                            "target": "get_property.default_and_type"
                                        },
                                        {
                                            "source": "equal.output",
                                            "target": "if.condition"
                                        },
                                        {
                                            "source": "equal.output",
                                            "target": "if2.condition"
                                        },
                                        {
                                            "source": "if.output",
                                            "target": "distance.output1"
                                        },
                                        {
                                            "source": "if.output",
                                            "target": "if9.true_case"
                                        },
                                        {
                                            "source": "sample_closest_point_accelerator.point_index",
                                            "target": "get_from_array.index"
                                        },
                                        {
                                            "source": "sample_closest_point_accelerator.found",
                                            "target": "if1.condition"
                                        },
                                        {
                                            "source": "sample_closest_point_accelerator.found",
                                            "target": "if2.true_case"
                                        },
                                        {
                                            "source": "add.output",
                                            "target": "sample_closest_point_accelerator.cutoff_distance"
                                        },
                                        {
                                            "source": "add.output",
                                            "target": "sample_closest_accelerator.cutoff_distance"
                                        },
                                        {
                                            "source": "add.output",
                                            "target": "multiply.first.output1"
                                        },
                                        {
                                            "source": "add.output",
                                            "target": "multiply.first.output2"
                                        },
                                        {
                                            "source": "get_property1.value",
                                            "target": "get_point_position.geometry"
                                        },
                                        {
                                            "source": "get_property1.value",
                                            "target": "sample_property.geometry"
                                        },
                                        {
                                            "source": "value1.output",
                                            "target": "get_property1.default_and_type"
                                        },
                                        {
                                            "source": "get_point_position.point_position",
                                            "target": "get_from_array.array"
                                        },
                                        {
                                            "source": "if1.output",
                                            "target": "if.true_case"
                                        },
                                        {
                                            "source": "get_from_array.value",
                                            "target": "if1.true_case"
                                        },
                                        {
                                            "source": "if2.output",
                                            "target": "if7.condition"
                                        },
                                        {
                                            "source": "if2.output",
                                            "target": "or.first"
                                        },
                                        {
                                            "source": "sample_closest_accelerator.location",
                                            "target": "sample_property.locations"
                                        },
                                        {
                                            "source": "sample_closest_accelerator.found",
                                            "target": "and.first"
                                        },
                                        {
                                            "source": "sample_property.sampled_data",
                                            "target": "if5.true_case"
                                        },
                                        {
                                            "source": "sample_property.success",
                                            "target": "and.second"
                                        },
                                        {
                                            "source": "and.output",
                                            "target": "if5.condition"
                                        },
                                        {
                                            "source": "and.output",
                                            "target": "if12.false_case"
                                        },
                                        {
                                            "source": "if5.output",
                                            "target": "if11.false_case"
                                        },
                                        {
                                            "source": "if7.output",
                                            "target": "less.first"
                                        },
                                        {
                                            "source": "if7.output",
                                            "target": "if8.true_case"
                                        },
                                        {
                                            "source": "subtract3.output",
                                            "target": "if7.true_case"
                                        },
                                        {
                                            "source": "distance.length",
                                            "target": "subtract3.first.length"
                                        },
                                        {
                                            "source": "or.output",
                                            "target": ".is_blocked"
                                        },
                                        {
                                            "source": "less.output",
                                            "target": "if8.condition"
                                        },
                                        {
                                            "source": "less.output",
                                            "target": "if9.condition"
                                        },
                                        {
                                            "source": "less.output",
                                            "target": "if10.condition"
                                        },
                                        {
                                            "source": "if8.output",
                                            "target": ".distance_to_point"
                                        },
                                        {
                                            "source": "if9.output",
                                            "target": ".new_or_existing_point"
                                        },
                                        {
                                            "source": "if10.output",
                                            "target": ".radius_to_use"
                                        },
                                        {
                                            "source": "equal1.output",
                                            "target": "if11.condition"
                                        },
                                        {
                                            "source": "equal1.output",
                                            "target": "if12.condition"
                                        },
                                        {
                                            "source": "value2.output",
                                            "target": "equal1.second"
                                        },
                                        {
                                            "source": "value2.output",
                                            "target": "get_property2.key"
                                        },
                                        {
                                            "source": "if11.output",
                                            "target": "if.false_case"
                                        },
                                        {
                                            "source": "if12.output",
                                            "target": "if2.false_case"
                                        },
                                        {
                                            "source": "get_property2.value",
                                            "target": "closest_point_in_volume.signed_distance_field"
                                        },
                                        {
                                            "source": "value3.output",
                                            "target": "get_property2.default_and_type"
                                        },
                                        {
                                            "source": "multiply.output",
                                            "target": "closest_point_in_volume.radius_squared"
                                        },
                                        {
                                            "source": "closest_point_in_volume.closest_position",
                                            "target": "if11.true_case"
                                        },
                                        {
                                            "source": "closest_point_in_volume.is_blocked",
                                            "target": "if12.true_case"
                                        },
                                        {
                                            "source": ".blocking_accelerators",
                                            "target": "get_property.object"
                                        },
                                        {
                                            "source": ".blocking_accelerators",
                                            "target": "sample_closest_point_accelerator.accelerator"
                                        },
                                        {
                                            "source": ".blocking_accelerators",
                                            "target": "get_property1.object"
                                        },
                                        {
                                            "source": ".blocking_accelerators",
                                            "target": "sample_closest_accelerator.accelerator"
                                        },
                                        {
                                            "source": ".blocking_accelerators",
                                            "target": "get_property2.object"
                                        },
                                        {
                                            "source": ".blocking_accelerator_radius",
                                            "target": "add.first.radius"
                                        },
                                        {
                                            "source": ".blocking_accelerator_radius",
                                            "target": "subtract3.first.blocking_accelerator_radius"
                                        },
                                        {
                                            "source": ".blocking_accelerator_radius",
                                            "target": "if10.true_case"
                                        },
                                        {
                                            "source": ".random_point",
                                            "target": "sample_closest_point_accelerator.position"
                                        },
                                        {
                                            "source": ".random_point",
                                            "target": "if1.false_case"
                                        },
                                        {
                                            "source": ".random_point",
                                            "target": "sample_closest_accelerator.position"
                                        },
                                        {
                                            "source": ".random_point",
                                            "target": "if5.false_case"
                                        },
                                        {
                                            "source": ".random_point",
                                            "target": "distance.random_point"
                                        },
                                        {
                                            "source": ".random_point",
                                            "target": "closest_point_in_volume.points_to_check"
                                        },
                                        {
                                            "source": ".radius",
                                            "target": "add.first.blocking_accelerator_radius"
                                        },
                                        {
                                            "source": ".radius",
                                            "target": "if7.false_case"
                                        },
                                        {
                                            "source": ".is_blocked_state",
                                            "target": "or.second"
                                        },
                                        {
                                            "source": ".distance_state",
                                            "target": "less.second"
                                        },
                                        {
                                            "source": ".distance_state",
                                            "target": "if8.false_case"
                                        },
                                        {
                                            "source": ".result_point_state",
                                            "target": "if9.false_case"
                                        },
                                        {
                                            "source": ".radius_state",
                                            "target": "if10.false_case"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "get_property.key",
                                            "valueType": "string",
                                            "value": "component"
                                        },
                                        {
                                            "valueName": "value.value",
                                            "valueType": "string",
                                            "value": "component"
                                        },
                                        {
                                            "valueName": "equal.second",
                                            "valueType": "string",
                                            "value": "point_component"
                                        },
                                        {
                                            "valueName": "sample_closest_point_accelerator.use_cutoff_distance",
                                            "valueType": "bool",
                                            "value": "true"
                                        },
                                        {
                                            "valueName": "get_property1.key",
                                            "valueType": "string",
                                            "value": "geometry"
                                        },
                                        {
                                            "valueName": "value1.value",
                                            "valueType": "Amino::Object",
                                            "value": {}
                                        },
                                        {
                                            "valueName": "sample_closest_accelerator.use_cutoff_distance",
                                            "valueType": "bool",
                                            "value": "true"
                                        },
                                        {
                                            "valueName": "sample_property.default",
                                            "valueType": "Math::float3",
                                            "value": {
                                                "x": "0f",
                                                "y": "0f",
                                                "z": "0f"
                                            }
                                        },
                                        {
                                            "valueName": "sample_property.property",
                                            "valueType": "string",
                                            "value": "point_position"
                                        },
                                        {
                                            "valueName": "sample_property.method",
                                            "valueType": "BifrostExp::Geometry::SampleMethod",
                                            "value": "interpolated"
                                        },
                                        {
                                            "valueName": "value2.value",
                                            "valueType": "string",
                                            "value": "voxel_field"
                                        },
                                        {
                                            "valueName": "value3.value",
                                            "valueType": "Core::Fields::ScalarField",
                                            "value": {}
                                        }
                                    ],
                                    "iterateCompound": {
                                        "ports": [
                                            {
                                                "portKind": "state",
                                                "inputPortName": "is_blocked_state",
                                                "outputPortName": "is_blocked"
                                            },
                                            {
                                                "portKind": "state",
                                                "inputPortName": "distance_state",
                                                "outputPortName": "distance_to_point"
                                            },
                                            {
                                                "portKind": "state",
                                                "inputPortName": "result_point_state",
                                                "outputPortName": "new_or_existing_point"
                                            },
                                            {
                                                "portKind": "state",
                                                "inputPortName": "radius_state",
                                                "outputPortName": "radius_to_use"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "check_our_accelerators",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,and"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,if"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,add"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Logic,or"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,multiply"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "1315.79 194.482 1687.23 925.674"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "is_blocked"
                                                                        },
                                                                        {
                                                                            "metaName": "new_or_existing_point"
                                                                        },
                                                                        {
                                                                            "metaName": "new_points"
                                                                        },
                                                                        {
                                                                            "metaName": "distance_to_point"
                                                                        },
                                                                        {
                                                                            "metaName": "radius_to_use"
                                                                        },
                                                                        {
                                                                            "metaName": "positions_state"
                                                                        },
                                                                        {
                                                                            "metaName": "closest_accelerators"
                                                                        },
                                                                        {
                                                                            "metaName": "radius"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "is_blocked1"
                                                                        },
                                                                        {
                                                                            "metaName": "point"
                                                                        },
                                                                        {
                                                                            "metaName": "radius_to_use1"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "is_blocked",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "new_or_existing_point",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "new_points",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "distance_to_point",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "radius_to_use",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "positions_state",
                                            "portDirection": "input",
                                            "portType": "array<Math::float3>"
                                        },
                                        {
                                            "portName": "closest_accelerators",
                                            "portDirection": "input",
                                            "portType": "array<Amino::Object>"
                                        },
                                        {
                                            "portName": "radius",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "is_blocked1",
                                            "portDirection": "output",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "point",
                                            "portDirection": "output",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "radius_to_use1",
                                            "portDirection": "output",
                                            "portIterationTarget": "true"
                                        }
                                    ],
                                    "compounds": [
                                        {
                                            "name": "iterate1",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Geometry::Query,sample_closest_point_accelerator"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Modeling::Points,scatter_points_blue_noise"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,length"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "33.3365 23.0214 1234.97 677.548"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "current_index"
                                                                                },
                                                                                {
                                                                                    "metaName": "closest_accelerators"
                                                                                },
                                                                                {
                                                                                    "metaName": "to_check"
                                                                                },
                                                                                {
                                                                                    "metaName": "radius"
                                                                                },
                                                                                {
                                                                                    "metaName": "found_any"
                                                                                },
                                                                                {
                                                                                    "metaName": "closest_so_far"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "found"
                                                                                },
                                                                                {
                                                                                    "metaName": "distance_to_closest"
                                                                                },
                                                                                {
                                                                                    "metaName": "closest"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "current_index",
                                                    "portDirection": "input",
                                                    "portType": "long",
                                                    "portIterationCounter": "true"
                                                },
                                                {
                                                    "portName": "closest_accelerators",
                                                    "portDirection": "input",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "to_check",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "radius",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "found_any",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "closest_so_far",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "found",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "distance_to_closest",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "closest",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compounds": [
                                                {
                                                    "name": "get_accelerator_positions",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "-94.3021 -556.088 2041.64 1306.39"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "object"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "point_position"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "object",
                                                            "portDirection": "input",
                                                            "portType": "Amino::Object"
                                                        },
                                                        {
                                                            "portName": "point_position",
                                                            "portDirection": "output",
                                                            "portType": "array<Math::float3>"
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "get_point_position",
                                                            "nodeType": "Geometry::Properties::get_point_position",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 47"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "get_property",
                                                            "nodeType": "Core::Object::get_property",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 71"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "value",
                                                            "valueType": "Amino::Object",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "10 205"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "get_point_position.point_position",
                                                            "target": ".point_position"
                                                        },
                                                        {
                                                            "source": "get_property.value",
                                                            "target": "get_point_position.geometry"
                                                        },
                                                        {
                                                            "source": "value.output",
                                                            "target": "get_property.default_and_type"
                                                        },
                                                        {
                                                            "source": ".object",
                                                            "target": "get_property.object"
                                                        }
                                                    ],
                                                    "values": [
                                                        {
                                                            "valueName": "get_property.key",
                                                            "valueType": "string",
                                                            "value": "geometry"
                                                        },
                                                        {
                                                            "valueName": "value.value",
                                                            "valueType": "Amino::Object",
                                                            "value": {}
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "distance",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "value"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "to_check"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "length"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "value",
                                                            "portDirection": "input",
                                                            "portType": "Math::float3"
                                                        },
                                                        {
                                                            "portName": "to_check",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "length",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "length",
                                                            "nodeType": "Core::Math::length",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "1230 166"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "subtract",
                                                            "nodeType": "Core::Math::subtract",
                                                            "multiInPortNames": [
                                                                "value",
                                                                "to_check"
                                                            ],
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "925 130.665"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "length.length",
                                                            "target": ".length"
                                                        },
                                                        {
                                                            "source": "subtract.output",
                                                            "target": "length.vector"
                                                        },
                                                        {
                                                            "source": ".value",
                                                            "target": "subtract.first.value"
                                                        },
                                                        {
                                                            "source": ".to_check",
                                                            "target": "subtract.first.to_check"
                                                        }
                                                    ],
                                                    "values": []
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "if",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 284"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "or",
                                                    "nodeType": "Core::Logic::or",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 65"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_from_array",
                                                    "nodeType": "Core::Array::get_from_array",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 262"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "if1",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 527"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "get_accelerator_positions",
                                                    "nodeType": "get_accelerator_positions",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 341"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "sample_closest_point_accelerator",
                                                    "nodeType": "Geometry::Query::sample_closest_point_accelerator",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 10"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "distance",
                                                    "nodeType": "distance",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 207"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "if.output",
                                                    "target": ".distance_to_closest"
                                                },
                                                {
                                                    "source": "or.output",
                                                    "target": ".found"
                                                },
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": "if1.true_case"
                                                },
                                                {
                                                    "source": "get_from_array.value",
                                                    "target": "distance.value"
                                                },
                                                {
                                                    "source": "if1.output",
                                                    "target": ".closest"
                                                },
                                                {
                                                    "source": "get_accelerator_positions.point_position",
                                                    "target": "get_from_array.array"
                                                },
                                                {
                                                    "source": "sample_closest_point_accelerator.point_index",
                                                    "target": "get_from_array.index"
                                                },
                                                {
                                                    "source": "sample_closest_point_accelerator.found",
                                                    "target": "or.first"
                                                },
                                                {
                                                    "source": "sample_closest_point_accelerator.found",
                                                    "target": "if.condition"
                                                },
                                                {
                                                    "source": "sample_closest_point_accelerator.found",
                                                    "target": "if1.condition"
                                                },
                                                {
                                                    "source": "distance.length",
                                                    "target": "if.true_case"
                                                },
                                                {
                                                    "source": ".closest_accelerators",
                                                    "target": "get_accelerator_positions.object"
                                                },
                                                {
                                                    "source": ".closest_accelerators",
                                                    "target": "sample_closest_point_accelerator.accelerator"
                                                },
                                                {
                                                    "source": ".to_check",
                                                    "target": "sample_closest_point_accelerator.position"
                                                },
                                                {
                                                    "source": ".to_check",
                                                    "target": "distance.to_check"
                                                },
                                                {
                                                    "source": ".radius",
                                                    "target": "if.false_case"
                                                },
                                                {
                                                    "source": ".radius",
                                                    "target": "sample_closest_point_accelerator.cutoff_distance"
                                                },
                                                {
                                                    "source": ".found_any",
                                                    "target": "or.second"
                                                },
                                                {
                                                    "source": ".closest_so_far",
                                                    "target": "if1.false_case"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "sample_closest_point_accelerator.use_cutoff_distance",
                                                    "valueType": "bool",
                                                    "value": "true"
                                                }
                                            ],
                                            "iterateCompound": {
                                                "ports": [
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "radius",
                                                        "outputPortName": "distance_to_closest"
                                                    },
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "found_any",
                                                        "outputPortName": "found"
                                                    },
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "closest_so_far",
                                                        "outputPortName": "closest"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "name": "iterate",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "icon",
                                                    "metaType": "string",
                                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,square_root"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,or"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,length_squared"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Logic,less"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "176.364 -13.1175 1341.43 735.958"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "positions_state"
                                                                                },
                                                                                {
                                                                                    "metaName": "radius_squared"
                                                                                },
                                                                                {
                                                                                    "metaName": "to_check"
                                                                                },
                                                                                {
                                                                                    "metaName": "not_found_point"
                                                                                },
                                                                                {
                                                                                    "metaName": "did_find1"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "did_find"
                                                                                },
                                                                                {
                                                                                    "metaName": "closest_dist_squared"
                                                                                },
                                                                                {
                                                                                    "metaName": "closest_point"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "positions_state",
                                                    "portDirection": "input",
                                                    "portType": "array<Math::float3>",
                                                    "portIterationTarget": "true"
                                                },
                                                {
                                                    "portName": "radius_squared",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "to_check",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "not_found_point",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "did_find1",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "did_find",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "closest_dist_squared",
                                                    "portDirection": "output"
                                                },
                                                {
                                                    "portName": "closest_point",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compounds": [
                                                {
                                                    "name": "distance_squared",
                                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                                    "metadata": [
                                                        {
                                                            "metaName": "ViewportRect",
                                                            "metaType": "string",
                                                            "metaValue": "-19.2034 -52.0159 1170.69 642.28"
                                                        },
                                                        {
                                                            "metaName": "io_nodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_inodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "input",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "positions_state"
                                                                                        },
                                                                                        {
                                                                                            "metaName": "to_check"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "metaName": "io_onodes",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "output",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "io_ports",
                                                                                    "metadata": [
                                                                                        {
                                                                                            "metaName": "length_squared"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "ports": [
                                                        {
                                                            "portName": "positions_state",
                                                            "portDirection": "input",
                                                            "portType": "Math::float3"
                                                        },
                                                        {
                                                            "portName": "to_check",
                                                            "portDirection": "input"
                                                        },
                                                        {
                                                            "portName": "length_squared",
                                                            "portDirection": "output"
                                                        }
                                                    ],
                                                    "compoundNodes": [
                                                        {
                                                            "nodeName": "length_squared",
                                                            "nodeType": "Core::Math::length_squared",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "620 259"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "nodeName": "subtract",
                                                            "nodeType": "Core::Math::subtract",
                                                            "multiInPortNames": [
                                                                "positions_state",
                                                                "output1"
                                                            ],
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "315 277"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "connections": [
                                                        {
                                                            "source": "length_squared.length_squared",
                                                            "target": ".length_squared"
                                                        },
                                                        {
                                                            "source": "subtract.output",
                                                            "target": "length_squared.vector"
                                                        },
                                                        {
                                                            "source": ".positions_state",
                                                            "target": "subtract.first.positions_state"
                                                        },
                                                        {
                                                            "source": ".to_check",
                                                            "target": "subtract.first.output1"
                                                        }
                                                    ],
                                                    "values": []
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "less",
                                                    "nodeType": "Core::Logic::less",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "607.214 130.623"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "if",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 228"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "if1",
                                                    "nodeType": "Core::Logic::if",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 471"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "or",
                                                    "nodeType": "Core::Logic::or",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 9"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "distance_squared",
                                                    "nodeType": "distance_squared",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "338.817 44.7407"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "less.output",
                                                    "target": "if.condition"
                                                },
                                                {
                                                    "source": "less.output",
                                                    "target": "if1.condition"
                                                },
                                                {
                                                    "source": "less.output",
                                                    "target": "or.first"
                                                },
                                                {
                                                    "source": "if.output",
                                                    "target": ".closest_dist_squared"
                                                },
                                                {
                                                    "source": "if1.output",
                                                    "target": ".closest_point"
                                                },
                                                {
                                                    "source": "or.output",
                                                    "target": ".did_find"
                                                },
                                                {
                                                    "source": "distance_squared.length_squared",
                                                    "target": "less.first"
                                                },
                                                {
                                                    "source": "distance_squared.length_squared",
                                                    "target": "if.true_case"
                                                },
                                                {
                                                    "source": ".positions_state",
                                                    "target": "if1.true_case"
                                                },
                                                {
                                                    "source": ".positions_state",
                                                    "target": "distance_squared.positions_state"
                                                },
                                                {
                                                    "source": ".radius_squared",
                                                    "target": "less.second"
                                                },
                                                {
                                                    "source": ".radius_squared",
                                                    "target": "if.false_case"
                                                },
                                                {
                                                    "source": ".to_check",
                                                    "target": "distance_squared.to_check"
                                                },
                                                {
                                                    "source": ".not_found_point",
                                                    "target": "if1.false_case"
                                                },
                                                {
                                                    "source": ".did_find1",
                                                    "target": "or.second"
                                                }
                                            ],
                                            "values": [
                                                {
                                                    "valueName": "distance_squared.positions_state",
                                                    "valueType": "Math::float3",
                                                    "value": {
                                                        "x": "0f",
                                                        "y": "0f",
                                                        "z": "0f"
                                                    }
                                                }
                                            ],
                                            "iterateCompound": {
                                                "ports": [
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "radius_squared",
                                                        "outputPortName": "closest_dist_squared"
                                                    },
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "not_found_point",
                                                        "outputPortName": "closest_point"
                                                    },
                                                    {
                                                        "portKind": "state",
                                                        "inputPortName": "did_find1",
                                                        "outputPortName": "did_find"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "if2",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2145 489"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "array_size",
                                            "nodeType": "Core::Array::array_size",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 181"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "not_equal",
                                            "nodeType": "Core::Logic::not_equal",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 182"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "and",
                                            "nodeType": "Core::Logic::and",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 199"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2450 473"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "or",
                                            "nodeType": "Core::Logic::or",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 294"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "array_size1",
                                            "nodeType": "Core::Array::array_size",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 376"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "not_equal1",
                                            "nodeType": "Core::Logic::not_equal",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 401"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "and1",
                                            "nodeType": "Core::Logic::and",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 418"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "multiply",
                                            "nodeType": "Core::Math::multiply",
                                            "multiInPortNames": [
                                                "distance_to_closest",
                                                "distance_to_closest1"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 677"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "less",
                                            "nodeType": "Core::Logic::less",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 563"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "and3",
                                            "nodeType": "Core::Logic::and",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1840 440"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "iterate1",
                                            "nodeType": "iterate1",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 1007"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "iterate",
                                            "nodeType": "iterate",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 620"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "greater",
                                            "nodeType": "Core::Logic::greater",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1840 162"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if3",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2450 230"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "multiply1",
                                            "nodeType": "Core::Math::multiply",
                                            "multiInPortNames": [
                                                "distance_to_point",
                                                "distance_to_point1"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 611"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "or1",
                                            "nodeType": "Core::Logic::or",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2145 10"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if5",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2145 772"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "if6",
                                            "nodeType": "Core::Logic::if",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1840 828"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "add",
                                            "nodeType": "Core::Math::add",
                                            "multiInPortNames": [
                                                "radius_to_use",
                                                "radius"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 448"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "add1",
                                            "nodeType": "Core::Math::add",
                                            "multiInPortNames": [
                                                "output1",
                                                "radius"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2450 716"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "and4",
                                            "nodeType": "Core::Logic::and",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2145 270"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "if2.output",
                                            "target": "if.true_case"
                                        },
                                        {
                                            "source": "array_size.size",
                                            "target": "not_equal.first"
                                        },
                                        {
                                            "source": "not_equal.output",
                                            "target": "and.first"
                                        },
                                        {
                                            "source": "and.output",
                                            "target": "or.second"
                                        },
                                        {
                                            "source": "if.output",
                                            "target": ".point"
                                        },
                                        {
                                            "source": "or.output",
                                            "target": "or1.second"
                                        },
                                        {
                                            "source": "or.output",
                                            "target": "if6.condition"
                                        },
                                        {
                                            "source": "or.output",
                                            "target": "and4.second"
                                        },
                                        {
                                            "source": "array_size1.size",
                                            "target": "not_equal1.first"
                                        },
                                        {
                                            "source": "not_equal1.output",
                                            "target": "and1.first"
                                        },
                                        {
                                            "source": "and1.output",
                                            "target": "or.first"
                                        },
                                        {
                                            "source": "and1.output",
                                            "target": "and3.first"
                                        },
                                        {
                                            "source": "multiply.output",
                                            "target": "less.second"
                                        },
                                        {
                                            "source": "less.output",
                                            "target": "and3.second"
                                        },
                                        {
                                            "source": "and3.output",
                                            "target": "if2.condition"
                                        },
                                        {
                                            "source": "iterate1.found",
                                            "target": "and.second"
                                        },
                                        {
                                            "source": "iterate1.distance_to_closest",
                                            "target": "multiply.first.distance_to_closest"
                                        },
                                        {
                                            "source": "iterate1.distance_to_closest",
                                            "target": "multiply.first.distance_to_closest1"
                                        },
                                        {
                                            "source": "iterate1.closest",
                                            "target": "if2.false_case"
                                        },
                                        {
                                            "source": "iterate.did_find",
                                            "target": "and1.second"
                                        },
                                        {
                                            "source": "iterate.closest_dist_squared",
                                            "target": "less.first"
                                        },
                                        {
                                            "source": "iterate.closest_point",
                                            "target": "if2.true_case"
                                        },
                                        {
                                            "source": "greater.output",
                                            "target": "if3.condition"
                                        },
                                        {
                                            "source": "greater.output",
                                            "target": "if5.condition"
                                        },
                                        {
                                            "source": "greater.output",
                                            "target": "and4.first"
                                        },
                                        {
                                            "source": "if3.output",
                                            "target": ".is_blocked1"
                                        },
                                        {
                                            "source": "multiply1.output",
                                            "target": "iterate.radius_squared"
                                        },
                                        {
                                            "source": "or1.output",
                                            "target": "if3.true_case"
                                        },
                                        {
                                            "source": "if5.output",
                                            "target": "add1.first.output1"
                                        },
                                        {
                                            "source": "if6.output",
                                            "target": "if5.true_case"
                                        },
                                        {
                                            "source": "add.output",
                                            "target": "iterate1.radius"
                                        },
                                        {
                                            "source": "add.output",
                                            "target": "multiply1.first.distance_to_point"
                                        },
                                        {
                                            "source": "add.output",
                                            "target": "multiply1.first.distance_to_point1"
                                        },
                                        {
                                            "source": "add.output",
                                            "target": "greater.first"
                                        },
                                        {
                                            "source": "add1.output",
                                            "target": ".radius_to_use1"
                                        },
                                        {
                                            "source": "and4.output",
                                            "target": "if.condition"
                                        },
                                        {
                                            "source": ".is_blocked",
                                            "target": "if3.false_case"
                                        },
                                        {
                                            "source": ".is_blocked",
                                            "target": "or1.first"
                                        },
                                        {
                                            "source": ".new_or_existing_point",
                                            "target": "if.false_case"
                                        },
                                        {
                                            "source": ".new_points",
                                            "target": "iterate1.to_check"
                                        },
                                        {
                                            "source": ".new_points",
                                            "target": "iterate.to_check"
                                        },
                                        {
                                            "source": ".distance_to_point",
                                            "target": "add.first.radius_to_use"
                                        },
                                        {
                                            "source": ".radius_to_use",
                                            "target": "if6.false_case"
                                        },
                                        {
                                            "source": ".radius_to_use",
                                            "target": "if5.false_case"
                                        },
                                        {
                                            "source": ".positions_state",
                                            "target": "array_size1.array"
                                        },
                                        {
                                            "source": ".positions_state",
                                            "target": "iterate.positions_state"
                                        },
                                        {
                                            "source": ".closest_accelerators",
                                            "target": "array_size.array"
                                        },
                                        {
                                            "source": ".closest_accelerators",
                                            "target": "iterate1.closest_accelerators"
                                        },
                                        {
                                            "source": ".radius",
                                            "target": "if6.true_case"
                                        },
                                        {
                                            "source": ".radius",
                                            "target": "add.first.radius"
                                        },
                                        {
                                            "source": ".radius",
                                            "target": "add1.first.radius"
                                        }
                                    ],
                                    "values": [],
                                    "forEachCompound": {
                                        "ports": [],
                                        "grainSize": "1"
                                    }
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "add_to_accelerator",
                                    "nodeType": "add_to_accelerator",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "4280 413"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "array_size1",
                                    "nodeType": "Core::Array::array_size",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "3670 175"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "add_split_triangles",
                                    "nodeType": "add_split_triangles",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "3060 380"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "less",
                                    "nodeType": "Core::Logic::less",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "3060 121"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "if",
                                    "nodeType": "Core::Logic::if",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "3365 345"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "do_while1",
                                    "nodeType": "do_while1",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "3975 228"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "multiply",
                                    "nodeType": "Core::Math::multiply",
                                    "multiInPortNames": [
                                        "current_index",
                                        "output1"
                                    ],
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 687"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "value",
                                    "valueType": "long",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "valuenode_defaultvalue",
                                            "metaType": "string",
                                            "metaValue": "2654435769"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "10 735"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "get_only_new_points",
                                    "nodeType": "get_only_new_points",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "2145 447"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "set_in_array",
                                    "nodeType": "Core::Array::set_in_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "2755 390"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "pick_biggest_triangles",
                                    "nodeType": "pick_biggest_triangles",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 316"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "get_non_overlapping_among_new_points",
                                    "nodeType": "get_non_overlapping_among_new_points",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "2450 694"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "greater",
                                    "nodeType": "Core::Logic::greater",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "3975 9"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "and1",
                                    "nodeType": "Core::Logic::and",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "4280 194"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "random_point_in_triangle",
                                    "nodeType": "random_point_in_triangle",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 648"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "check_blocking_accelerators",
                                    "nodeType": "check_blocking_accelerators",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1535 600"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "array_size",
                                    "nodeType": "Core::Array::array_size",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 798"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "resize_array",
                                    "nodeType": "Core::Array::resize_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1230 720"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "resize_array1",
                                    "nodeType": "Core::Array::resize_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1230 963"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "check_our_accelerators",
                                    "nodeType": "check_our_accelerators",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1840 612"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "add",
                                    "nodeType": "Core::Math::add",
                                    "multiInPortNames": [
                                        "radius",
                                        "radius1"
                                    ],
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "2145 919"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "add_to_accelerator.last_positions",
                                    "target": ".most_recent_positions"
                                },
                                {
                                    "source": "add_to_accelerator.accelerators",
                                    "target": ".accelerator_state"
                                },
                                {
                                    "source": "array_size1.size",
                                    "target": "do_while1.max_iterations"
                                },
                                {
                                    "source": "array_size1.size",
                                    "target": "greater.first"
                                },
                                {
                                    "source": "add_split_triangles.output",
                                    "target": "if.false_case"
                                },
                                {
                                    "source": "less.output",
                                    "target": "if.condition"
                                },
                                {
                                    "source": "if.output",
                                    "target": "array_size1.array"
                                },
                                {
                                    "source": "if.output",
                                    "target": ".remaining_triangles"
                                },
                                {
                                    "source": "if.output",
                                    "target": "do_while1.output"
                                },
                                {
                                    "source": "do_while1.found_non_empty",
                                    "target": "and1.second"
                                },
                                {
                                    "source": "multiply.output",
                                    "target": "random_point_in_triangle.index"
                                },
                                {
                                    "source": "value.output",
                                    "target": "multiply.first.output1"
                                },
                                {
                                    "source": "get_only_new_points.non_overlapping_points",
                                    "target": "get_non_overlapping_among_new_points.point_position"
                                },
                                {
                                    "source": "get_only_new_points.original_indices",
                                    "target": "set_in_array.index"
                                },
                                {
                                    "source": "set_in_array.out_array",
                                    "target": "add_split_triangles.point_to_compare_against"
                                },
                                {
                                    "source": "pick_biggest_triangles.new_triangles",
                                    "target": "if.true_case"
                                },
                                {
                                    "source": "pick_biggest_triangles.new_triangles",
                                    "target": "add_split_triangles.to_add_to"
                                },
                                {
                                    "source": "pick_biggest_triangles.picked_triangle",
                                    "target": "add_split_triangles.value"
                                },
                                {
                                    "source": "pick_biggest_triangles.picked_triangle",
                                    "target": "random_point_in_triangle.picked_triangle"
                                },
                                {
                                    "source": "pick_biggest_triangles.subdivided_triangle_bin",
                                    "target": "less.first"
                                },
                                {
                                    "source": "pick_biggest_triangles.subdivided_triangle_bin",
                                    "target": "add_split_triangles.triangle_bin_index"
                                },
                                {
                                    "source": "get_non_overlapping_among_new_points.new_or_blocking_points",
                                    "target": "set_in_array.value"
                                },
                                {
                                    "source": "get_non_overlapping_among_new_points.only_new_points",
                                    "target": "add_to_accelerator.point_to_add"
                                },
                                {
                                    "source": "greater.output",
                                    "target": "and1.first"
                                },
                                {
                                    "source": "and1.output",
                                    "target": ".looping_condition"
                                },
                                {
                                    "source": "random_point_in_triangle.random_point",
                                    "target": "check_blocking_accelerators.random_point"
                                },
                                {
                                    "source": "random_point_in_triangle.random_point",
                                    "target": "array_size.array"
                                },
                                {
                                    "source": "random_point_in_triangle.random_point",
                                    "target": "check_blocking_accelerators.result_point_state"
                                },
                                {
                                    "source": "random_point_in_triangle.random_point",
                                    "target": "check_our_accelerators.new_points"
                                },
                                {
                                    "source": "check_blocking_accelerators.is_blocked",
                                    "target": "check_our_accelerators.is_blocked"
                                },
                                {
                                    "source": "check_blocking_accelerators.new_or_existing_point",
                                    "target": "check_our_accelerators.new_or_existing_point"
                                },
                                {
                                    "source": "check_blocking_accelerators.distance_to_point",
                                    "target": "check_our_accelerators.distance_to_point"
                                },
                                {
                                    "source": "check_blocking_accelerators.radius_to_use",
                                    "target": "check_our_accelerators.radius_to_use"
                                },
                                {
                                    "source": "array_size.size",
                                    "target": "resize_array.new_size"
                                },
                                {
                                    "source": "array_size.size",
                                    "target": "resize_array1.new_size"
                                },
                                {
                                    "source": "resize_array.resized",
                                    "target": "check_blocking_accelerators.is_blocked_state"
                                },
                                {
                                    "source": "resize_array1.resized",
                                    "target": "check_blocking_accelerators.distance_state"
                                },
                                {
                                    "source": "resize_array1.resized",
                                    "target": "check_blocking_accelerators.radius_state"
                                },
                                {
                                    "source": "check_our_accelerators.is_blocked1",
                                    "target": "get_only_new_points.is_blocked"
                                },
                                {
                                    "source": "check_our_accelerators.point",
                                    "target": "get_only_new_points.new_points"
                                },
                                {
                                    "source": "check_our_accelerators.point",
                                    "target": "set_in_array.array"
                                },
                                {
                                    "source": "check_our_accelerators.radius_to_use1",
                                    "target": "add_split_triangles.radius"
                                },
                                {
                                    "source": "add.output",
                                    "target": "get_non_overlapping_among_new_points.radius"
                                },
                                {
                                    "source": ".current_index",
                                    "target": "multiply.first.current_index"
                                },
                                {
                                    "source": ".triangles",
                                    "target": "pick_biggest_triangles.triangles"
                                },
                                {
                                    "source": ".radius",
                                    "target": "check_blocking_accelerators.radius"
                                },
                                {
                                    "source": ".radius",
                                    "target": "resize_array1.default"
                                },
                                {
                                    "source": ".radius",
                                    "target": "check_our_accelerators.radius"
                                },
                                {
                                    "source": ".radius",
                                    "target": "add.first.radius"
                                },
                                {
                                    "source": ".radius",
                                    "target": "add.first.radius1"
                                },
                                {
                                    "source": ".seed",
                                    "target": "random_point_in_triangle.seed"
                                },
                                {
                                    "source": ".positions_state",
                                    "target": "add_to_accelerator.positions_state"
                                },
                                {
                                    "source": ".positions_state",
                                    "target": "check_our_accelerators.positions_state"
                                },
                                {
                                    "source": ".closest_accelerators",
                                    "target": "add_to_accelerator.closest_accelerators"
                                },
                                {
                                    "source": ".closest_accelerators",
                                    "target": "check_our_accelerators.closest_accelerators"
                                },
                                {
                                    "source": ".blocking_accelerators",
                                    "target": "check_blocking_accelerators.blocking_accelerators"
                                },
                                {
                                    "source": ".blocking_accelerator_radius",
                                    "target": "check_blocking_accelerators.blocking_accelerator_radius"
                                }
                            ],
                            "values": [
                                {
                                    "valueName": "add_split_triangles.value",
                                    "valueType": "Math::float3x3",
                                    "value": {
                                        "c0": {
                                            "x": "0f",
                                            "y": "0f",
                                            "z": "0f"
                                        },
                                        "c1": {
                                            "x": "0f",
                                            "y": "0f",
                                            "z": "0f"
                                        },
                                        "c2": {
                                            "x": "0f",
                                            "y": "0f",
                                            "z": "0f"
                                        }
                                    }
                                },
                                {
                                    "valueName": "add_split_triangles.point_to_compare_against",
                                    "valueType": "Math::float3",
                                    "value": {
                                        "x": "0f",
                                        "y": "0f",
                                        "z": "0f"
                                    }
                                },
                                {
                                    "valueName": "add_split_triangles.radius",
                                    "valueType": "float",
                                    "value": "0f"
                                },
                                {
                                    "valueName": "less.second",
                                    "valueType": "long",
                                    "value": "0"
                                },
                                {
                                    "valueName": "do_while1.max_iterations",
                                    "valueType": "long",
                                    "value": "10"
                                },
                                {
                                    "valueName": "value.value",
                                    "valueType": "long",
                                    "value": "2654435769"
                                },
                                {
                                    "valueName": "get_non_overlapping_among_new_points.radius",
                                    "valueType": "float",
                                    "value": "0f"
                                },
                                {
                                    "valueName": "resize_array.default",
                                    "valueType": "bool",
                                    "value": "false"
                                },
                                {
                                    "valueName": "resize_array1.default",
                                    "valueType": "bool",
                                    "value": "false"
                                }
                            ],
                            "whileCompound": {
                                "ports": [
                                    {
                                        "portKind": "state",
                                        "inputPortName": "triangles",
                                        "outputPortName": "remaining_triangles"
                                    },
                                    {
                                        "portKind": "state",
                                        "inputPortName": "positions_state",
                                        "outputPortName": "most_recent_positions"
                                    },
                                    {
                                        "portKind": "state",
                                        "inputPortName": "closest_accelerators",
                                        "outputPortName": "accelerator_state"
                                    }
                                ]
                            }
                        },
                        {
                            "name": "get_accelerator_positions",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "-16.397 -57.728 1154.98 532.374"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "object"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "point_position"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "object",
                                    "portDirection": "input",
                                    "portType": "Amino::Object"
                                },
                                {
                                    "portName": "point_position",
                                    "portDirection": "output",
                                    "portType": "array<Math::float3>"
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "get_point_position",
                                    "nodeType": "Geometry::Properties::get_point_position",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 47"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "get_property",
                                    "nodeType": "Core::Object::get_property",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 71"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "value",
                                    "valueType": "Amino::Object",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "10 205"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "get_point_position.point_position",
                                    "target": ".point_position"
                                },
                                {
                                    "source": "get_property.value",
                                    "target": "get_point_position.geometry"
                                },
                                {
                                    "source": "value.output",
                                    "target": "get_property.default_and_type"
                                },
                                {
                                    "source": ".object",
                                    "target": "get_property.object"
                                }
                            ],
                            "values": [
                                {
                                    "valueName": "get_property.key",
                                    "valueType": "string",
                                    "value": "geometry"
                                },
                                {
                                    "valueName": "value.value",
                                    "valueType": "Amino::Object",
                                    "value": {}
                                }
                            ]
                        },
                        {
                            "name": "bin_triangles",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Iterators,for_each"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Array,resize_array"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Array,array_size"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Array,find_all_in_array"
                                },
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "1191.05 -45.0546 1190.35 653.065"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "triangles"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "binned_triangles"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "triangles",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "binned_triangles",
                                    "portDirection": "output"
                                }
                            ],
                            "compounds": [
                                {
                                    "name": "for_each",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,half_of"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,add"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,subtract"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Iterators,for_each"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "457.383 -221.047 1641.49 819.321"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "triangles"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "bin"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "triangles",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "bin",
                                            "portDirection": "output",
                                            "portIterationTarget": "true"
                                        }
                                    ],
                                    "compounds": [
                                        {
                                            "name": "triangle_area",
                                            "uriImported": "file:///scatter_points_in_gaps.json",
                                            "metadata": [
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,half_of"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,length"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,cross"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Math,subtract"
                                                },
                                                {
                                                    "metaName": "_recentNode_",
                                                    "metaType": "string",
                                                    "metaValue": "BifrostGraph,Core::Graph,compound"
                                                },
                                                {
                                                    "metaName": "ViewportRect",
                                                    "metaType": "string",
                                                    "metaValue": "178.972 -320.552 1910.59 1230.97"
                                                },
                                                {
                                                    "metaName": "io_nodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_inodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "input",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "value"
                                                                                },
                                                                                {
                                                                                    "metaName": "value1"
                                                                                },
                                                                                {
                                                                                    "metaName": "value2"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_onodes",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "io_ports",
                                                                            "metadata": [
                                                                                {
                                                                                    "metaName": "area"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "ports": [
                                                {
                                                    "portName": "value",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "value1",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "value2",
                                                    "portDirection": "input"
                                                },
                                                {
                                                    "portName": "area",
                                                    "portDirection": "output"
                                                }
                                            ],
                                            "compoundNodes": [
                                                {
                                                    "nodeName": "subtract",
                                                    "nodeType": "Core::Math::subtract",
                                                    "multiInPortNames": [
                                                        "value",
                                                        "value1"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 10"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "subtract1",
                                                    "nodeType": "Core::Math::subtract",
                                                    "multiInPortNames": [
                                                        "value",
                                                        "value2"
                                                    ],
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "315 253"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "cross",
                                                    "nodeType": "Core::Math::cross",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 95"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "length",
                                                    "nodeType": "Core::Math::length",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "925 71"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "nodeName": "half_of",
                                                    "nodeType": "Core::Math::half_of",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "1230 47"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "connections": [
                                                {
                                                    "source": "subtract.output",
                                                    "target": "cross.first"
                                                },
                                                {
                                                    "source": "subtract1.output",
                                                    "target": "cross.second"
                                                },
                                                {
                                                    "source": "cross.cross_product",
                                                    "target": "length.vector"
                                                },
                                                {
                                                    "source": "length.length",
                                                    "target": "half_of.value"
                                                },
                                                {
                                                    "source": "half_of.half_value",
                                                    "target": ".area"
                                                },
                                                {
                                                    "source": ".value",
                                                    "target": "subtract.first.value"
                                                },
                                                {
                                                    "source": ".value",
                                                    "target": "subtract1.first.value"
                                                },
                                                {
                                                    "source": ".value1",
                                                    "target": "subtract.first.value1"
                                                },
                                                {
                                                    "source": ".value2",
                                                    "target": "subtract1.first.value2"
                                                }
                                            ],
                                            "values": []
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "value",
                                            "valueType": "Math::float3x4",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 104"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "0"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "0"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "0"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "0"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "0"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "0"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "0"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "0"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "0"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "0"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "0"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "0"
                                                },
                                                {
                                                    "metaName": "PortExpandedState",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metaType": "string",
                                                            "metaValue": "1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "triangle_area",
                                            "nodeType": "triangle_area",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 80"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "log_base_two",
                                            "nodeType": "Core::Math::log_base_two",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 56"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "clamp",
                                            "nodeType": "Core::Math::clamp",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 9"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "to_long",
                                            "nodeType": "Core::Type_Conversion::to_long",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "2145 69"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "value1",
                                            "valueType": "float",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1535 252"
                                                },
                                                {
                                                    "metaName": "valuenode_defaultvalue",
                                                    "metaType": "string",
                                                    "metaValue": "16"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "add",
                                            "nodeType": "Core::Math::add",
                                            "multiInPortNames": [
                                                "clamped",
                                                "output1"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1840 95"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "half_of",
                                            "nodeType": "Core::Math::half_of",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1230 33"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "value.output.c0",
                                            "target": "triangle_area.value"
                                        },
                                        {
                                            "source": "value.output.c1",
                                            "target": "triangle_area.value1"
                                        },
                                        {
                                            "source": "value.output.c2",
                                            "target": "triangle_area.value2"
                                        },
                                        {
                                            "source": "triangle_area.area",
                                            "target": "log_base_two.value"
                                        },
                                        {
                                            "source": "log_base_two.logarithm",
                                            "target": "half_of.value"
                                        },
                                        {
                                            "source": "clamp.clamped",
                                            "target": "add.first.clamped"
                                        },
                                        {
                                            "source": "to_long.long",
                                            "target": ".bin"
                                        },
                                        {
                                            "source": "value1.output",
                                            "target": "add.first.output1"
                                        },
                                        {
                                            "source": "add.output",
                                            "target": "to_long.from"
                                        },
                                        {
                                            "source": "half_of.half_value",
                                            "target": "clamp.value"
                                        },
                                        {
                                            "source": ".triangles",
                                            "target": "value.value"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "value.value",
                                            "valueType": "Math::float3x4",
                                            "value": {
                                                "c0": {
                                                    "x": "0f",
                                                    "y": "0f",
                                                    "z": "0f"
                                                },
                                                "c1": {
                                                    "x": "0f",
                                                    "y": "0f",
                                                    "z": "0f"
                                                },
                                                "c2": {
                                                    "x": "0f",
                                                    "y": "0f",
                                                    "z": "0f"
                                                },
                                                "c3": {
                                                    "x": "0f",
                                                    "y": "0f",
                                                    "z": "0f"
                                                }
                                            }
                                        },
                                        {
                                            "valueName": "clamp.min",
                                            "valueType": "float",
                                            "value": "-16f"
                                        },
                                        {
                                            "valueName": "clamp.max",
                                            "valueType": "float",
                                            "value": "15f"
                                        },
                                        {
                                            "valueName": "value1.value",
                                            "valueType": "float",
                                            "value": "16f"
                                        }
                                    ],
                                    "forEachCompound": {
                                        "ports": [],
                                        "grainSize": "1"
                                    }
                                },
                                {
                                    "name": "iterate1",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,increment"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,resize_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "-161.514 -353.206 2070.52 954.378"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "bin"
                                                                        },
                                                                        {
                                                                            "metaName": "init_counts"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "bin_counts"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "bin",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "init_counts",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "bin_counts",
                                            "portDirection": "output"
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "get_from_array",
                                            "nodeType": "Core::Array::get_from_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 94"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "increment",
                                            "nodeType": "Core::Math::increment",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 75"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "set_in_array",
                                            "nodeType": "Core::Array::set_in_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 10"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "get_from_array.value",
                                            "target": "increment.value"
                                        },
                                        {
                                            "source": "increment.output",
                                            "target": "set_in_array.value"
                                        },
                                        {
                                            "source": "set_in_array.out_array",
                                            "target": ".bin_counts"
                                        },
                                        {
                                            "source": ".bin",
                                            "target": "get_from_array.index"
                                        },
                                        {
                                            "source": ".bin",
                                            "target": "set_in_array.index"
                                        },
                                        {
                                            "source": ".init_counts",
                                            "target": "get_from_array.array"
                                        },
                                        {
                                            "source": ".init_counts",
                                            "target": "set_in_array.array"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "increment.by",
                                            "valueType": "char",
                                            "value": "1"
                                        }
                                    ],
                                    "iterateCompound": {
                                        "ports": [
                                            {
                                                "portKind": "state",
                                                "inputPortName": "init_counts",
                                                "outputPortName": "bin_counts"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "iterate2",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,set_in_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,increment"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,resize_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,array_size"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "397.639 -48.9192 1147.09 629.331"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "triangles"
                                                                        },
                                                                        {
                                                                            "metaName": "bin"
                                                                        },
                                                                        {
                                                                            "metaName": "bin_start_positions"
                                                                        },
                                                                        {
                                                                            "metaName": "init_sorted_array"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "end_bin_counts"
                                                                        },
                                                                        {
                                                                            "metaName": "sorted"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "triangles",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "bin",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "bin_start_positions",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "init_sorted_array",
                                            "portDirection": "input",
                                            "portType": "array<Math::float3x3>"
                                        },
                                        {
                                            "portName": "end_bin_counts",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "sorted",
                                            "portDirection": "output",
                                            "portType": "array<Math::float3x3>"
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "get_from_array",
                                            "nodeType": "Core::Array::get_from_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 79"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "increment",
                                            "nodeType": "Core::Math::increment",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "620 30"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "set_in_array",
                                            "nodeType": "Core::Array::set_in_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 10"
                                                }
                                            ]
                                        },
                                        {
                                            "nodeName": "set_in_array1",
                                            "nodeType": "Core::Array::set_in_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "925 253"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "get_from_array.value",
                                            "target": "increment.value"
                                        },
                                        {
                                            "source": "get_from_array.value",
                                            "target": "set_in_array1.index"
                                        },
                                        {
                                            "source": "increment.output",
                                            "target": "set_in_array.value"
                                        },
                                        {
                                            "source": "set_in_array.out_array",
                                            "target": ".end_bin_counts"
                                        },
                                        {
                                            "source": "set_in_array1.out_array",
                                            "target": ".sorted"
                                        },
                                        {
                                            "source": ".triangles",
                                            "target": "set_in_array1.value"
                                        },
                                        {
                                            "source": ".bin",
                                            "target": "get_from_array.index"
                                        },
                                        {
                                            "source": ".bin",
                                            "target": "set_in_array.index"
                                        },
                                        {
                                            "source": ".bin_start_positions",
                                            "target": "get_from_array.array"
                                        },
                                        {
                                            "source": ".bin_start_positions",
                                            "target": "set_in_array.array"
                                        },
                                        {
                                            "source": ".init_sorted_array",
                                            "target": "set_in_array1.array"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "increment.by",
                                            "valueType": "char",
                                            "value": "1"
                                        }
                                    ],
                                    "iterateCompound": {
                                        "ports": [
                                            {
                                                "portKind": "state",
                                                "inputPortName": "bin_start_positions",
                                                "outputPortName": "end_bin_counts"
                                            },
                                            {
                                                "portKind": "state",
                                                "inputPortName": "init_sorted_array",
                                                "outputPortName": "sorted"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "iterate4",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Math,add"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,resize_array"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,array_size"
                                        },
                                        {
                                            "metaName": "_recentNode_",
                                            "metaType": "string",
                                            "metaValue": "BifrostGraph,Core::Array,find_all_in_array"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "-70 -35.5469 996 459.094"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "bin_counts"
                                                                        },
                                                                        {
                                                                            "metaName": "sum_so_far"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "sum_so_far1"
                                                                        },
                                                                        {
                                                                            "metaName": "output"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "bin_counts",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "sum_so_far",
                                            "portDirection": "input",
                                            "portType": "long"
                                        },
                                        {
                                            "portName": "sum_so_far1",
                                            "portDirection": "output"
                                        },
                                        {
                                            "portName": "output",
                                            "portDirection": "output",
                                            "portIterationTarget": "true"
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "add",
                                            "nodeType": "Core::Math::add",
                                            "multiInPortNames": [
                                                "bin_counts",
                                                "port"
                                            ],
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 9"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "add.output",
                                            "target": ".sum_so_far1"
                                        },
                                        {
                                            "source": ".bin_counts",
                                            "target": "add.first.bin_counts"
                                        },
                                        {
                                            "source": ".sum_so_far",
                                            "target": "add.first.port"
                                        },
                                        {
                                            "source": ".sum_so_far",
                                            "target": ".output"
                                        }
                                    ],
                                    "values": [],
                                    "iterateCompound": {
                                        "ports": [
                                            {
                                                "portKind": "state",
                                                "inputPortName": "sum_so_far",
                                                "outputPortName": "sum_so_far1"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "for_each1",
                                    "uriImported": "file:///scatter_points_in_gaps.json",
                                    "metadata": [
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "icon",
                                            "metaType": "string",
                                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                        },
                                        {
                                            "metaName": "ViewportRect",
                                            "metaType": "string",
                                            "metaValue": "-69.6414 -95.685 996.271 459.219"
                                        },
                                        {
                                            "metaName": "io_nodes",
                                            "metadata": [
                                                {
                                                    "metaName": "io_inodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "input",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "current_index"
                                                                        },
                                                                        {
                                                                            "metaName": "bin_start_positions"
                                                                        },
                                                                        {
                                                                            "metaName": "bin_end_positions"
                                                                        },
                                                                        {
                                                                            "metaName": "sorted"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_onodes",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "io_ports",
                                                                    "metadata": [
                                                                        {
                                                                            "metaName": "slice"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ports": [
                                        {
                                            "portName": "current_index",
                                            "portDirection": "input",
                                            "portType": "long",
                                            "portIterationCounter": "true"
                                        },
                                        {
                                            "portName": "bin_start_positions",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "bin_end_positions",
                                            "portDirection": "input",
                                            "portIterationTarget": "true"
                                        },
                                        {
                                            "portName": "sorted",
                                            "portDirection": "input"
                                        },
                                        {
                                            "portName": "slice",
                                            "portDirection": "output",
                                            "portIterationTarget": "true"
                                        }
                                    ],
                                    "compoundNodes": [
                                        {
                                            "nodeName": "slice_array",
                                            "nodeType": "Core::Array::slice_array",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "315 10"
                                                }
                                            ]
                                        }
                                    ],
                                    "connections": [
                                        {
                                            "source": "slice_array.slice",
                                            "target": ".slice"
                                        },
                                        {
                                            "source": ".bin_start_positions",
                                            "target": "slice_array.start"
                                        },
                                        {
                                            "source": ".bin_end_positions",
                                            "target": "slice_array.stop"
                                        },
                                        {
                                            "source": ".sorted",
                                            "target": "slice_array.array"
                                        }
                                    ],
                                    "values": [
                                        {
                                            "valueName": "slice_array.stride",
                                            "valueType": "long",
                                            "value": "1"
                                        }
                                    ],
                                    "forEachCompound": {
                                        "ports": [],
                                        "grainSize": "1"
                                    }
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "for_each",
                                    "nodeType": "for_each",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 431"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "iterate1",
                                    "nodeType": "iterate1",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 164"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "resize_array1",
                                    "nodeType": "Core::Array::resize_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 188"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "iterate2",
                                    "nodeType": "iterate2",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1230 130"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "array_size",
                                    "nodeType": "Core::Array::array_size",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 582"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "resize_array2",
                                    "nodeType": "Core::Array::resize_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 430"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "iterate4",
                                    "nodeType": "iterate4",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 9"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "for_each1",
                                    "nodeType": "for_each1",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1535 11"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "for_each.bin",
                                    "target": "iterate1.bin"
                                },
                                {
                                    "source": "for_each.bin",
                                    "target": "iterate2.bin"
                                },
                                {
                                    "source": "iterate1.bin_counts",
                                    "target": "iterate4.bin_counts"
                                },
                                {
                                    "source": "resize_array1.resized",
                                    "target": "iterate1.init_counts"
                                },
                                {
                                    "source": "iterate2.end_bin_counts",
                                    "target": "for_each1.bin_end_positions"
                                },
                                {
                                    "source": "iterate2.sorted",
                                    "target": "for_each1.sorted"
                                },
                                {
                                    "source": "array_size.size",
                                    "target": "resize_array2.new_size"
                                },
                                {
                                    "source": "resize_array2.resized",
                                    "target": "iterate2.init_sorted_array"
                                },
                                {
                                    "source": "iterate4.output",
                                    "target": "iterate2.bin_start_positions"
                                },
                                {
                                    "source": "iterate4.output",
                                    "target": "for_each1.bin_start_positions"
                                },
                                {
                                    "source": "for_each1.slice",
                                    "target": ".binned_triangles"
                                },
                                {
                                    "source": ".triangles",
                                    "target": "for_each.triangles"
                                },
                                {
                                    "source": ".triangles",
                                    "target": "array_size.array"
                                },
                                {
                                    "source": ".triangles",
                                    "target": "iterate2.triangles"
                                }
                            ],
                            "values": [
                                {
                                    "valueName": "resize_array1.new_size",
                                    "valueType": "long",
                                    "value": "32"
                                },
                                {
                                    "valueName": "resize_array1.default",
                                    "valueType": "long",
                                    "value": "0"
                                },
                                {
                                    "valueName": "resize_array2.default",
                                    "valueType": "Math::float3x3",
                                    "value": {
                                        "c0": {
                                            "x": "0f",
                                            "y": "0f",
                                            "z": "0f"
                                        },
                                        "c1": {
                                            "x": "0f",
                                            "y": "0f",
                                            "z": "0f"
                                        },
                                        "c2": {
                                            "x": "0f",
                                            "y": "0f",
                                            "z": "0f"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "name": "shuffle_array",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "379.792 -391.046 1612.87 1032.04"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "array"
                                                                },
                                                                {
                                                                    "metaName": "seed"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "value"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "array",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "seed",
                                    "portDirection": "input",
                                    "portType": "long"
                                },
                                {
                                    "portName": "value",
                                    "portDirection": "output"
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "array_size",
                                    "nodeType": "Core::Array::array_size",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 69"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "get_from_array",
                                    "nodeType": "Core::Array::get_from_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1230 10"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "sequence_array",
                                    "nodeType": "Core::Array::sequence_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 29"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "shuffle_array",
                                    "nodeType": "Core::Array::shuffle_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 95"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "array_size.size",
                                    "target": "sequence_array.size"
                                },
                                {
                                    "source": "get_from_array.value",
                                    "target": ".value"
                                },
                                {
                                    "source": "sequence_array.sequence",
                                    "target": "shuffle_array.array"
                                },
                                {
                                    "source": "shuffle_array.shuffled",
                                    "target": "get_from_array.index"
                                },
                                {
                                    "source": ".array",
                                    "target": "array_size.array"
                                },
                                {
                                    "source": ".array",
                                    "target": "get_from_array.array"
                                },
                                {
                                    "source": ".seed",
                                    "target": "shuffle_array.seed"
                                }
                            ],
                            "values": [
                                {
                                    "valueName": "sequence_array.step",
                                    "valueType": "long",
                                    "value": "1"
                                }
                            ]
                        },
                        {
                            "name": "iterate",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                },
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                },
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopIterate.svg"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Array,build_array"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Iterators,iterate"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Math,decrement"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Array,array_size"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Iterators,for_each"
                                },
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "-70 -151.22 996 546.44"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "flattened_array_in"
                                                                },
                                                                {
                                                                    "metaName": "nested_2d_array"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "flattened_1d_array"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "flattened_array_in",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "nested_2d_array",
                                    "portDirection": "input",
                                    "portIterationTarget": "true"
                                },
                                {
                                    "portName": "flattened_1d_array",
                                    "portDirection": "output"
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "build_array",
                                    "nodeType": "Core::Array::build_array",
                                    "multiInPortNames": [
                                        "port",
                                        "nested_2d_array"
                                    ],
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 10"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "build_array.array",
                                    "target": ".flattened_1d_array"
                                },
                                {
                                    "source": ".flattened_array_in",
                                    "target": "build_array.first.port"
                                },
                                {
                                    "source": ".nested_2d_array",
                                    "target": "build_array.first.nested_2d_array"
                                }
                            ],
                            "values": [],
                            "iterateCompound": {
                                "ports": [
                                    {
                                        "portKind": "state",
                                        "inputPortName": "flattened_array_in",
                                        "outputPortName": "flattened_1d_array"
                                    }
                                ]
                            }
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "all_triangles",
                            "nodeType": "all_triangles",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "315 352"
                                }
                            ]
                        },
                        {
                            "nodeName": "do_while",
                            "nodeType": "do_while",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1230 124"
                                }
                            ]
                        },
                        {
                            "nodeName": "construct_points",
                            "nodeType": "Geometry::Points::construct_points",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "2145 9"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_accelerator_positions",
                            "nodeType": "get_accelerator_positions",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1535 124"
                                }
                            ]
                        },
                        {
                            "nodeName": "bin_triangles",
                            "nodeType": "bin_triangles",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "925 68"
                                }
                            ]
                        },
                        {
                            "nodeName": "shuffle_array",
                            "nodeType": "shuffle_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "620 221"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_closest_locations",
                            "nodeType": "Geometry::Query::get_closest_locations",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "2145 244"
                                }
                            ]
                        },
                        {
                            "nodeName": "iterate",
                            "nodeType": "iterate",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1840 97"
                                }
                            ]
                        }
                    ],
                    "connections": [
                        {
                            "source": "all_triangles.triangles",
                            "target": "shuffle_array.array"
                        },
                        {
                            "source": "do_while.most_recent_positions",
                            "target": "iterate.flattened_array_in"
                        },
                        {
                            "source": "do_while.accelerator_state",
                            "target": "get_accelerator_positions.object"
                        },
                        {
                            "source": "construct_points.points",
                            "target": ".points"
                        },
                        {
                            "source": "get_accelerator_positions.point_position",
                            "target": "iterate.nested_2d_array"
                        },
                        {
                            "source": "bin_triangles.binned_triangles",
                            "target": "do_while.triangles"
                        },
                        {
                            "source": "shuffle_array.value",
                            "target": "bin_triangles.triangles"
                        },
                        {
                            "source": "get_closest_locations.locations",
                            "target": ".locations"
                        },
                        {
                            "source": "iterate.flattened_1d_array",
                            "target": "construct_points.point_position"
                        },
                        {
                            "source": "iterate.flattened_1d_array",
                            "target": "get_closest_locations.positions"
                        },
                        {
                            "source": "iterate.flattened_1d_array",
                            "target": ".positions"
                        },
                        {
                            "source": ".mesh",
                            "target": "all_triangles.mesh"
                        },
                        {
                            "source": ".mesh",
                            "target": "get_closest_locations.geometry"
                        },
                        {
                            "source": ".seed",
                            "target": "do_while.seed"
                        },
                        {
                            "source": ".seed",
                            "target": "shuffle_array.seed"
                        },
                        {
                            "source": ".radius",
                            "target": "get_closest_locations.cutoff_distance"
                        },
                        {
                            "source": ".radius",
                            "target": "do_while.radius"
                        },
                        {
                            "source": ".blocking_accelerators",
                            "target": "do_while.blocking_accelerators"
                        },
                        {
                            "source": ".blocking_accelerator_radius",
                            "target": "do_while.blocking_accelerator_radius"
                        }
                    ],
                    "values": [
                        {
                            "valueName": "do_while.seed",
                            "valueType": "long",
                            "value": "0"
                        },
                        {
                            "valueName": "shuffle_array.seed",
                            "valueType": "long",
                            "value": "0"
                        },
                        {
                            "valueName": "get_closest_locations.use_cutoff_distance",
                            "valueType": "bool",
                            "value": "true"
                        },
                        {
                            "valueName": "get_closest_locations.cutoff_distance",
                            "valueType": "float",
                            "value": "10f"
                        }
                    ]
                },
                {
                    "name": "sample_mask",
                    "uriImported": "file:///scatter_points_in_gaps.json",
                    "metadata": [
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Geometry::Common,sample_interpreted_auto_port_as_scalar"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Logic,if"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Geometry::Common,switch_is_a"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,clamp"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,subtract"
                        },
                        {
                            "metaName": "ViewportRect",
                            "metaType": "string",
                            "metaValue": "592.378 50.9285 1040.67 874.214"
                        },
                        {
                            "metaName": "io_nodes",
                            "metadata": [
                                {
                                    "metaName": "io_inodes",
                                    "metadata": [
                                        {
                                            "metaName": "input",
                                            "metadata": [
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "mesh"
                                                        },
                                                        {
                                                            "metaName": "mask"
                                                        },
                                                        {
                                                            "metaName": "invert_mask"
                                                        },
                                                        {
                                                            "metaName": "locations"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "io_onodes",
                                    "metadata": [
                                        {
                                            "metaName": "output",
                                            "metadata": [
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "ports": [
                        {
                            "portName": "mesh",
                            "portDirection": "input",
                            "portType": "Amino::Object"
                        },
                        {
                            "portName": "mask",
                            "portDirection": "input"
                        },
                        {
                            "portName": "invert_mask",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "locations",
                            "portDirection": "input",
                            "portType": "array<Geometry::Common::GeoLocation>"
                        },
                        {
                            "portName": "output",
                            "portDirection": "output"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "clamp",
                            "nodeType": "Core::Math::clamp",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1230 224"
                                }
                            ]
                        },
                        {
                            "nodeName": "if6",
                            "nodeType": "Core::Logic::if",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1840 46"
                                }
                            ]
                        },
                        {
                            "nodeName": "subtract",
                            "nodeType": "Core::Math::subtract",
                            "multiInPortNames": [
                                "output1",
                                "data"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1535 10"
                                }
                            ]
                        },
                        {
                            "nodeName": "value",
                            "valueType": "float",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1230 29"
                                },
                                {
                                    "metaName": "valuenode_defaultvalue",
                                    "metaType": "string",
                                    "metaValue": "1"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_geo_schema_type",
                            "nodeType": "Geometry::Common::get_geo_schema_type",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "315 477"
                                }
                            ]
                        },
                        {
                            "nodeName": "if",
                            "nodeType": "Core::Logic::if",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "620 327"
                                }
                            ]
                        },
                        {
                            "nodeName": "value1",
                            "valueType": "string",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "315 282"
                                },
                                {
                                    "metaName": "valuenode_defaultvalue",
                                    "metaType": "string",
                                    "metaValue": "point_component"
                                }
                            ]
                        },
                        {
                            "nodeName": "value2",
                            "valueType": "string",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "315 87"
                                },
                                {
                                    "metaName": "valuenode_defaultvalue",
                                    "metaType": "string",
                                    "metaValue": "voxel_tile_tree"
                                }
                            ]
                        },
                        {
                            "nodeName": "if7",
                            "nodeType": "Core::Logic::if",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "620 570"
                                }
                            ]
                        },
                        {
                            "nodeName": "value3",
                            "valueType": "string",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "315 1011"
                                },
                                {
                                    "metaName": "valuenode_defaultvalue",
                                    "metaType": "string",
                                    "metaValue": "point_position"
                                }
                            ]
                        },
                        {
                            "nodeName": "value4",
                            "valueType": "string",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "315 816"
                                },
                                {
                                    "metaName": "valuenode_defaultvalue",
                                    "metaType": "string",
                                    "metaValue": "voxel_position"
                                }
                            ]
                        },
                        {
                            "nodeName": "sample_interpreted_auto_port_as_scalar",
                            "nodeType": "Geometry::Common::sample_interpreted_auto_port_as_scalar",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "925 275"
                                }
                            ]
                        }
                    ],
                    "connections": [
                        {
                            "source": "clamp.clamped",
                            "target": "if6.false_case"
                        },
                        {
                            "source": "clamp.clamped",
                            "target": "subtract.first.data"
                        },
                        {
                            "source": "if6.output",
                            "target": ".output"
                        },
                        {
                            "source": "subtract.output",
                            "target": "if6.true_case"
                        },
                        {
                            "source": "value.output",
                            "target": "subtract.first.output1"
                        },
                        {
                            "source": "get_geo_schema_type.volume",
                            "target": "if.condition"
                        },
                        {
                            "source": "get_geo_schema_type.volume",
                            "target": "if7.condition"
                        },
                        {
                            "source": "if.output",
                            "target": "sample_interpreted_auto_port_as_scalar.geometry_component"
                        },
                        {
                            "source": "value1.output",
                            "target": "if.false_case"
                        },
                        {
                            "source": "value2.output",
                            "target": "if.true_case"
                        },
                        {
                            "source": "if7.output",
                            "target": "sample_interpreted_auto_port_as_scalar.position_property"
                        },
                        {
                            "source": "value3.output",
                            "target": "if7.false_case"
                        },
                        {
                            "source": "value4.output",
                            "target": "if7.true_case"
                        },
                        {
                            "source": "sample_interpreted_auto_port_as_scalar.data",
                            "target": "clamp.value"
                        },
                        {
                            "source": ".mesh",
                            "target": "get_geo_schema_type.object"
                        },
                        {
                            "source": ".mesh",
                            "target": "sample_interpreted_auto_port_as_scalar.geometry"
                        },
                        {
                            "source": ".mask",
                            "target": "sample_interpreted_auto_port_as_scalar.interpreted_scalar_port"
                        },
                        {
                            "source": ".invert_mask",
                            "target": "if6.condition"
                        },
                        {
                            "source": ".locations",
                            "target": "sample_interpreted_auto_port_as_scalar.locations"
                        }
                    ],
                    "values": [
                        {
                            "valueName": "clamp.max",
                            "valueType": "float",
                            "value": "1f"
                        },
                        {
                            "valueName": "value.value",
                            "valueType": "float",
                            "value": "1f"
                        },
                        {
                            "valueName": "value1.value",
                            "valueType": "string",
                            "value": "point_component"
                        },
                        {
                            "valueName": "value2.value",
                            "valueType": "string",
                            "value": "voxel_tile_tree"
                        },
                        {
                            "valueName": "value3.value",
                            "valueType": "string",
                            "value": "point_position"
                        },
                        {
                            "valueName": "value4.value",
                            "valueType": "string",
                            "value": "voxel_position"
                        },
                        {
                            "valueName": "sample_interpreted_auto_port_as_scalar.default_value",
                            "valueType": "float",
                            "value": "1f"
                        },
                        {
                            "valueName": "sample_interpreted_auto_port_as_scalar.geometry_component",
                            "valueType": "string",
                            "value": "point_component"
                        },
                        {
                            "valueName": "sample_interpreted_auto_port_as_scalar.position_property",
                            "valueType": "string",
                            "value": "point_position"
                        }
                    ]
                },
                {
                    "name": "to_accelerator",
                    "uriImported": "file:///scatter_points_in_gaps.json",
                    "metadata": [
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Geometry::Query,build_closest_accelerator"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Array,resize_array"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Array,build_array"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Logic,if"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Object,is_empty"
                        },
                        {
                            "metaName": "io_nodes",
                            "metadata": [
                                {
                                    "metaName": "io_inodes",
                                    "metadata": [
                                        {
                                            "metaName": "input",
                                            "metadata": [
                                                {
                                                    "metaName": "io_metadata",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "10 661"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "blocking_geometry"
                                                        },
                                                        {
                                                            "metaName": "prefer_preview_geometry"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "io_onodes",
                                    "metadata": [
                                        {
                                            "metaName": "output",
                                            "metadata": [
                                                {
                                                    "metaName": "io_metadata",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "2145 180"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "output"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "ViewportRect",
                            "metaType": "string",
                            "metaValue": "988.015 93.6508 1399.13 767.61"
                        }
                    ],
                    "ports": [
                        {
                            "portName": "blocking_geometry",
                            "portDirection": "input",
                            "portType": "Amino::Object"
                        },
                        {
                            "portName": "prefer_preview_geometry",
                            "portDirection": "input",
                            "portType": "bool"
                        },
                        {
                            "portName": "output",
                            "portDirection": "output"
                        }
                    ],
                    "compounds": [
                        {
                            "name": "volume_to_accelerator",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "-9.04057 -58.4424 1425.71 782.197"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "blocking_volume"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "blocking_volume",
                                    "portDirection": "input",
                                    "portType": "Amino::Object"
                                },
                                {
                                    "portName": "output",
                                    "portDirection": "output"
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "has_property",
                                    "nodeType": "Core::Object::has_property",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 10"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "if4",
                                    "nodeType": "Core::Logic::if",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 61"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "set_property",
                                    "nodeType": "Core::Object::set_property",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 132"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "set_property1",
                                    "nodeType": "Core::Object::set_property",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 229"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "value",
                                    "valueType": "string",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "10 287"
                                        },
                                        {
                                            "metaName": "valuenode_defaultvalue",
                                            "metaType": "string",
                                            "metaValue": "voxel_field"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "value1",
                                    "valueType": "string",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "10 482"
                                        },
                                        {
                                            "metaName": "valuenode_defaultvalue",
                                            "metaType": "string",
                                            "metaValue": "voxel_signed_distance"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "voxel_field",
                                    "nodeType": "Core::Fields::voxel_field",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 415"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "has_property.found",
                                    "target": "if4.condition"
                                },
                                {
                                    "source": "if4.output",
                                    "target": ".output"
                                },
                                {
                                    "source": "set_property.out_object",
                                    "target": "set_property1.object"
                                },
                                {
                                    "source": "set_property1.out_object",
                                    "target": "if4.true_case"
                                },
                                {
                                    "source": "value.output",
                                    "target": "set_property.value"
                                },
                                {
                                    "source": "value.output",
                                    "target": "set_property1.key"
                                },
                                {
                                    "source": "value1.output",
                                    "target": "has_property.key"
                                },
                                {
                                    "source": "value1.output",
                                    "target": "voxel_field.property"
                                },
                                {
                                    "source": "voxel_field.voxel_field",
                                    "target": "set_property1.value"
                                },
                                {
                                    "source": ".blocking_volume",
                                    "target": "has_property.object"
                                },
                                {
                                    "source": ".blocking_volume",
                                    "target": "voxel_field.volume"
                                }
                            ],
                            "values": [
                                {
                                    "valueName": "set_property.key",
                                    "valueType": "string",
                                    "value": "component"
                                },
                                {
                                    "valueName": "set_property.value",
                                    "valueType": "string",
                                    "value": "voxel_field"
                                },
                                {
                                    "valueName": "value.value",
                                    "valueType": "string",
                                    "value": "voxel_field"
                                },
                                {
                                    "valueName": "value1.value",
                                    "valueType": "string",
                                    "value": "voxel_signed_distance"
                                },
                                {
                                    "valueName": "voxel_field.property",
                                    "valueType": "string",
                                    "value": "voxel_signed_distance"
                                },
                                {
                                    "valueName": "voxel_field.interpolation",
                                    "valueType": "Geometry::Query::SamplerType",
                                    "value": "kLinear"
                                }
                            ]
                        },
                        {
                            "name": "instance_accelerators",
                            "uriImported": "file:///scatter_points_in_gaps.json",
                            "metadata": [
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_metadata",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "10 461"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "blocking_geometry"
                                                                },
                                                                {
                                                                    "metaName": "prefer_preview_geometry"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_metadata",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "2755 106"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "output"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "1578.87 1.65648 1329.27 729.283"
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "blocking_geometry",
                                    "portDirection": "input",
                                    "portType": "Amino::Object"
                                },
                                {
                                    "portName": "prefer_preview_geometry",
                                    "portDirection": "input",
                                    "portType": "bool"
                                },
                                {
                                    "portName": "output",
                                    "portDirection": "output"
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "build_array4",
                                    "nodeType": "Core::Array::build_array",
                                    "multiInPortNames": [
                                        "output",
                                        "accelerator"
                                    ],
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "2145 245"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "build_array5",
                                    "nodeType": "Core::Array::build_array",
                                    "multiInPortNames": [
                                        "output",
                                        "accelerator"
                                    ],
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1535 343"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "build_array6",
                                    "nodeType": "Core::Array::build_array",
                                    "multiInPortNames": [
                                        "merged_points"
                                    ],
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 547"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "build_closest_accelerator3",
                                    "nodeType": "Geometry::Query::build_closest_accelerator",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1840 456"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "build_closest_accelerator4",
                                    "nodeType": "Geometry::Query::build_closest_accelerator",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1230 547"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "build_closest_accelerator5",
                                    "nodeType": "Geometry::Query::build_closest_accelerator",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "620 401"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "if4",
                                    "nodeType": "Core::Logic::if",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "2450 106"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "if5",
                                    "nodeType": "Core::Logic::if",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1840 213"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "if6",
                                    "nodeType": "Core::Logic::if",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1230 304"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "is_empty",
                                    "nodeType": "Core::Object::is_empty",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "2145 10"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "is_empty1",
                                    "nodeType": "Core::Object::is_empty",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1535 108"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "is_empty2",
                                    "nodeType": "Core::Object::is_empty",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 109"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "bake_instanced_geometry",
                                    "nodeType": "Modeling::Instances::bake_instanced_geometry",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "315 389"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "resize_array",
                                    "nodeType": "Core::Array::resize_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "925 304"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": "build_array4.array",
                                    "target": "if4.false_case"
                                },
                                {
                                    "source": "build_array5.array",
                                    "target": "if5.false_case"
                                },
                                {
                                    "source": "build_array6.array",
                                    "target": "if6.false_case"
                                },
                                {
                                    "source": "build_closest_accelerator3.accelerator",
                                    "target": "build_array4.first.accelerator"
                                },
                                {
                                    "source": "build_closest_accelerator4.accelerator",
                                    "target": "build_array5.first.accelerator"
                                },
                                {
                                    "source": "build_closest_accelerator5.accelerator",
                                    "target": "build_array6.first.merged_points"
                                },
                                {
                                    "source": "if4.output",
                                    "target": ".output"
                                },
                                {
                                    "source": "if5.output",
                                    "target": "build_array4.first.output"
                                },
                                {
                                    "source": "if5.output",
                                    "target": "if4.true_case"
                                },
                                {
                                    "source": "if6.output",
                                    "target": "build_array5.first.output"
                                },
                                {
                                    "source": "if6.output",
                                    "target": "if5.true_case"
                                },
                                {
                                    "source": "is_empty.empty",
                                    "target": "if4.condition"
                                },
                                {
                                    "source": "is_empty1.empty",
                                    "target": "if5.condition"
                                },
                                {
                                    "source": "is_empty2.empty",
                                    "target": "if6.condition"
                                },
                                {
                                    "source": "bake_instanced_geometry.merged_meshes",
                                    "target": "build_closest_accelerator3.geo"
                                },
                                {
                                    "source": "bake_instanced_geometry.merged_meshes",
                                    "target": "is_empty.object"
                                },
                                {
                                    "source": "bake_instanced_geometry.merged_strands",
                                    "target": "build_closest_accelerator4.geo"
                                },
                                {
                                    "source": "bake_instanced_geometry.merged_strands",
                                    "target": "is_empty1.object"
                                },
                                {
                                    "source": "bake_instanced_geometry.merged_points",
                                    "target": "build_closest_accelerator5.geo"
                                },
                                {
                                    "source": "bake_instanced_geometry.merged_points",
                                    "target": "is_empty2.object"
                                },
                                {
                                    "source": "bake_instanced_geometry.merged_points",
                                    "target": "resize_array.default"
                                },
                                {
                                    "source": "resize_array.resized",
                                    "target": "if6.true_case"
                                },
                                {
                                    "source": ".blocking_geometry",
                                    "target": "bake_instanced_geometry.instances"
                                },
                                {
                                    "source": ".prefer_preview_geometry",
                                    "target": "bake_instanced_geometry.prefer_preview_geometry"
                                }
                            ],
                            "values": [
                                {
                                    "valueName": "build_closest_accelerator5.geo_component",
                                    "valueType": "string",
                                    "value": "point_component"
                                },
                                {
                                    "valueName": "bake_instanced_geometry.prefer_preview_geometry",
                                    "valueType": "bool",
                                    "value": "false"
                                }
                            ]
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "get_geo_schema_type",
                            "nodeType": "Geometry::Common::get_geo_schema_type",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "620 235"
                                }
                            ]
                        },
                        {
                            "nodeName": "if",
                            "nodeType": "Core::Logic::if",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1840 180"
                                }
                            ]
                        },
                        {
                            "nodeName": "or",
                            "nodeType": "Core::Logic::or",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1535 9"
                                }
                            ]
                        },
                        {
                            "nodeName": "build_closest_accelerator",
                            "nodeType": "Geometry::Query::build_closest_accelerator",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1230 153"
                                }
                            ]
                        },
                        {
                            "nodeName": "build_closest_accelerator1",
                            "nodeType": "Geometry::Query::build_closest_accelerator",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "925 338"
                                }
                            ]
                        },
                        {
                            "nodeName": "if1",
                            "nodeType": "Core::Logic::if",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1535 447"
                                }
                            ]
                        },
                        {
                            "nodeName": "if2",
                            "nodeType": "Core::Logic::if",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1230 631"
                                }
                            ]
                        },
                        {
                            "nodeName": "if3",
                            "nodeType": "Core::Logic::if",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "925 864"
                                }
                            ]
                        },
                        {
                            "nodeName": "volume_to_accelerator",
                            "nodeType": "volume_to_accelerator",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "315 672"
                                }
                            ]
                        },
                        {
                            "nodeName": "build_array",
                            "nodeType": "Core::Array::build_array",
                            "multiInPortNames": [
                                "blocking_geometry"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "620 913"
                                }
                            ]
                        },
                        {
                            "nodeName": "build_array1",
                            "nodeType": "Core::Array::build_array",
                            "multiInPortNames": [
                                "blocking_geometry"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "620 694"
                                }
                            ]
                        },
                        {
                            "nodeName": "build_array2",
                            "nodeType": "Core::Array::build_array",
                            "multiInPortNames": [
                                "blocking_geometry"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1230 412"
                                }
                            ]
                        },
                        {
                            "nodeName": "build_array3",
                            "nodeType": "Core::Array::build_array",
                            "multiInPortNames": [
                                "blocking_geometry"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1535 228"
                                }
                            ]
                        },
                        {
                            "nodeName": "instance_accelerators",
                            "nodeType": "instance_accelerators",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "925 597"
                                }
                            ]
                        }
                    ],
                    "connections": [
                        {
                            "source": "get_geo_schema_type.volume",
                            "target": "if3.condition"
                        },
                        {
                            "source": "get_geo_schema_type.instances",
                            "target": "if2.condition"
                        },
                        {
                            "source": "get_geo_schema_type.mesh",
                            "target": "or.first"
                        },
                        {
                            "source": "get_geo_schema_type.strands",
                            "target": "or.second"
                        },
                        {
                            "source": "get_geo_schema_type.points",
                            "target": "if1.condition"
                        },
                        {
                            "source": "if.output",
                            "target": ".output"
                        },
                        {
                            "source": "or.output",
                            "target": "if.condition"
                        },
                        {
                            "source": "build_closest_accelerator.accelerator",
                            "target": "build_array3.first.blocking_geometry"
                        },
                        {
                            "source": "build_closest_accelerator1.accelerator",
                            "target": "build_array2.first.blocking_geometry"
                        },
                        {
                            "source": "if1.output",
                            "target": "if.false_case"
                        },
                        {
                            "source": "if2.output",
                            "target": "if1.false_case"
                        },
                        {
                            "source": "if3.output",
                            "target": "if2.false_case"
                        },
                        {
                            "source": "volume_to_accelerator.output",
                            "target": "build_array1.first.blocking_geometry"
                        },
                        {
                            "source": "build_array.array",
                            "target": "if3.false_case"
                        },
                        {
                            "source": "build_array1.array",
                            "target": "if3.true_case"
                        },
                        {
                            "source": "build_array2.array",
                            "target": "if1.true_case"
                        },
                        {
                            "source": "build_array3.array",
                            "target": "if.true_case"
                        },
                        {
                            "source": "instance_accelerators.output",
                            "target": "if2.true_case"
                        },
                        {
                            "source": ".blocking_geometry",
                            "target": "get_geo_schema_type.object"
                        },
                        {
                            "source": ".blocking_geometry",
                            "target": "build_closest_accelerator.geo"
                        },
                        {
                            "source": ".blocking_geometry",
                            "target": "build_closest_accelerator1.geo"
                        },
                        {
                            "source": ".blocking_geometry",
                            "target": "volume_to_accelerator.blocking_volume"
                        },
                        {
                            "source": ".blocking_geometry",
                            "target": "build_array.first.blocking_geometry"
                        },
                        {
                            "source": ".blocking_geometry",
                            "target": "instance_accelerators.blocking_geometry"
                        },
                        {
                            "source": ".prefer_preview_geometry",
                            "target": "instance_accelerators.prefer_preview_geometry"
                        }
                    ],
                    "values": [
                        {
                            "valueName": "build_closest_accelerator1.geo_component",
                            "valueType": "string",
                            "value": "point_component"
                        },
                        {
                            "valueName": "instance_accelerators.prefer_preview_geometry",
                            "valueType": "bool",
                            "value": "false"
                        }
                    ]
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "construct_points",
                    "nodeType": "Geometry::Points::construct_points",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2755 10"
                        }
                    ]
                },
                {
                    "nodeName": "if",
                    "nodeType": "Core::Logic::if",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2145 51"
                        }
                    ]
                },
                {
                    "nodeName": "if1",
                    "nodeType": "Core::Logic::if",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2450 436"
                        }
                    ]
                },
                {
                    "nodeName": "get_from_array",
                    "nodeType": "Core::Array::get_from_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2145 553"
                        }
                    ]
                },
                {
                    "nodeName": "get_from_array1",
                    "nodeType": "Core::Array::get_from_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1840 58"
                        }
                    ]
                },
                {
                    "nodeName": "weighted_sample_elimination",
                    "nodeType": "weighted_sample_elimination",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1535 341"
                        }
                    ]
                },
                {
                    "nodeName": "blue_noise_dart_throwing",
                    "nodeType": "blue_noise_dart_throwing",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "925 160"
                        }
                    ]
                },
                {
                    "nodeName": "sample_mask",
                    "nodeType": "sample_mask",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1230 300"
                        }
                    ]
                },
                {
                    "nodeName": "value",
                    "valueType": "float",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1230 655"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "10"
                        }
                    ]
                },
                {
                    "nodeName": "resize_array",
                    "nodeType": "Core::Array::resize_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "620 415"
                        }
                    ]
                },
                {
                    "nodeName": "array_size",
                    "nodeType": "Core::Array::array_size",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "315 507"
                        }
                    ]
                },
                {
                    "nodeName": "to_accelerator",
                    "nodeType": "to_accelerator",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "315 200"
                        }
                    ]
                },
                {
                    "nodeName": "greater",
                    "nodeType": "Core::Logic::greater",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2145 294"
                        }
                    ]
                },
                {
                    "nodeName": "if3",
                    "nodeType": "Core::Logic::if",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2450 91"
                        }
                    ]
                },
                {
                    "nodeName": "if4",
                    "nodeType": "Core::Logic::if",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2755 275"
                        }
                    ]
                },
                {
                    "nodeName": "flatten_nested_array",
                    "nodeType": "Core::Array::flatten_nested_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "620 220"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "construct_points.points",
                    "target": ".points"
                },
                {
                    "source": "if.output",
                    "target": "if3.true_case"
                },
                {
                    "source": "if1.output",
                    "target": "if4.true_case"
                },
                {
                    "source": "get_from_array.value",
                    "target": "if1.true_case"
                },
                {
                    "source": "get_from_array1.value",
                    "target": "if.true_case"
                },
                {
                    "source": "weighted_sample_elimination.points_to_keep",
                    "target": "get_from_array.index"
                },
                {
                    "source": "weighted_sample_elimination.points_to_keep",
                    "target": "get_from_array1.index"
                },
                {
                    "source": "blue_noise_dart_throwing.points",
                    "target": "weighted_sample_elimination.points"
                },
                {
                    "source": "blue_noise_dart_throwing.positions",
                    "target": "get_from_array1.array"
                },
                {
                    "source": "blue_noise_dart_throwing.positions",
                    "target": "if.false_case"
                },
                {
                    "source": "blue_noise_dart_throwing.positions",
                    "target": "weighted_sample_elimination.positions"
                },
                {
                    "source": "blue_noise_dart_throwing.locations",
                    "target": "get_from_array.array"
                },
                {
                    "source": "blue_noise_dart_throwing.locations",
                    "target": "if1.false_case"
                },
                {
                    "source": "blue_noise_dart_throwing.locations",
                    "target": "sample_mask.locations"
                },
                {
                    "source": "sample_mask.output",
                    "target": "weighted_sample_elimination.mask"
                },
                {
                    "source": "value.output",
                    "target": "weighted_sample_elimination.influence_limit"
                },
                {
                    "source": "resize_array.resized",
                    "target": "blue_noise_dart_throwing.blocking_accelerator_radius"
                },
                {
                    "source": "array_size.size",
                    "target": "resize_array.new_size"
                },
                {
                    "source": "to_accelerator.output",
                    "target": "flatten_nested_array.nested_array"
                },
                {
                    "source": "greater.output",
                    "target": "if3.condition"
                },
                {
                    "source": "greater.output",
                    "target": "if4.condition"
                },
                {
                    "source": "if3.output",
                    "target": ".positions"
                },
                {
                    "source": "if3.output",
                    "target": "construct_points.point_position"
                },
                {
                    "source": "if4.output",
                    "target": ".locations"
                },
                {
                    "source": "flatten_nested_array.flattened_array",
                    "target": "blue_noise_dart_throwing.blocking_accelerators"
                },
                {
                    "source": ".mesh",
                    "target": "blue_noise_dart_throwing.mesh"
                },
                {
                    "source": ".mesh",
                    "target": "sample_mask.mesh"
                },
                {
                    "source": ".radius",
                    "target": "weighted_sample_elimination.radius"
                },
                {
                    "source": ".radius",
                    "target": "blue_noise_dart_throwing.radius"
                },
                {
                    "source": ".radius",
                    "target": "greater.first"
                },
                {
                    "source": ".enable_mask",
                    "target": "if.condition"
                },
                {
                    "source": ".enable_mask",
                    "target": "if1.condition"
                },
                {
                    "source": ".mask",
                    "target": "sample_mask.mask"
                },
                {
                    "source": ".invert_mask",
                    "target": "sample_mask.invert_mask"
                },
                {
                    "source": ".seed",
                    "target": "blue_noise_dart_throwing.seed"
                },
                {
                    "source": ".blocking_geometry",
                    "target": "array_size.array"
                },
                {
                    "source": ".blocking_geometry",
                    "target": "to_accelerator.blocking_geometry"
                },
                {
                    "source": ".blocking_geometry_extra_radius",
                    "target": "resize_array.array"
                },
                {
                    "source": ".prefer_preview_geometry",
                    "target": "to_accelerator.prefer_preview_geometry"
                }
            ],
            "values": [
                {
                    "valueName": "weighted_sample_elimination.radius",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "blue_noise_dart_throwing.seed",
                    "valueType": "long",
                    "value": "2"
                },
                {
                    "valueName": "blue_noise_dart_throwing.radius",
                    "valueType": "float",
                    "value": "0.5f"
                },
                {
                    "valueName": "sample_mask.invert_mask",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "value.value",
                    "valueType": "float",
                    "value": "10f"
                },
                {
                    "valueName": "to_accelerator.prefer_preview_geometry",
                    "valueType": "bool",
                    "value": "false"
                }
            ]
        }
    ]
}