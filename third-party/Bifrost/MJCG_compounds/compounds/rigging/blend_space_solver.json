{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///Math_matrix_to_quaternion.json"
        },
        {
            "uri": "file:///Math_quaternion_to_matrix.json"
        },
        {
            "uri": "file:///Math_compose_transform_matrix.json"
        },
        {
            "uri": "file:///Math_lerp_with_clamp.json"
        },
        {
            "uri": "file:///Math_nlerp.json"
        },
        {
            "uri": "file:///Math_quaternion_slerp.json"
        },
        {
            "uri": "file:///linear_interpolate_transform.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "MJCG::Rigging::blend_space_solver",
            "uriImported": "file:///blend_space_solver.json",
            "metadata": [
                {
                    "metaName": "documentation",
                    "metaType": "string",
                    "metaValue": "../rigging/docs/blend_space_solver.md"
                },
                {
                    "metaName": "icon",
                    "metaType": "string",
                    "metaValue": "../icons/mjcg.png"
                },
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "io_metadata",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "-1322.56 202.129"
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "fraction"
                                                },
                                                {
                                                    "metaName": "matrix"
                                                },
                                                {
                                                    "metaName": "space_a_ref"
                                                },
                                                {
                                                    "metaName": "space_a_ctl"
                                                },
                                                {
                                                    "metaName": "space_b_ref"
                                                },
                                                {
                                                    "metaName": "space_b_ctl"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "out_matrix"
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_metadata",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "255.923 239.451"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,MJCG::Core::Math,matrix_lerp"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostBoard,MJCG::Math,matrix_lerp"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostBoard,MJCG::Rigging,mjEyelid_solver"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostBoard,MJCG::Rigging,mjLookAt_solver"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostBoard,MJCG::Rigging,mjSpaceSwitch_solver"
                },
                {
                    "metaName": "UILayout",
                    "metaType": "string",
                    "metaValue": "{\n    \"NodeLayout\": {\n        \"hideUndeclaredPorts\": false,\n        \"items\": [\n            {\n                \"port\": \"matrix\"\n            },\n            {\n                \"port\": \"fraction\"\n            },\n            {\n                \"port\": \"space_a_ref\"\n            },\n            {\n                \"port\": \"space_a_ctl\"\n            },\n            {\n                \"port\": \"space_b_ref\"\n            },\n            {\n                \"port\": \"space_b_ctl\"\n            }\n        ]\n    }\n}\n"
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "-1908.87 -40.1527 2977.56 823.066"
                }
            ],
            "ports": [
                {
                    "portName": "out_matrix",
                    "portDirection": "output",
                    "portType": "Math::float4x4"
                },
                {
                    "portName": "fraction",
                    "portDirection": "input",
                    "portType": "float"
                },
                {
                    "portName": "matrix",
                    "portDirection": "input",
                    "portType": "Math::float4x4"
                },
                {
                    "portName": "space_a_ref",
                    "portDirection": "input",
                    "portType": "Math::float4x4"
                },
                {
                    "portName": "space_a_ctl",
                    "portDirection": "input",
                    "portType": "Math::float4x4"
                },
                {
                    "portName": "space_b_ref",
                    "portDirection": "input",
                    "portType": "Math::float4x4"
                },
                {
                    "portName": "space_b_ctl",
                    "portDirection": "input",
                    "portType": "Math::float4x4"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "matrix_multiply",
                    "nodeType": "Core::Math::matrix_multiply",
                    "multiInPortNames": [
                        "output1",
                        "output2"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-626.079 519.008"
                        }
                    ]
                },
                {
                    "nodeName": "matrix_multiply1",
                    "nodeType": "Core::Math::matrix_multiply",
                    "multiInPortNames": [
                        "output1",
                        "output2"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-632.147 0.0631706"
                        }
                    ]
                },
                {
                    "nodeName": "matrix_multiply2",
                    "nodeType": "Core::Math::matrix_multiply",
                    "multiInPortNames": [
                        "output1",
                        "output2"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-309.476 419.571"
                        }
                    ]
                },
                {
                    "nodeName": "matrix_multiply3",
                    "nodeType": "Core::Math::matrix_multiply",
                    "multiInPortNames": [
                        "output1",
                        "output2"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-322.217 98.1906"
                        }
                    ]
                },
                {
                    "nodeName": "inverse_matrix",
                    "nodeType": "Core::Math::inverse_matrix",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-930.524 23.4028"
                        }
                    ]
                },
                {
                    "nodeName": "inverse_matrix1",
                    "nodeType": "Core::Math::inverse_matrix",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-918.624 541.019"
                        }
                    ]
                },
                {
                    "nodeName": "matrix_lerp",
                    "nodeType": "MJCG::Core::Math::linear_interpolate_transform",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-15.8645 239.751"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "matrix_multiply.matrix",
                    "target": "matrix_multiply2.first.output2"
                },
                {
                    "source": "matrix_multiply1.matrix",
                    "target": "matrix_multiply3.first.output2"
                },
                {
                    "source": ".space_a_ctl",
                    "target": "matrix_multiply3.first.output1"
                },
                {
                    "source": ".space_b_ctl",
                    "target": "matrix_multiply2.first.output1"
                },
                {
                    "source": ".space_a_ref",
                    "target": "inverse_matrix.matrix"
                },
                {
                    "source": "inverse_matrix.inverted",
                    "target": "matrix_multiply1.first.output1"
                },
                {
                    "source": ".space_b_ref",
                    "target": "inverse_matrix1.matrix"
                },
                {
                    "source": "inverse_matrix1.inverted",
                    "target": "matrix_multiply.first.output1"
                },
                {
                    "source": "matrix_multiply3.matrix",
                    "target": "matrix_lerp.first"
                },
                {
                    "source": "matrix_multiply2.matrix",
                    "target": "matrix_lerp.second"
                },
                {
                    "source": ".fraction",
                    "target": "matrix_lerp.fraction"
                },
                {
                    "source": "matrix_lerp.interpolated",
                    "target": ".out_matrix"
                },
                {
                    "source": ".matrix",
                    "target": "matrix_multiply1.first.output2"
                },
                {
                    "source": ".matrix",
                    "target": "matrix_multiply.first.output2"
                }
            ],
            "values": []
        }
    ]
}