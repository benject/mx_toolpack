{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///bifrost_object_i.json"
        },
        {
            "uri": "file:///strands_framing_type.json"
        },
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///riv_types.json"
        },
        {
            "uri": "file:///point_types.json"
        },
        {
            "uri": "file:///FCurve.json"
        },
        {
            "uri": "file:///riv_ops.json"
        },
        {
            "uri": "file:///CoreArrayOps.json"
        },
        {
            "uri": "file:///bifrost_geometry_query_types.json"
        },
        {
            "uri": "file:///geometry_types.json"
        },
        {
            "uri": "file:///get_property_any.json"
        },
        {
            "uri": "file:///get_property.json"
        },
        {
            "uri": "file:///get_geo_property.json"
        },
        {
            "uri": "file:///get_point_tangent.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///access_offset_array.json"
        },
        {
            "uri": "file:///Math_array.json"
        },
        {
            "uri": "file:///Core_Array_slice_array.json"
        },
        {
            "uri": "file:///increment_decrement.json"
        },
        {
            "uri": "file:///int_filter.json"
        },
        {
            "uri": "file:///project_vector.json"
        },
        {
            "uri": "file:///Math_axis_angle_to_quaternion.json"
        },
        {
            "uri": "file:///Math_multiply_quaternions.json"
        },
        {
            "uri": "file:///Math_rotate_by_quaternion.json"
        },
        {
            "uri": "file:///get_strands_structure.json"
        },
        {
            "uri": "file:///get_point_position.json"
        },
        {
            "uri": "file:///array_conversion_type.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///Math_constants.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds_impl.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds.json"
        },
        {
            "uri": "file:///Core_Constants_default_value.json"
        },
        {
            "uri": "file:///flatten_2D_array.json"
        },
        {
            "uri": "file:///erase_property.json"
        },
        {
            "uri": "file:///has_property.json"
        },
        {
            "uri": "file:///create_volume_geo_prop.json"
        },
        {
            "uri": "file:///is_a.json"
        },
        {
            "uri": "file:///create_object_from_schema.json"
        },
        {
            "uri": "file:///is_a_mesh.json"
        },
        {
            "uri": "file:///is_a_strands.json"
        },
        {
            "uri": "file:///is_a_points.json"
        },
        {
            "uri": "file:///is_a_volume.json"
        },
        {
            "uri": "file:///get_geo_schema_type.json"
        },
        {
            "uri": "file:///switch_is_a.json"
        },
        {
            "uri": "file:///get_target_component.json"
        },
        {
            "uri": "file:///create_data_geo_prop.json"
        },
        {
            "uri": "file:///set_property_any.json"
        },
        {
            "uri": "file:///set_property.json"
        },
        {
            "uri": "file:///get_geo_component_count.json"
        },
        {
            "uri": "file:///set_geo_property.array.json"
        },
        {
            "uri": "file:///set_geo_property.scalar.json"
        },
        {
            "uri": "file:///set_point_normal.json"
        },
        {
            "uri": "file:///Core_Array_reverse_array.json"
        },
        {
            "uri": "file:///remove_from_array.json"
        },
        {
            "uri": "file:///remove_first_in_array.json"
        },
        {
            "uri": "file:///set_point_tangent.json"
        },
        {
            "uri": "file:///get_point_normal.json"
        },
        {
            "uri": "file:///get_point_binormal.json"
        },
        {
            "uri": "file:///set_point_orientation.json"
        },
        {
            "uri": "file:///set_point_binormal.json"
        },
        {
            "uri": "file:///get_array_indices.json"
        },
        {
            "uri": "file:///update_point_strand_index.json"
        },
        {
            "uri": "file:///check_point_strand_index.json"
        },
        {
            "uri": "file:///find_orthogonal_vectors.json"
        },
        {
            "uri": "file:///Math_euler_to_quaternion.json"
        },
        {
            "uri": "file:///Math_degrees_to_radians.json"
        },
        {
            "uri": "file:///Core_Array_flatten_nested_array.json"
        },
        {
            "uri": "file:///object_terminal.json"
        },
        {
            "uri": "file:///get_property_keys.json"
        },
        {
            "uri": "file:///is_empty.json"
        },
        {
            "uri": "file:///materials.json"
        },
        {
            "uri": "file:///set_strands_shape.json"
        },
        {
            "uri": "file:///Math_quaternion_to_matrix.json"
        },
        {
            "uri": "file:///Math_compose_transform_matrix.json"
        },
        {
            "uri": "file:///Math_vector3_to_vector4.json"
        },
        {
            "uri": "file:///Math_vector4_to_vector3.json"
        },
        {
            "uri": "file:///multiply_vector_by_matrix.json"
        },
        {
            "uri": "file:///get_geo_property_check.json"
        },
        {
            "uri": "file:///get_sub_object.json"
        },
        {
            "uri": "file:///get_point_count.json"
        },
        {
            "uri": "file:///set_sub_object_property.json"
        },
        {
            "uri": "file:///validate_strands.json"
        },
        {
            "uri": "file:///construct_strands.json"
        },
        {
            "uri": "file:///update_strands_tangents.json"
        },
        {
            "uri": "file:///update_strands_ratio.json"
        },
        {
            "uri": "file:///check_point_ratio.json"
        },
        {
            "uri": "file:///set_strands_size_profile.json"
        },
        {
            "uri": "file:///instances.json"
        },
        {
            "uri": "file:///Math_matrix_to_quaternion.json"
        },
        {
            "uri": "file:///Math_length_squared.json"
        },
        {
            "uri": "file:///Math_almost_equal.json"
        },
        {
            "uri": "file:///rotation_between_vectors.json"
        },
        {
            "uri": "file:///Core_Array_array_is_empty.json"
        },
        {
            "uri": "file:///get_geo_target_count.json"
        },
        {
            "uri": "file:///volume_types.json"
        },
        {
            "uri": "file:///volume_nodedefs.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_vector.json"
        },
        {
            "uri": "file:///standard_surface_mat.json"
        },
        {
            "uri": "file:///assign_diagnostic_material.json"
        },
        {
            "uri": "file:///set_orientation_value.json"
        },
        {
            "uri": "file:///get_geo_property_or_default.json"
        },
        {
            "uri": "file:///CoreStringOps.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///jotun_rand.json"
        },
        {
            "uri": "file:///random_value.json"
        },
        {
            "uri": "file:///randomize_point_rotation.json"
        },
        {
            "uri": "file:///Math_change_range.json"
        },
        {
            "uri": "file:///change_range.json"
        },
        {
            "uri": "file:///validate_mesh.json"
        },
        {
            "uri": "file:///construct_mesh.json"
        },
        {
            "uri": "file:///update_mesh_normals.json"
        },
        {
            "uri": "file:///create_mesh_sphere.json"
        },
        {
            "uri": "file:///Core_Array_sum_array_impl.json"
        },
        {
            "uri": "file:///Core_Array_sum_array.json"
        },
        {
            "uri": "file:///fluids_types.json"
        },
        {
            "uri": "file:///fluids_nodedefs.json"
        },
        {
            "uri": "file:///string_to_array.json"
        },
        {
            "uri": "file:///half_of.json"
        },
        {
            "uri": "file:///create_mesh_cube.json"
        },
        {
            "uri": "file:///randomize_selection.json"
        },
        {
            "uri": "file:///delete_points_in_points.json"
        },
        {
            "uri": "file:///delete_points.json"
        },
        {
            "uri": "file:///find_all_in_array.json"
        },
        {
            "uri": "file:///cull_points.json"
        },
        {
            "uri": "file:///create_mesh_plane.json"
        },
        {
            "uri": "file:///Core_Array_all_any_array.json"
        },
        {
            "uri": "file:///create_instances.json"
        },
        {
            "uri": "file:///flatten_instance_selection.json"
        },
        {
            "uri": "file:///Math_quaternion_invert.json"
        },
        {
            "uri": "file:///points_to_transforms.json"
        },
        {
            "uri": "file:///Math_quaternion_to_axis_angle.json"
        },
        {
            "uri": "file:///set_point_position.json"
        },
        {
            "uri": "file:///translate_points.json"
        },
        {
            "uri": "file:///Math_lerp_with_clamp.json"
        },
        {
            "uri": "file:///scale_points.json"
        },
        {
            "uri": "file:///rotate_points.json"
        },
        {
            "uri": "file:///dump_object.json"
        },
        {
            "uri": "file:///Math_nlerp.json"
        },
        {
            "uri": "file:///Math_quaternion_slerp.json"
        },
        {
            "uri": "file:///get_indexed_geo_property_check.json"
        },
        {
            "uri": "file:///get_mesh_structure.json"
        },
        {
            "uri": "file:///transform_points.json"
        },
        {
            "uri": "file:///merge_meshes.json"
        },
        {
            "uri": "file:///merge_points.json"
        },
        {
            "uri": "file:///merge_strands.json"
        },
        {
            "uri": "file:///merge_geometry.json"
        },
        {
            "uri": "file:///bake_instanced_geometry.json"
        },
        {
            "uri": "file:///normal_and_tangent_to_orientation.json"
        },
        {
            "uri": "file:///strands_basis_to_orientation.json"
        },
        {
            "uri": "file:///point_transform_scope.json"
        },
        {
            "uri": "file:///array_average.json"
        },
        {
            "uri": "file:///get_strand_length.json"
        },
        {
            "uri": "file:///update_strands_orientations.json"
        },
        {
            "uri": "file:///fill_interpolated_array.json"
        },
        {
            "uri": "file:///add_points_to_points.json"
        },
        {
            "uri": "file:///validate_points.json"
        },
        {
            "uri": "file:///construct_points.json"
        },
        {
            "uri": "file:///oscillator.json"
        },
        {
            "uri": "file:///get_point_ratio.json"
        },
        {
            "uri": "file:///get_point_orientation.json"
        },
        {
            "uri": "file:///check_strands_orientations.json"
        },
        {
            "uri": "file:///get_point_length.json"
        },
        {
            "uri": "file:///get_point_size.json"
        },
        {
            "uri": "file:///curl_strands.json"
        },
        {
            "uri": "file:///cumulative_sum_array.json"
        },
        {
            "uri": "file:///int_array_filter.json"
        },
        {
            "uri": "file:///set_geo_property_data.json"
        },
        {
            "uri": "file:///create_strands_from_counts.json"
        },
        {
            "uri": "file:///set_strands_pos_from_root_data.json"
        },
        {
            "uri": "file:///create_strands_along_normals.json"
        },
        {
            "uri": "file:///get_from_interpolated_array.json"
        },
        {
            "uri": "file:///mpm_types.json"
        },
        {
            "uri": "file:///setup_mpm_fiber.json"
        },
        {
            "uri": "file:///make_mpm_fiber.json"
        },
        {
            "uri": "file:///mpm_nodedefs.json"
        },
        {
            "uri": "file:///get_point_velocity.json"
        },
        {
            "uri": "file:///set_point_velocity.json"
        },
        {
            "uri": "file:///get_mpm_cloth_mesh.json"
        },
        {
            "uri": "file:///get_mpm_fiber_strands.json"
        },
        {
            "uri": "file:///create_mpm_density.json"
        },
        {
            "uri": "file:///set_point_shape.json"
        },
        {
            "uri": "file:///set_particle_shape.json"
        },
        {
            "uri": "file:///scale_geo_property_uniformly.json"
        },
        {
            "uri": "file:///uniform_scale_geometry.json"
        },
        {
            "uri": "file:///extract_property.json"
        },
        {
            "uri": "file:///simulation_types.json"
        },
        {
            "uri": "file:///simulation_nodedefs.json"
        },
        {
            "uri": "file:///should_simulate.json"
        },
        {
            "uri": "file:///get_velocity_property_name.json"
        },
        {
            "uri": "file:///get_velocity_property.json"
        },
        {
            "uri": "file:///is_valid_object_volume.json"
        },
        {
            "uri": "file:///get_child_object.json"
        },
        {
            "uri": "file:///has_child_object.json"
        },
        {
            "uri": "file:///next_child.json"
        },
        {
            "uri": "file:///get_position_property.json"
        },
        {
            "uri": "file:///get_simulation_units.json"
        },
        {
            "uri": "file:///get_position_in_units.json"
        },
        {
            "uri": "file:///aero_nodedefs.json"
        },
        {
            "uri": "file:///object_has_tag.json"
        },
        {
            "uri": "file:///compute_buoyancy_force.json"
        },
        {
            "uri": "file:///compute_vorticity_force.json"
        },
        {
            "uri": "file:///influence_fields_types.json"
        },
        {
            "uri": "file:///rotation_vector_to_quaternion.json"
        },
        {
            "uri": "file:///set_in_place_geo_property_data.json"
        },
        {
            "uri": "file:///apply_modify_for_type.json"
        },
        {
            "uri": "file:///apply_field_modify_for_type.json"
        },
        {
            "uri": "file:///apply_field_modify_for_boolean.json"
        },
        {
            "uri": "file:///apply_modify_for_boolean.json"
        },
        {
            "uri": "file:///insert_child_object.json"
        },
        {
            "uri": "file:///volume_influence.json"
        },
        {
            "uri": "file:///drag_influence.json"
        },
        {
            "uri": "file:///get_position_property_name.json"
        },
        {
            "uri": "file:///set_velocity_property.json"
        },
        {
            "uri": "file:///init_kill_fields.json"
        },
        {
            "uri": "file:///set_units_on_body.json"
        },
        {
            "uri": "file:///apply_fields.json"
        },
        {
            "uri": "file:///mpm_subdiv_nodedefs.json"
        },
        {
            "uri": "file:///mpm_material_switch.json"
        },
        {
            "uri": "file:///mpm_particle_to_volume.json"
        },
        {
            "uri": "file:///inside_bound.json"
        },
        {
            "uri": "file:///get_simulation_bounds.json"
        },
        {
            "uri": "file:///apply_bounds_to_particles.json"
        },
        {
            "uri": "file:///compute_time_fraction.json"
        },
        {
            "uri": "file:///converters_types.json"
        },
        {
            "uri": "file:///compute_voxel_scale.json"
        },
        {
            "uri": "file:///converters_nodedefs.json"
        },
        {
            "uri": "file:///post_process_level_set.json"
        },
        {
            "uri": "file:///compute_fog_density.json"
        },
        {
            "uri": "file:///delete_level_set.json"
        },
        {
            "uri": "file:///if_compute_volume.json"
        },
        {
            "uri": "file:///setup_resolution_fields.json"
        },
        {
            "uri": "file:///mesh_to_volume.json"
        },
        {
            "uri": "file:///points_to_volume.json"
        },
        {
            "uri": "file:///convert_to_volume_internal.json"
        },
        {
            "uri": "file:///create_mpm_collision_volume.json"
        },
        {
            "uri": "file:///collide_mpm.json"
        },
        {
            "uri": "file:///convert_auto_resolution_mode.json"
        },
        {
            "uri": "file:///convert_to_volume.json"
        },
        {
            "uri": "file:///compute_mpm_velocity_volume.json"
        },
        {
            "uri": "file:///compute_point_velocities.json"
        },
        {
            "uri": "file:///compute_source_velocities.json"
        },
        {
            "uri": "file:///array_has_values.json"
        },
        {
            "uri": "file:///simulation_types_2.json"
        },
        {
            "uri": "file:///has_animated_properties.json"
        },
        {
            "uri": "file:///voxelize_if_changed.json"
        },
        {
            "uri": "file:///voxelize_source_if_needed.json"
        },
        {
            "uri": "file:///compute_bounding_sphere.json"
        },
        {
            "uri": "file:///compute_best_fit_rotation.json"
        },
        {
            "uri": "file:///mpm_iterations_per_frame.json"
        },
        {
            "uri": "file:///randomize_geo_property.json"
        },
        {
            "uri": "file:///get_indexer_element.json"
        },
        {
            "uri": "file:///get_max_index.json"
        },
        {
            "uri": "file:///is_a_range_geo_property.json"
        },
        {
            "uri": "file:///get_range_geo_property.json"
        },
        {
            "uri": "file:///Core_Array_empty_array.json"
        },
        {
            "uri": "file:///sample_volume_property.json"
        },
        {
            "uri": "file:///math_util.json"
        },
        {
            "uri": "file:///get_loc_element.json"
        },
        {
            "uri": "file:///invalid_index.json"
        },
        {
            "uri": "file:///get_mesh_geo_loc_data.json"
        },
        {
            "uri": "file:///max_weight.json"
        },
        {
            "uri": "file:///mesh_v_interp.json"
        },
        {
            "uri": "file:///mesh_fv_interp.json"
        },
        {
            "uri": "file:///mesh_f_interp.json"
        },
        {
            "uri": "file:///choose_mesh_values.json"
        },
        {
            "uri": "file:///get_point_geo_loc_data.json"
        },
        {
            "uri": "file:///point_p_interp.json"
        },
        {
            "uri": "file:///get_strand_geo_loc_data.json"
        },
        {
            "uri": "file:///strand_p_interp.json"
        },
        {
            "uri": "file:///strand_s_interp.json"
        },
        {
            "uri": "file:///choose_strand_values.json"
        },
        {
            "uri": "file:///sample_property.json"
        },
        {
            "uri": "file:///create_point_cloud.json"
        },
        {
            "uri": "file:///motion_distribute_points.json"
        },
        {
            "uri": "file:///generate_sample_locations.json"
        },
        {
            "uri": "file:///time_to_seed.json"
        },
        {
            "uri": "file:///generate_sample_points.json"
        },
        {
            "uri": "file:///sample_prop_if_exists.json"
        },
        {
            "uri": "file:///set_particle_property_for_type.json"
        },
        {
            "uri": "file:///set_particle_property_no_sample.json"
        },
        {
            "uri": "file:///set_per_particle_properties.json"
        },
        {
            "uri": "file:///apply_vertex_maps.json"
        },
        {
            "uri": "file:///get_normal_property_name.json"
        },
        {
            "uri": "file:///set_emit_velocities.json"
        },
        {
            "uri": "file:///initialize_particle_age_on_emit.json"
        },
        {
            "uri": "file:///create_points.json"
        },
        {
            "uri": "file:///add_point_id_if_needed.json"
        },
        {
            "uri": "file:///split_points_by_material.json"
        },
        {
            "uri": "file:///seed_mpm_particles.json"
        },
        {
            "uri": "file:///compute_time_difference_scale.json"
        },
        {
            "uri": "file:///resample_volume.json"
        },
        {
            "uri": "file:///prepare_mpm_collider.json"
        },
        {
            "uri": "file:///setup_mpm_solve_object.json"
        },
        {
            "uri": "file:///simulate_mpm_internal.json"
        },
        {
            "uri": "file:///particle_shape_settings.json"
        },
        {
            "uri": "file:///set_bounds_from_geo.json"
        },
        {
            "uri": "file:///set_bounds_property.json"
        },
        {
            "uri": "file:///mpm_solver_settings.json"
        },
        {
            "uri": "file:///simulate_mpm.json"
        },
        {
            "uri": "file:///simulation_collide.json"
        },
        {
            "uri": "file:///build_closest_accelerator.json"
        },
        {
            "uri": "file:///sample_closest_accelerator.json"
        },
        {
            "uri": "file:///get_closest_locations.json"
        },
        {
            "uri": "file:///set_strand_up_vector.json"
        },
        {
            "uri": "file:///get_strands_start_points.json"
        },
        {
            "uri": "file:///twice_of.json"
        },
        {
            "uri": "file:///Arnold_enums.json"
        },
        {
            "uri": "file:///set_Arnold_parameter.json"
        },
        {
            "uri": "file:///Arnold_ray_types.json"
        },
        {
            "uri": "file:///Arnold_ray_bitmask.json"
        },
        {
            "uri": "file:///set_Arnold_geo_settings.json"
        },
        {
            "uri": "file:///set_Arnold_strands_settings.json"
        },
        {
            "uri": "file:///create_arrow_strands.json"
        },
        {
            "uri": "file:///update_strands_up_vectors_from_closest.json"
        },
        {
            "uri": "file:///scatter_types.json"
        },
        {
            "uri": "file:///sample_closest_point_accelerator.json"
        },
        {
            "uri": "file:///get_closest_point.json"
        },
        {
            "uri": "file:///sample_interpreted_auto_port_as_vector.json"
        },
        {
            "uri": "file:///UV_set_name.json"
        },
        {
            "uri": "file:///UV_type_filter.json"
        },
        {
            "uri": "file:///UV_type_converter.json"
        },
        {
            "uri": "file:///get_mesh_UVs.json"
        },
        {
            "uri": "file:///orient_points_by_geometry.json"
        },
        {
            "uri": "file:///scatter_points_internal.json"
        },
        {
            "uri": "file:///sample_closest_in_radius_accelerator.json"
        },
        {
            "uri": "file:///sample_interpreted_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///weighted_sample_elimination.json"
        },
        {
            "uri": "file:///scatter_points_blue_noise.json"
        },
        {
            "uri": "file:///mask_and_number_interaction.json"
        },
        {
            "uri": "file:///compute_mesh_surface_area.json"
        },
        {
            "uri": "file:///scatter_points_on_mesh.json"
        },
        {
            "uri": "file:///cull_overlapping_positions.json"
        },
        {
            "uri": "file:///cull_overlapping_points.json"
        },
        {
            "uri": "file:///density_to_radius.json"
        },
        {
            "uri": "file:///get_volume_tile_info.json"
        },
        {
            "uri": "file:///scatter_points.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "MJCG::Graphs::instances_along_strands",
            "uriImported": "stream:/instancesAlongStrandsShape",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "-285.082 487.617"
                                        }
                                    ]
                                },
                                {
                                    "metaName": "aiStandardSurface1",
                                    "metadata": [
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "material_reference"
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1077.94 -5.6357"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "-34.1517 478.647"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "backdrop",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#546d55"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Scatter some points on the mesh, then generate strands, add some waves to it..."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-4539.1 364.548 826.113 404.058"
                        }
                    ]
                },
                {
                    "metaName": "backdrop1",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d526c"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-1906.76 73.2031 621.427 412.569"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "For each strands, get the up vector from the emission mesh's normals; generate basis and orientations. "
                        }
                    ]
                },
                {
                    "metaName": "backdrop3",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#383a5c"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "aCreate a point cloud from the sampled position, \nThen set a point_orientation property using the quaternion we created.\nThe color property is not visible in the viewport but is used at rendertime to draw per strand color."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-591.101 -294.949 1080.67 712.301"
                        }
                    ]
                },
                {
                    "metaName": "backdrop4",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#4b6d4b"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "set instance geometries on the points, assign materials, draw in the viewport."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "514.774 -152.414 1334.73 663.809"
                        }
                    ]
                },
                {
                    "metaName": "backdrop6",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d2e2f"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Generate an array of values between 0 and 1. \nThese values will be used to control where on the strands we want to take samples."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-1835.66 515.663 483.179 376.031"
                        }
                    ]
                },
                {
                    "metaName": "backdrop2",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#405d6d"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-2831.15 325.859 878.177 870.837"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Basic simulation..."
                        }
                    ]
                },
                {
                    "metaName": "backdrop5",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d6136"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-1247.16 -127.164 621.377 616.129"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "For each strands, samples positions and basis at multiple locations along their lengths."
                        }
                    ]
                },
                {
                    "metaName": "backdrop7",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d6540"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-3686.8 355.91 817.071 394.473"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Set constraint weights so the roots sticks to the mesh."
                        }
                    ]
                },
                {
                    "metaName": "backdrop8",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d4545"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Create a mesh and make a rotate it using animated rotation around X  axis, update normals."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-6475.82 163.116 1879.96 652.252"
                        }
                    ]
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Randomization,random_value"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Geometry::Properties,set_geo_property"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,MJCG::Modeling::Strands,extrude_strands"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,MJCG::Modeling::Strands,create_braids_from_strands"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Rendering::Materials,set_geo_property_reference"
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "-6514.88 -2170.14 8428.13 5291.16"
                },
                {
                    "metaName": "compoundIsGraph",
                    "metaValue": "true"
                },
                {
                    "metaName": "author",
                    "metaType": "string",
                    "metaValue": "Maxime Jeanmougin"
                },
                {
                    "metaName": "category",
                    "metaType": "string",
                    "metaValue": "MJCG"
                },
                {
                    "metaName": "description",
                    "metaType": "string",
                    "metaValue": "generates instances along many deformed strands while preserving their orientations."
                },
                {
                    "metaName": "example_scene",
                    "metaType": "string",
                    "metaValue": "instances_along_strands_example.ma"
                },
                {
                    "metaName": "materials",
                    "metaValue": "true"
                },
                {
                    "metaName": "thumbnail",
                    "metaType": "string",
                    "metaValue": "instances_along_strands_thumb.png"
                },
                {
                    "metaName": "mayaPublishedMaterialsFile",
                    "metaType": "string",
                    "metaValue": "instances_along_strands_Maya_materials.ma"
                },
                {
                    "metaName": "mayaPublishedMaterials",
                    "metadata": [
                        {
                            "metaName": "materialName",
                            "metaType": "string",
                            "metaValue": ":aiStandardSurface1"
                        }
                    ]
                }
            ],
            "ports": [
                {
                    "portName": "material_reference",
                    "portDirection": "input",
                    "portType": "Amino::Object",
                    "portDefault": {},
                    "metadata": [
                        {
                            "metaName": "pathinfo",
                            "metadata": [
                                {
                                    "metaName": "path",
                                    "metaType": "string",
                                    "metaValue": "aiStandardSurface1"
                                },
                                {
                                    "metaName": "setOperation",
                                    "metaType": "string",
                                    "metaValue": "+"
                                },
                                {
                                    "metaName": "active",
                                    "metaType": "string",
                                    "metaValue": "true"
                                }
                            ]
                        }
                    ]
                }
            ],
            "compounds": [
                {
                    "name": "get_samples_on_strands",
                    "uriImported": "stream:/instancesAlongStrandShape",
                    "metadata": [
                        {
                            "metaName": "icon",
                            "metaType": "string",
                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                        },
                        {
                            "metaName": "icon",
                            "metaType": "string",
                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                        },
                        {
                            "metaName": "io_nodes",
                            "metadata": [
                                {
                                    "metaName": "io_inodes",
                                    "metadata": [
                                        {
                                            "metaName": "input",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "max_iterations"
                                                        },
                                                        {
                                                            "metaName": "current_index"
                                                        },
                                                        {
                                                            "metaName": "strand_offset"
                                                        },
                                                        {
                                                            "metaName": "point_position"
                                                        },
                                                        {
                                                            "metaName": "point_tangent"
                                                        },
                                                        {
                                                            "metaName": "point_normal"
                                                        },
                                                        {
                                                            "metaName": "ratios"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "-1435.52 617.573"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "io_onodes",
                                    "metadata": [
                                        {
                                            "metaName": "output",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "out_positions"
                                                        },
                                                        {
                                                            "metaName": "out_orientations"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "728.627 234.374"
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "output1",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "-93.9254 1062.49"
                                                },
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "point_strand_index"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "backdrop2",
                            "metadata": [
                                {
                                    "metaName": "type",
                                    "metaType": "string",
                                    "metaValue": "backdrop"
                                },
                                {
                                    "metaName": "color",
                                    "metaType": "string",
                                    "metaValue": "#6d4650"
                                },
                                {
                                    "metaName": "text",
                                    "metaType": "string",
                                    "metaValue": "normallize the tangents and normals and construct a quaternion from it."
                                },
                                {
                                    "metaName": "coords",
                                    "metaType": "string",
                                    "metaValue": "56.7534 329.737 540.644 463.358"
                                }
                            ]
                        },
                        {
                            "metaName": "backdrop5",
                            "metadata": [
                                {
                                    "metaName": "type",
                                    "metaType": "string",
                                    "metaValue": "backdrop"
                                },
                                {
                                    "metaName": "color",
                                    "metaType": "string",
                                    "metaValue": "#306d4b"
                                },
                                {
                                    "metaName": "coords",
                                    "metaType": "string",
                                    "metaValue": "-526.183 -0.517848 548.205 1025.69"
                                },
                                {
                                    "metaName": "text",
                                    "metaType": "string",
                                    "metaValue": "Sample the strands positions, tangents and normals. \nnormalized_index is ON because out sampling ratios are between 0 and 1.\non_slice is ON because we want to compute the interpolation per strand and not on all strands points."
                                }
                            ]
                        },
                        {
                            "metaName": "ViewportRect",
                            "metaType": "string",
                            "metaValue": "-1982.55 255.504 1960.78 1230.97"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Array,array_size"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Array,resize_array"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Array,slice_array"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Geometry::Common,access_offset_array"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Geometry::Strands,get_strands_structure"
                        }
                    ],
                    "ports": [
                        {
                            "portName": "max_iterations",
                            "portDirection": "input",
                            "portType": "long",
                            "portIterationLimit": "true"
                        },
                        {
                            "portName": "current_index",
                            "portDirection": "input",
                            "portType": "long",
                            "portIterationCounter": "true"
                        },
                        {
                            "portName": "strand_offset",
                            "portDirection": "input",
                            "portType": "array<uint>"
                        },
                        {
                            "portName": "point_position",
                            "portDirection": "input",
                            "portType": "array<Math::float3>"
                        },
                        {
                            "portName": "point_tangent",
                            "portDirection": "input",
                            "portType": "array<Math::float3>"
                        },
                        {
                            "portName": "point_normal",
                            "portDirection": "input",
                            "portType": "array<Math::float3>"
                        },
                        {
                            "portName": "ratios",
                            "portDirection": "input",
                            "portType": "array<float>"
                        },
                        {
                            "portName": "out_positions",
                            "portDirection": "output",
                            "portType": "array<array<Math::float3>>",
                            "portIterationTarget": "true"
                        },
                        {
                            "portName": "out_orientations",
                            "portDirection": "output",
                            "portType": "array<array<Math::float4>>",
                            "portIterationTarget": "true"
                        },
                        {
                            "portName": "point_strand_index",
                            "portDirection": "output",
                            "portType": "array<array<long>>",
                            "portIterationTarget": "true"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "access_offset_array",
                            "nodeType": "Geometry::Common::access_offset_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "-1034.96 213.856"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_from_interpolated_array",
                            "nodeType": "Core::Math::get_from_interpolated_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "-361.053 88.8769"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_from_interpolated_array2",
                            "nodeType": "Core::Math::get_from_interpolated_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "-352.765 700.135"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_from_interpolated_array3",
                            "nodeType": "Core::Math::get_from_interpolated_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "-354.627 393.261"
                                }
                            ]
                        },
                        {
                            "nodeName": "normal_and_tangent_to_orientation",
                            "nodeType": "Core::Math::normal_and_tangent_to_orientation",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "347.624 444.971"
                                }
                            ]
                        },
                        {
                            "nodeName": "normalize",
                            "nodeType": "Core::Math::normalize",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "93.7214 372.95"
                                }
                            ]
                        },
                        {
                            "nodeName": "normalize1",
                            "nodeType": "Core::Math::normalize",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "100.957 586.953"
                                }
                            ]
                        },
                        {
                            "nodeName": "resize_array",
                            "nodeType": "Core::Array::resize_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "-364.266 1044.44"
                                }
                            ]
                        },
                        {
                            "nodeName": "array_size",
                            "nodeType": "Core::Array::array_size",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "-929.091 1089.2"
                                }
                            ]
                        }
                    ],
                    "connections": [
                        {
                            "source": ".current_index",
                            "target": "access_offset_array.index"
                        },
                        {
                            "source": ".strand_offset",
                            "target": "access_offset_array.offset_array"
                        },
                        {
                            "source": "normalize.normalized",
                            "target": "normal_and_tangent_to_orientation.normal"
                        },
                        {
                            "source": "normalize1.normalized",
                            "target": "normal_and_tangent_to_orientation.tangent"
                        },
                        {
                            "source": "get_from_interpolated_array3.interpolated",
                            "target": "normalize.value"
                        },
                        {
                            "source": "get_from_interpolated_array2.interpolated",
                            "target": "normalize1.value"
                        },
                        {
                            "source": ".ratios",
                            "target": "get_from_interpolated_array.float_index"
                        },
                        {
                            "source": ".ratios",
                            "target": "get_from_interpolated_array3.float_index"
                        },
                        {
                            "source": ".ratios",
                            "target": "get_from_interpolated_array2.float_index"
                        },
                        {
                            "source": "get_from_interpolated_array.interpolated",
                            "target": ".out_positions"
                        },
                        {
                            "source": "normal_and_tangent_to_orientation.quaternion",
                            "target": ".out_orientations"
                        },
                        {
                            "source": "access_offset_array.start",
                            "target": "get_from_interpolated_array.slice_start"
                        },
                        {
                            "source": "access_offset_array.end",
                            "target": "get_from_interpolated_array.slice_end"
                        },
                        {
                            "source": "access_offset_array.start",
                            "target": "get_from_interpolated_array3.slice_start"
                        },
                        {
                            "source": "access_offset_array.end",
                            "target": "get_from_interpolated_array3.slice_end"
                        },
                        {
                            "source": "access_offset_array.start",
                            "target": "get_from_interpolated_array2.slice_start"
                        },
                        {
                            "source": "access_offset_array.end",
                            "target": "get_from_interpolated_array2.slice_end"
                        },
                        {
                            "source": ".point_normal",
                            "target": "get_from_interpolated_array2.array"
                        },
                        {
                            "source": ".point_tangent",
                            "target": "get_from_interpolated_array3.array"
                        },
                        {
                            "source": ".point_position",
                            "target": "get_from_interpolated_array.array"
                        },
                        {
                            "source": ".current_index",
                            "target": "resize_array.default"
                        },
                        {
                            "source": "resize_array.resized",
                            "target": ".point_strand_index"
                        },
                        {
                            "source": ".ratios",
                            "target": "array_size.array"
                        },
                        {
                            "source": "array_size.size",
                            "target": "resize_array.new_size"
                        }
                    ],
                    "values": [
                        {
                            "valueName": "get_from_interpolated_array.normalized_index",
                            "valueType": "bool",
                            "value": "true"
                        },
                        {
                            "valueName": "get_from_interpolated_array.on_slice",
                            "valueType": "bool",
                            "value": "true"
                        },
                        {
                            "valueName": "get_from_interpolated_array.slice_start",
                            "valueType": "long",
                            "value": "0"
                        },
                        {
                            "valueName": "get_from_interpolated_array.slice_end",
                            "valueType": "long",
                            "value": "6"
                        },
                        {
                            "valueName": "get_from_interpolated_array2.normalized_index",
                            "valueType": "bool",
                            "value": "true"
                        },
                        {
                            "valueName": "get_from_interpolated_array2.on_slice",
                            "valueType": "bool",
                            "value": "true"
                        },
                        {
                            "valueName": "get_from_interpolated_array2.slice_start",
                            "valueType": "long",
                            "value": "0"
                        },
                        {
                            "valueName": "get_from_interpolated_array2.slice_end",
                            "valueType": "long",
                            "value": "6"
                        },
                        {
                            "valueName": "get_from_interpolated_array3.normalized_index",
                            "valueType": "bool",
                            "value": "true"
                        },
                        {
                            "valueName": "get_from_interpolated_array3.on_slice",
                            "valueType": "bool",
                            "value": "true"
                        },
                        {
                            "valueName": "get_from_interpolated_array3.slice_start",
                            "valueType": "long",
                            "value": "0"
                        },
                        {
                            "valueName": "get_from_interpolated_array3.slice_end",
                            "valueType": "long",
                            "value": "6"
                        },
                        {
                            "valueName": "normal_and_tangent_to_orientation.normal",
                            "valueType": "Math::float3",
                            "value": {
                                "x": "0f",
                                "y": "1f",
                                "z": "0f"
                            }
                        },
                        {
                            "valueName": "normal_and_tangent_to_orientation.tangent",
                            "valueType": "Math::float3",
                            "value": {
                                "x": "0f",
                                "y": "0f",
                                "z": "1f"
                            }
                        },
                        {
                            "valueName": "normal_and_tangent_to_orientation.prioritize_normal",
                            "valueType": "bool",
                            "value": "false"
                        }
                    ],
                    "reservedNodeNames": [
                        {
                            "name": "input"
                        },
                        {
                            "name": "output"
                        },
                        {
                            "name": "output1"
                        }
                    ],
                    "forEachCompound": {
                        "ports": [],
                        "grainSize": "1"
                    }
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "update_strands_orientations",
                    "nodeType": "MJCG::Geometry::Strands::update_strands_orientations",
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::diagnostic"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1551.83 118.516"
                        }
                    ]
                },
                {
                    "nodeName": "get_point_position",
                    "nodeType": "Geometry::Properties::get_point_position",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1206.95 260.412"
                        }
                    ]
                },
                {
                    "nodeName": "fill_interpolated_array",
                    "nodeType": "MJCG::Core::Array::fill_interpolated_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1707.52 582.757"
                        }
                    ]
                },
                {
                    "nodeName": "construct_points",
                    "nodeType": "Geometry::Points::construct_points",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-286.317 -227.001"
                        }
                    ]
                },
                {
                    "nodeName": "set_point_orientation",
                    "nodeType": "MJCG::Geometry::Properties::set_point_orientation",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-21.4699 -153.23"
                        }
                    ]
                },
                {
                    "nodeName": "create_instances",
                    "nodeType": "Modeling::Instances::create_instances",
                    "fanInPortNames": {
                        "instance_geometries": [
                            "cube_mesh",
                            "sphere_mesh"
                        ],
                        "preview_geometries": []
                    },
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "845.723 -96.3161"
                        }
                    ]
                },
                {
                    "nodeName": "create_mesh_cube",
                    "nodeType": "Modeling::Primitive::create_mesh_cube",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "542.701 37.0286"
                        }
                    ]
                },
                {
                    "nodeName": "create_mesh_sphere",
                    "nodeType": "Modeling::Primitive::create_mesh_sphere",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "541.331 256.121"
                        }
                    ]
                },
                {
                    "nodeName": "curl_strands",
                    "nodeType": "MJCG::Geometry::Strands::curl_strands",
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::proxy"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3971.89 417.343"
                        }
                    ]
                },
                {
                    "nodeName": "create_mesh_sphere1",
                    "nodeType": "Modeling::Primitive::create_mesh_sphere",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-5897.02 221.262"
                        }
                    ]
                },
                {
                    "nodeName": "create_strands_along_normals",
                    "nodeType": "Modeling::Strands::create_strands_along_normals",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-4241 438.664"
                        }
                    ]
                },
                {
                    "nodeName": "get_samples_on_strands",
                    "nodeType": "get_samples_on_strands",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-903.006 -23.0376"
                        }
                    ]
                },
                {
                    "nodeName": "get_strands_structure",
                    "nodeType": "Geometry::Strands::get_strands_structure",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1212.01 -45.0376"
                        }
                    ]
                },
                {
                    "nodeName": "flatten_nested_array",
                    "nodeType": "Core::Array::flatten_nested_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-560.317 -218.001"
                        }
                    ]
                },
                {
                    "nodeName": "flatten_nested_array1",
                    "nodeType": "Core::Array::flatten_nested_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-558.317 -23.0009"
                        }
                    ]
                },
                {
                    "nodeName": "terminal",
                    "nodeType": "Core::Graph::terminal",
                    "fanInPortNames": {
                        "final": [
                            "out_mesh"
                        ],
                        "proxy": [
                            "out_mesh"
                        ],
                        "diagnostic": []
                    },
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::diagnostic"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-4523.8 -23.0595"
                        }
                    ]
                },
                {
                    "nodeName": "make_mpm_fiber",
                    "nodeType": "Simulation::MPM::make_mpm_fiber",
                    "fanInPortNames": {
                        "geometry": [
                            "out_geometry"
                        ]
                    },
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "General",
                                    "metaType": "string",
                                    "metaValue": "0"
                                },
                                {
                                    "metaName": "Fiber Properties",
                                    "metaType": "string",
                                    "metaValue": "0"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2781.92 377.432"
                        }
                    ]
                },
                {
                    "nodeName": "terminal1",
                    "nodeType": "Core::Graph::terminal",
                    "fanInPortNames": {
                        "final": [
                            "out_geometry"
                        ],
                        "proxy": [
                            "out_geometry"
                        ],
                        "diagnostic": []
                    },
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::diagnostic"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1605.4 -119.954"
                        }
                    ]
                },
                {
                    "nodeName": "simulate_mpm",
                    "nodeType": "Simulation::MPM::simulate_mpm",
                    "fanInPortNames": {
                        "sources": [
                            "fiber_source"
                        ],
                        "colliders": [
                            "collider"
                        ],
                        "influences": []
                    },
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2494.99 440.647"
                        }
                    ]
                },
                {
                    "nodeName": "collider",
                    "nodeType": "Simulation::Common::collider",
                    "fanInPortNames": {
                        "geometry": [
                            "output"
                        ]
                    },
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2778.31 613.407"
                        }
                    ]
                },
                {
                    "nodeName": "first_in_array",
                    "nodeType": "Core::Array::first_in_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2236.18 513.866"
                        }
                    ]
                },
                {
                    "nodeName": "mpm_solver_settings",
                    "nodeType": "Simulation::MPM::mpm_solver_settings",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2778.8 903.18"
                        }
                    ]
                },
                {
                    "nodeName": "update_strands_up_vectors_from_closest",
                    "nodeType": "MJCG::Geometry::Strands::update_strands_up_vectors_from_closest",
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::diagnostic"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1877.83 132.516"
                        }
                    ]
                },
                {
                    "nodeName": "assign_material",
                    "nodeType": "Rendering::Materials::assign_material",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1335.82 -118.718"
                        }
                    ]
                },
                {
                    "nodeName": "get_point_position1",
                    "nodeType": "Geometry::Properties::get_point_position",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-5637.92 312.982"
                        }
                    ]
                },
                {
                    "nodeName": "rotate_by_quaternion",
                    "nodeType": "Core::Math::rotate_by_quaternion",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-5373.76 390.567"
                        }
                    ]
                },
                {
                    "nodeName": "set_point_position",
                    "nodeType": "Geometry::Properties::set_point_position",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-5107.77 199.139"
                        }
                    ]
                },
                {
                    "nodeName": "update_mesh_normals",
                    "nodeType": "Geometry::Mesh::update_mesh_normals",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-4854.96 183.12"
                        }
                    ]
                },
                {
                    "nodeName": "set_orientation_value",
                    "nodeType": "Simulation::Particles::set_orientation_value",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-5642.26 500.633"
                        }
                    ]
                },
                {
                    "nodeName": "value",
                    "valueType": "Math::float3",
                    "metadata": [
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "value",
                                    "metaType": "string",
                                    "metaValue": "1"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-5891.8 471.421"
                        }
                    ]
                },
                {
                    "nodeName": "time",
                    "nodeType": "Core::Time::time",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-6435.54 406.69"
                        }
                    ]
                },
                {
                    "nodeName": "set_geo_property",
                    "nodeType": "Geometry::Properties::set_geo_property",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3159.29 399.264"
                        }
                    ]
                },
                {
                    "nodeName": "get_point_ratio",
                    "nodeType": "MJCG::Geometry::Properties::get_point_ratio",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3668.67 544.632"
                        }
                    ]
                },
                {
                    "nodeName": "evaluate_fcurve",
                    "nodeType": "Core::FCurve::evaluate_fcurve",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3420 516.561"
                        }
                    ]
                },
                {
                    "nodeName": "scatter_points",
                    "nodeType": "Modeling::Points::scatter_points",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-4506.57 414.025"
                        }
                    ]
                },
                {
                    "nodeName": "pass",
                    "nodeType": "Core::Graph::pass",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3142.64 198.899"
                        }
                    ]
                },
                {
                    "nodeName": "multiply",
                    "nodeType": "Core::Math::multiply",
                    "multiInPortNames": [
                        "frame",
                        "output1"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-6165.22 501.837"
                        }
                    ]
                },
                {
                    "nodeName": "value1",
                    "valueType": "float",
                    "metadata": [
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-6428.29 628.144"
                        }
                    ]
                },
                {
                    "nodeName": "set_geo_property1",
                    "nodeType": "Geometry::Properties::set_geo_property",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "230.482 -69.398"
                        }
                    ]
                },
                {
                    "nodeName": "random_value",
                    "nodeType": "Core::Randomization::random_value",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-20.966 72.3391"
                        }
                    ]
                },
                {
                    "nodeName": "flatten_nested_array2",
                    "nodeType": "Core::Array::flatten_nested_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-551.28 169.522"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "construct_points.points",
                    "target": "set_point_orientation.geometry"
                },
                {
                    "source": "update_strands_orientations.out_strands",
                    "target": "get_point_position.geometry"
                },
                {
                    "source": "update_strands_orientations.out_strands",
                    "target": "get_strands_structure.strands"
                },
                {
                    "source": "get_strands_structure.strand_count",
                    "target": "get_samples_on_strands.max_iterations"
                },
                {
                    "source": "get_point_position.point_position",
                    "target": "get_samples_on_strands.point_position"
                },
                {
                    "source": "update_strands_orientations.point_tangent",
                    "target": "get_samples_on_strands.point_tangent"
                },
                {
                    "source": "update_strands_orientations.point_normal",
                    "target": "get_samples_on_strands.point_normal"
                },
                {
                    "source": "get_strands_structure.strand_offset",
                    "target": "get_samples_on_strands.strand_offset"
                },
                {
                    "source": "get_samples_on_strands.out_positions",
                    "target": "flatten_nested_array.nested_array"
                },
                {
                    "source": "get_samples_on_strands.out_orientations",
                    "target": "flatten_nested_array1.nested_array"
                },
                {
                    "source": "flatten_nested_array.flattened_array",
                    "target": "construct_points.point_position"
                },
                {
                    "source": "flatten_nested_array1.flattened_array",
                    "target": "set_point_orientation.orientations"
                },
                {
                    "source": "simulate_mpm.fiber_strands",
                    "target": "first_in_array.array"
                },
                {
                    "source": "mpm_solver_settings.solver_settings",
                    "target": "simulate_mpm.settings"
                },
                {
                    "source": "update_strands_up_vectors_from_closest.out_strands",
                    "target": "update_strands_orientations.strands"
                },
                {
                    "source": "first_in_array.first",
                    "target": "update_strands_up_vectors_from_closest.strands"
                },
                {
                    "source": "create_mesh_sphere1.sphere_mesh",
                    "target": "get_point_position1.geometry"
                },
                {
                    "source": "get_point_position1.point_position",
                    "target": "rotate_by_quaternion.vector"
                },
                {
                    "source": "rotate_by_quaternion.rotated_vector",
                    "target": "set_point_position.positions"
                },
                {
                    "source": "create_mesh_sphere1.sphere_mesh",
                    "target": "set_point_position.geometry"
                },
                {
                    "source": "set_point_position.out_geometry",
                    "target": "update_mesh_normals.mesh"
                },
                {
                    "source": "value.output",
                    "target": "set_orientation_value.degrees"
                },
                {
                    "source": "set_orientation_value.quaternion",
                    "target": "rotate_by_quaternion.quaternion"
                },
                {
                    "source": "make_mpm_fiber.fiber_source",
                    "target": "simulate_mpm.sources.fiber_source"
                },
                {
                    "source": "get_point_ratio.point_ratio",
                    "target": "evaluate_fcurve.x"
                },
                {
                    "source": "evaluate_fcurve.y",
                    "target": "set_geo_property.data"
                },
                {
                    "source": "create_strands_along_normals.strands",
                    "target": "curl_strands.strands"
                },
                {
                    "source": "curl_strands.out_strands",
                    "target": "set_geo_property.geometry"
                },
                {
                    "source": "set_geo_property.out_geometry",
                    "target": "make_mpm_fiber.geometry.out_geometry"
                },
                {
                    "source": "curl_strands.out_strands",
                    "target": "get_point_ratio.geometry"
                },
                {
                    "source": "fill_interpolated_array.interpolated",
                    "target": "get_samples_on_strands.ratios"
                },
                {
                    "source": "update_mesh_normals.out_mesh",
                    "target": "scatter_points.geometry"
                },
                {
                    "source": "scatter_points.points",
                    "target": "create_strands_along_normals.geometry"
                },
                {
                    "source": "update_mesh_normals.out_mesh",
                    "target": "pass.input"
                },
                {
                    "source": "pass.output",
                    "target": "collider.geometry.output"
                },
                {
                    "source": "pass.output",
                    "target": "update_strands_up_vectors_from_closest.geometry"
                },
                {
                    "source": "collider.collider",
                    "target": "simulate_mpm.colliders.collider"
                },
                {
                    "source": "time.frame",
                    "target": "multiply.first.frame"
                },
                {
                    "source": "value1.output",
                    "target": "multiply.first.output1"
                },
                {
                    "source": "multiply.output",
                    "target": "value.value.x"
                },
                {
                    "source": "set_point_orientation.out_geometry",
                    "target": "set_geo_property1.geometry"
                },
                {
                    "source": "get_samples_on_strands.point_strand_index",
                    "target": "flatten_nested_array2.nested_array"
                },
                {
                    "source": "flatten_nested_array2.flattened_array",
                    "target": "random_value.index"
                },
                {
                    "source": "random_value.random_value",
                    "target": "set_geo_property1.data"
                },
                {
                    "source": "set_geo_property1.out_geometry",
                    "target": "create_instances.points"
                },
                {
                    "source": "create_mesh_cube.cube_mesh",
                    "target": "create_instances.instance_geometries.cube_mesh"
                },
                {
                    "source": "create_mesh_sphere.sphere_mesh",
                    "target": "create_instances.instance_geometries.sphere_mesh"
                },
                {
                    "source": "create_instances.instances",
                    "target": "assign_material.geometry"
                },
                {
                    "source": ".material_reference",
                    "target": "assign_material.surface_material"
                },
                {
                    "source": "assign_material.out_geometry",
                    "target": "terminal1.proxy.out_geometry"
                },
                {
                    "source": "assign_material.out_geometry",
                    "target": "terminal1.final.out_geometry"
                },
                {
                    "source": "update_mesh_normals.out_mesh",
                    "target": "terminal.proxy.out_mesh"
                },
                {
                    "source": "update_mesh_normals.out_mesh",
                    "target": "terminal.final.out_mesh"
                }
            ],
            "values": [
                {
                    "valueName": "update_strands_orientations.framing_algorithm",
                    "valueType": "MJCG::strandsFramingType",
                    "value": "Double Reflection"
                },
                {
                    "valueName": "fill_interpolated_array.second",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "fill_interpolated_array.size",
                    "valueType": "long",
                    "value": "50"
                },
                {
                    "valueName": "create_instances.selection_mode",
                    "valueType": "Modeling::Points::CreateInstancesSelectionMode",
                    "value": "Sequential"
                },
                {
                    "valueName": "create_mesh_cube.length",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "create_mesh_cube.width",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "create_mesh_cube.height",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "create_mesh_sphere.radius",
                    "valueType": "float",
                    "value": "0.5f"
                },
                {
                    "valueName": "create_mesh_sphere.height_segments",
                    "valueType": "int",
                    "value": "15L"
                },
                {
                    "valueName": "create_mesh_sphere.axis_segments",
                    "valueType": "int",
                    "value": "15L"
                },
                {
                    "valueName": "curl_strands.frequency",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "curl_strands.size",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "curl_strands.size_profile",
                    "valueType": "Amino::FCurve",
                    "value": {
                        "version": "1",
                        "preExtrapolation": "0",
                        "postExtrapolation": "0",
                        "points": [
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "-0.40000000000000002",
                                        "yp": "0",
                                        "x": "0",
                                        "y": "0",
                                        "xn": "0.40000000000000002",
                                        "yn": "0"
                                    }
                                }
                            },
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "0.59999999999999998",
                                        "yp": "1",
                                        "x": "1",
                                        "y": "1",
                                        "xn": "1.3999999999999999",
                                        "yn": "1"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "valueName": "create_mesh_sphere1.radius",
                    "valueType": "float",
                    "value": "20f"
                },
                {
                    "valueName": "create_mesh_sphere1.height_segments",
                    "valueType": "int",
                    "value": "20L"
                },
                {
                    "valueName": "create_mesh_sphere1.axis_segments",
                    "valueType": "int",
                    "value": "20L"
                },
                {
                    "valueName": "create_strands_along_normals.segments",
                    "valueType": "long",
                    "value": "25"
                },
                {
                    "valueName": "create_strands_along_normals.length",
                    "valueType": "float",
                    "value": "50f"
                },
                {
                    "valueName": "get_samples_on_strands.max_iterations",
                    "valueType": "long",
                    "value": "10"
                },
                {
                    "valueName": "get_samples_on_strands.ratios",
                    "valueType": "array<float>",
                    "value": []
                },
                {
                    "valueName": "make_mpm_fiber.mass_density",
                    "valueType": "float",
                    "value": "100f"
                },
                {
                    "valueName": "make_mpm_fiber.viscosity",
                    "valueType": "float",
                    "value": "100f"
                },
                {
                    "valueName": "make_mpm_fiber.vibration_speed",
                    "valueType": "float",
                    "value": "5f"
                },
                {
                    "valueName": "make_mpm_fiber.collision_max_speed",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "make_mpm_fiber.thickness",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "collider.bounciness",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "collider.friction",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "mpm_solver_settings.detail_size",
                    "valueType": "float",
                    "value": "0.100000001f"
                },
                {
                    "valueName": "mpm_solver_settings.scene_units_in_meters",
                    "valueType": "float",
                    "value": "0.00999999978f"
                },
                {
                    "valueName": "mpm_solver_settings.detect_discontinuity",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "assign_material.set_displacement",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "assign_material.set_volume",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "value.value",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "0f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "set_geo_property.property",
                    "valueType": "string",
                    "value": "point_constraint_weight"
                },
                {
                    "valueName": "evaluate_fcurve.fcurve",
                    "valueType": "Amino::FCurve",
                    "value": {
                        "version": "1",
                        "preExtrapolation": "0",
                        "postExtrapolation": "0",
                        "points": [
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "1",
                                    "pcn": {
                                        "xp": "-0.0659",
                                        "yp": "1.0064519999999999",
                                        "x": "0.050000000000000003",
                                        "y": "1",
                                        "xn": "0.16589999999999999",
                                        "yn": "0.99354799999999999"
                                    }
                                }
                            },
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "1",
                                    "pcn": {
                                        "xp": "-0.077238000000000001",
                                        "yp": "0.15407299999999999",
                                        "x": "0.10000000000000001",
                                        "y": "0",
                                        "xn": "0.27656900000000001",
                                        "yn": "-0.154839"
                                    }
                                }
                            },
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "0.74853599999999998",
                                        "yp": "-0.012903",
                                        "x": "1",
                                        "y": "0",
                                        "xn": "1.2514639999999999",
                                        "yn": "0.012903"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "valueName": "scatter_points.amount",
                    "valueType": "float",
                    "value": "500f"
                },
                {
                    "valueName": "value1.value",
                    "valueType": "float",
                    "value": "5f"
                },
                {
                    "valueName": "set_geo_property1.property",
                    "valueType": "string",
                    "value": "color"
                },
                {
                    "valueName": "random_value.max",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "1f",
                        "y": "1f",
                        "z": "1f"
                    }
                }
            ],
            "reservedNodeNames": [
                {
                    "name": "input"
                },
                {
                    "name": "output"
                },
                {
                    "name": "aiStandardSurface1"
                }
            ]
        }
    ]
}