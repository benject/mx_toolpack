{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///bifrost_object_i.json"
        },
        {
            "uri": "file:///FCurve.json"
        },
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///strands_framing_type.json"
        },
        {
            "uri": "file:///CoreArrayOps.json"
        },
        {
            "uri": "file:///bifrost_geometry_query_types.json"
        },
        {
            "uri": "file:///geometry_types.json"
        },
        {
            "uri": "file:///get_property_any.json"
        },
        {
            "uri": "file:///get_property.json"
        },
        {
            "uri": "file:///get_geo_property.json"
        },
        {
            "uri": "file:///get_point_position.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///riv_types.json"
        },
        {
            "uri": "file:///point_types.json"
        },
        {
            "uri": "file:///riv_ops.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///Math_quaternion_to_matrix.json"
        },
        {
            "uri": "file:///Math_compose_transform_matrix.json"
        },
        {
            "uri": "file:///has_property.json"
        },
        {
            "uri": "file:///Math_array.json"
        },
        {
            "uri": "file:///Core_Constants_default_value.json"
        },
        {
            "uri": "file:///int_filter.json"
        },
        {
            "uri": "file:///get_array_indices.json"
        },
        {
            "uri": "file:///set_property_any.json"
        },
        {
            "uri": "file:///set_property.json"
        },
        {
            "uri": "file:///create_object_from_schema.json"
        },
        {
            "uri": "file:///create_volume_geo_prop.json"
        },
        {
            "uri": "file:///is_a.json"
        },
        {
            "uri": "file:///is_a_mesh.json"
        },
        {
            "uri": "file:///is_a_strands.json"
        },
        {
            "uri": "file:///is_a_points.json"
        },
        {
            "uri": "file:///is_a_volume.json"
        },
        {
            "uri": "file:///get_geo_schema_type.json"
        },
        {
            "uri": "file:///switch_is_a.json"
        },
        {
            "uri": "file:///get_target_component.json"
        },
        {
            "uri": "file:///create_data_geo_prop.json"
        },
        {
            "uri": "file:///get_geo_component_count.json"
        },
        {
            "uri": "file:///set_geo_property.array.json"
        },
        {
            "uri": "file:///set_geo_property.scalar.json"
        },
        {
            "uri": "file:///get_strands_structure.json"
        },
        {
            "uri": "file:///access_offset_array.json"
        },
        {
            "uri": "file:///get_geo_property_check.json"
        },
        {
            "uri": "file:///update_point_strand_index.json"
        },
        {
            "uri": "file:///check_point_strand_index.json"
        },
        {
            "uri": "file:///update_strands_ratio.json"
        },
        {
            "uri": "file:///check_point_ratio.json"
        },
        {
            "uri": "file:///Math_vector3_to_vector4.json"
        },
        {
            "uri": "file:///Math_vector4_to_vector3.json"
        },
        {
            "uri": "file:///multiply_vector_by_matrix.json"
        },
        {
            "uri": "file:///Math_constants.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///Math_change_range.json"
        },
        {
            "uri": "file:///change_range.json"
        },
        {
            "uri": "file:///oscillator.json"
        },
        {
            "uri": "file:///get_point_ratio.json"
        },
        {
            "uri": "file:///set_point_position.json"
        },
        {
            "uri": "file:///get_point_orientation.json"
        },
        {
            "uri": "file:///Math_multiply_quaternions.json"
        },
        {
            "uri": "file:///Math_rotate_by_quaternion.json"
        },
        {
            "uri": "file:///get_point_binormal.json"
        },
        {
            "uri": "file:///get_point_tangent.json"
        },
        {
            "uri": "file:///Math_matrix_to_quaternion.json"
        },
        {
            "uri": "file:///Math_length_squared.json"
        },
        {
            "uri": "file:///normal_and_tangent_to_orientation.json"
        },
        {
            "uri": "file:///get_point_normal.json"
        },
        {
            "uri": "file:///Core_Array_slice_array.json"
        },
        {
            "uri": "file:///increment_decrement.json"
        },
        {
            "uri": "file:///project_vector.json"
        },
        {
            "uri": "file:///Math_axis_angle_to_quaternion.json"
        },
        {
            "uri": "file:///array_conversion_type.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds_impl.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds.json"
        },
        {
            "uri": "file:///flatten_2D_array.json"
        },
        {
            "uri": "file:///erase_property.json"
        },
        {
            "uri": "file:///set_point_normal.json"
        },
        {
            "uri": "file:///Core_Array_reverse_array.json"
        },
        {
            "uri": "file:///remove_from_array.json"
        },
        {
            "uri": "file:///remove_first_in_array.json"
        },
        {
            "uri": "file:///set_point_tangent.json"
        },
        {
            "uri": "file:///set_point_orientation.json"
        },
        {
            "uri": "file:///set_point_binormal.json"
        },
        {
            "uri": "file:///find_orthogonal_vectors.json"
        },
        {
            "uri": "file:///Math_euler_to_quaternion.json"
        },
        {
            "uri": "file:///Math_degrees_to_radians.json"
        },
        {
            "uri": "file:///Core_Array_flatten_nested_array.json"
        },
        {
            "uri": "file:///object_terminal.json"
        },
        {
            "uri": "file:///get_property_keys.json"
        },
        {
            "uri": "file:///is_empty.json"
        },
        {
            "uri": "file:///materials.json"
        },
        {
            "uri": "file:///set_strands_shape.json"
        },
        {
            "uri": "file:///get_sub_object.json"
        },
        {
            "uri": "file:///get_point_count.json"
        },
        {
            "uri": "file:///set_sub_object_property.json"
        },
        {
            "uri": "file:///validate_strands.json"
        },
        {
            "uri": "file:///construct_strands.json"
        },
        {
            "uri": "file:///update_strands_tangents.json"
        },
        {
            "uri": "file:///set_strands_size_profile.json"
        },
        {
            "uri": "file:///instances.json"
        },
        {
            "uri": "file:///Math_almost_equal.json"
        },
        {
            "uri": "file:///rotation_between_vectors.json"
        },
        {
            "uri": "file:///Core_Array_array_is_empty.json"
        },
        {
            "uri": "file:///get_geo_target_count.json"
        },
        {
            "uri": "file:///volume_types.json"
        },
        {
            "uri": "file:///volume_nodedefs.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_vector.json"
        },
        {
            "uri": "file:///standard_surface_mat.json"
        },
        {
            "uri": "file:///assign_diagnostic_material.json"
        },
        {
            "uri": "file:///set_orientation_value.json"
        },
        {
            "uri": "file:///get_geo_property_or_default.json"
        },
        {
            "uri": "file:///CoreStringOps.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///jotun_rand.json"
        },
        {
            "uri": "file:///random_value.json"
        },
        {
            "uri": "file:///randomize_point_rotation.json"
        },
        {
            "uri": "file:///validate_mesh.json"
        },
        {
            "uri": "file:///construct_mesh.json"
        },
        {
            "uri": "file:///update_mesh_normals.json"
        },
        {
            "uri": "file:///create_mesh_sphere.json"
        },
        {
            "uri": "file:///Core_Array_sum_array_impl.json"
        },
        {
            "uri": "file:///Core_Array_sum_array.json"
        },
        {
            "uri": "file:///fluids_types.json"
        },
        {
            "uri": "file:///fluids_nodedefs.json"
        },
        {
            "uri": "file:///string_to_array.json"
        },
        {
            "uri": "file:///half_of.json"
        },
        {
            "uri": "file:///create_mesh_cube.json"
        },
        {
            "uri": "file:///randomize_selection.json"
        },
        {
            "uri": "file:///delete_points_in_points.json"
        },
        {
            "uri": "file:///delete_points.json"
        },
        {
            "uri": "file:///find_all_in_array.json"
        },
        {
            "uri": "file:///cull_points.json"
        },
        {
            "uri": "file:///create_mesh_plane.json"
        },
        {
            "uri": "file:///Core_Array_all_any_array.json"
        },
        {
            "uri": "file:///create_instances.json"
        },
        {
            "uri": "file:///flatten_instance_selection.json"
        },
        {
            "uri": "file:///Math_quaternion_invert.json"
        },
        {
            "uri": "file:///points_to_transforms.json"
        },
        {
            "uri": "file:///Math_quaternion_to_axis_angle.json"
        },
        {
            "uri": "file:///translate_points.json"
        },
        {
            "uri": "file:///Math_lerp_with_clamp.json"
        },
        {
            "uri": "file:///scale_points.json"
        },
        {
            "uri": "file:///rotate_points.json"
        },
        {
            "uri": "file:///dump_object.json"
        },
        {
            "uri": "file:///Math_nlerp.json"
        },
        {
            "uri": "file:///Math_quaternion_slerp.json"
        },
        {
            "uri": "file:///get_indexed_geo_property_check.json"
        },
        {
            "uri": "file:///get_mesh_structure.json"
        },
        {
            "uri": "file:///transform_points.json"
        },
        {
            "uri": "file:///merge_meshes.json"
        },
        {
            "uri": "file:///merge_points.json"
        },
        {
            "uri": "file:///merge_strands.json"
        },
        {
            "uri": "file:///merge_geometry.json"
        },
        {
            "uri": "file:///bake_instanced_geometry.json"
        },
        {
            "uri": "file:///strands_basis_to_orientation.json"
        },
        {
            "uri": "file:///point_transform_scope.json"
        },
        {
            "uri": "file:///array_average.json"
        },
        {
            "uri": "file:///get_strand_length.json"
        },
        {
            "uri": "file:///update_strands_orientations.json"
        },
        {
            "uri": "file:///check_strands_orientations.json"
        },
        {
            "uri": "file:///get_point_length.json"
        },
        {
            "uri": "file:///get_point_size.json"
        },
        {
            "uri": "file:///curl_strands.json"
        },
        {
            "uri": "file:///fill_interpolated_array.json"
        },
        {
            "uri": "file:///twice_of.json"
        },
        {
            "uri": "file:///create_circle.json"
        },
        {
            "uri": "file:///axis_type.json"
        },
        {
            "uri": "file:///strands_wrap_deformer.json"
        },
        {
            "uri": "file:///simulation_types.json"
        },
        {
            "uri": "file:///simulation_nodedefs.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "MJCG::Graphs::strands_wrap",
            "uriImported": "file:///__duplicateCompoundURIHelper__",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "reptileShape",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "-1088.52 226.892"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "mesh"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "io_ports"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "-1884.46 492.057"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "backdrop",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "generate strands growing outward the origin."
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#456d4a"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-3588.1 -144.146 1525.53 766.494"
                        }
                    ]
                },
                {
                    "metaName": "backdrop1",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#336d61"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Add some waves to the strands."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-1435.88 80.3795 290.3 375.214"
                        }
                    ]
                },
                {
                    "metaName": "backdrop2",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d3f3f"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Deforms the input mesh by sticking it along each strands. We controls the offset with time. \nThe offset defines  where on the strands the input mesh's deformation starts."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-1112.21 39.5691 814.58 520.558"
                        }
                    ]
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Geometry::Strands,set_strands_shape"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Geometry::Properties,set_geo_property"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Time,time"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,MJCG::Geometry::Deformers,strands_wrap_deformer"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Modeling::Primitive,create_mesh_cube"
                },
                {
                    "metaName": "backdrop3",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Set color and render settings"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d6045"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-2032 92.0647 556.545 363.222"
                        }
                    ]
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "-3654.54 -807.345 3384.98 2125.08"
                },
                {
                    "metaName": "compoundIsGraph",
                    "metaValue": "true"
                },
                {
                    "metaName": "author",
                    "metaType": "string",
                    "metaValue": "Maxime Jeanmougin"
                },
                {
                    "metaName": "category",
                    "metaType": "string",
                    "metaValue": "MJCG"
                },
                {
                    "metaName": "description",
                    "metaType": "string",
                    "metaValue": "Wraps a mesh along strands, similar to Maya's curveWrap."
                },
                {
                    "metaName": "example_scene",
                    "metaType": "string",
                    "metaValue": "strands_wrap_example.ma"
                },
                {
                    "metaName": "materials",
                    "metaValue": "true"
                },
                {
                    "metaName": "thumbnail",
                    "metaType": "string",
                    "metaValue": "strands_wrap_thumb.png"
                }
            ],
            "ports": [
                {
                    "portName": "mesh",
                    "portDirection": "input",
                    "portType": "Amino::Object",
                    "portDefault": {},
                    "metadata": [
                        {
                            "metaName": "pathinfo",
                            "metadata": [
                                {
                                    "metaName": "path",
                                    "metaType": "string",
                                    "metaValue": "/reptile/reptileShape"
                                },
                                {
                                    "metaName": "channels",
                                    "metaType": "string",
                                    "metaValue": "*"
                                },
                                {
                                    "metaName": "setOperation",
                                    "metaType": "string",
                                    "metaValue": "+"
                                },
                                {
                                    "metaName": "active",
                                    "metaType": "string",
                                    "metaValue": "true"
                                },
                                {
                                    "metaName": "normalsPerPoint",
                                    "metaType": "string",
                                    "metaValue": "true"
                                },
                                {
                                    "metaName": "normalsPerFaceVertex",
                                    "metaType": "string",
                                    "metaValue": "true"
                                },
                                {
                                    "metaName": "normalsPerFace",
                                    "metaType": "string",
                                    "metaValue": "false"
                                }
                            ]
                        }
                    ]
                }
            ],
            "compounds": [
                {
                    "name": "for_each__build_strands",
                    "uriImported": "file:///__duplicateCompoundURIHelper__",
                    "metadata": [
                        {
                            "metaName": "icon",
                            "metaType": "string",
                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                        },
                        {
                            "metaName": "icon",
                            "metaType": "string",
                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                        },
                        {
                            "metaName": "icon",
                            "metaType": "string",
                            "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                        },
                        {
                            "metaName": "io_nodes",
                            "metadata": [
                                {
                                    "metaName": "io_inodes",
                                    "metadata": [
                                        {
                                            "metaName": "input",
                                            "metadata": [
                                                {
                                                    "metaName": "io_metadata",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "35.0121 32.1536"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "positions"
                                                        },
                                                        {
                                                            "metaName": "positions1"
                                                        },
                                                        {
                                                            "metaName": "size"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "io_onodes",
                                    "metadata": [
                                        {
                                            "metaName": "output",
                                            "metadata": [
                                                {
                                                    "metaName": "io_metadata",
                                                    "metadata": [
                                                        {
                                                            "metaName": "DisplayMode",
                                                            "metaType": "string",
                                                            "metaValue": "2"
                                                        },
                                                        {
                                                            "metaName": "LayoutPos",
                                                            "metaType": "string",
                                                            "metaValue": "620 10"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "array"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "ViewportRect",
                            "metaType": "string",
                            "metaValue": "-369.484 -121 1719.39 659.423"
                        }
                    ],
                    "ports": [
                        {
                            "portName": "positions",
                            "portDirection": "input",
                            "portIterationTarget": "true"
                        },
                        {
                            "portName": "positions1",
                            "portDirection": "input",
                            "portIterationTarget": "true"
                        },
                        {
                            "portName": "size",
                            "portDirection": "input",
                            "portType": "long"
                        },
                        {
                            "portName": "array",
                            "portDirection": "output",
                            "portIterationTarget": "true"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "fill_interpolated_array",
                            "nodeType": "MJCG::Core::Array::fill_interpolated_array",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "315 10"
                                }
                            ]
                        }
                    ],
                    "connections": [
                        {
                            "source": ".positions",
                            "target": "fill_interpolated_array.first"
                        },
                        {
                            "source": ".size",
                            "target": "fill_interpolated_array.size"
                        },
                        {
                            "source": "fill_interpolated_array.interpolated",
                            "target": ".array"
                        },
                        {
                            "source": ".positions1",
                            "target": "fill_interpolated_array.second"
                        }
                    ],
                    "values": [
                        {
                            "valueName": "fill_interpolated_array.second",
                            "valueType": "float",
                            "value": "1f"
                        },
                        {
                            "valueName": "fill_interpolated_array.size",
                            "valueType": "long",
                            "value": "50"
                        }
                    ],
                    "reservedNodeNames": [
                        {
                            "name": "input"
                        },
                        {
                            "name": "output"
                        }
                    ],
                    "forEachCompound": {
                        "ports": [],
                        "grainSize": "1"
                    }
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "curl_strands",
                    "nodeType": "MJCG::Geometry::Strands::curl_strands",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "Frequency",
                                    "metaType": "string",
                                    "metaValue": "0"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1410.75 125.378"
                        }
                    ]
                },
                {
                    "nodeName": "create_circle1",
                    "nodeType": "MJCG::Modeling::Strands::create_circle",
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::proxy"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "Circle",
                                    "metaType": "string",
                                    "metaValue": "0"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3242.32 134.196"
                        }
                    ]
                },
                {
                    "nodeName": "construct_strands",
                    "nodeType": "Geometry::Strands::construct_strands",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2337.81 177.079"
                        }
                    ]
                },
                {
                    "nodeName": "point_per_strands",
                    "valueType": "uint",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3257.13 417.496"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "50"
                        }
                    ]
                },
                {
                    "nodeName": "sequence_array",
                    "nodeType": "Core::Array::sequence_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2637.89 345.583"
                        }
                    ]
                },
                {
                    "nodeName": "flatten_2D_array",
                    "nodeType": "MJCG::Core::Array::flatten_2D_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2633.08 0.9133"
                        }
                    ]
                },
                {
                    "nodeName": "num_strands",
                    "valueType": "long",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3574.49 289.019"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "15"
                        }
                    ]
                },
                {
                    "nodeName": "increment",
                    "nodeType": "Core::Math::increment",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2914.66 265.463"
                        }
                    ]
                },
                {
                    "nodeName": "for_each__build_strands",
                    "nodeType": "for_each__build_strands",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2923.44 -42.8704"
                        }
                    ]
                },
                {
                    "nodeName": "create_circle",
                    "nodeType": "MJCG::Modeling::Strands::create_circle",
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::proxy"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "Circle",
                                    "metaType": "string",
                                    "metaValue": "0"
                                },
                                {
                                    "metaName": "Transform",
                                    "metaType": "string",
                                    "metaValue": "0"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3247.46 -133.164"
                        }
                    ]
                },
                {
                    "nodeName": "strands_wrap_deformer",
                    "nodeType": "MJCG::Geometry::Deformers::strands_wrap_deformer",
                    "fanInPortNames": {
                        "geometries": [
                            "mesh"
                        ]
                    },
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::diagnostic"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "Length",
                                    "metaType": "string",
                                    "metaValue": "1"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-575.061 79.1995"
                        }
                    ]
                },
                {
                    "nodeName": "time",
                    "nodeType": "Core::Time::time",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-854.1 306.991"
                        }
                    ]
                },
                {
                    "nodeName": "set_geo_property",
                    "nodeType": "Geometry::Properties::set_geo_property",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1996.21 155.715"
                        }
                    ]
                },
                {
                    "nodeName": "set_strands_shape",
                    "nodeType": "Geometry::Strands::set_strands_shape",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1732.12 149.765"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "point_per_strands.output",
                    "target": "sequence_array.step"
                },
                {
                    "source": "sequence_array.sequence",
                    "target": "construct_strands.strand_offset"
                },
                {
                    "source": "flatten_2D_array.out_array",
                    "target": "construct_strands.point_position"
                },
                {
                    "source": "num_strands.output",
                    "target": "create_circle1.sides"
                },
                {
                    "source": "num_strands.output",
                    "target": "increment.value"
                },
                {
                    "source": "increment.output",
                    "target": "sequence_array.size"
                },
                {
                    "source": "create_circle1.positions",
                    "target": "for_each__build_strands.positions1"
                },
                {
                    "source": "for_each__build_strands.array",
                    "target": "flatten_2D_array.array"
                },
                {
                    "source": "num_strands.output",
                    "target": "create_circle.sides"
                },
                {
                    "source": "create_circle.positions",
                    "target": "for_each__build_strands.positions"
                },
                {
                    "source": "point_per_strands.output",
                    "target": "for_each__build_strands.size"
                },
                {
                    "source": ".mesh",
                    "target": "strands_wrap_deformer.geometries.mesh"
                },
                {
                    "source": "curl_strands.out_strands",
                    "target": "strands_wrap_deformer.target_strands"
                },
                {
                    "source": "time.seconds",
                    "target": "strands_wrap_deformer.offset"
                },
                {
                    "source": "construct_strands.strands",
                    "target": "set_geo_property.geometry"
                },
                {
                    "source": "set_geo_property.out_geometry",
                    "target": "set_strands_shape.strands"
                },
                {
                    "source": "set_strands_shape.out_strands",
                    "target": "curl_strands.strands"
                }
            ],
            "values": [
                {
                    "valueName": "curl_strands.spacial_frequency",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "curl_strands.frequency",
                    "valueType": "float",
                    "value": "3f"
                },
                {
                    "valueName": "curl_strands.size",
                    "valueType": "float",
                    "value": "0.5f"
                },
                {
                    "valueName": "curl_strands.size_profile",
                    "valueType": "Amino::FCurve",
                    "value": {
                        "version": "1",
                        "preExtrapolation": "0",
                        "postExtrapolation": "0",
                        "points": [
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "-0.39497900000000002",
                                        "yp": "0.5",
                                        "x": "0.0050210000000000003",
                                        "y": "0.5",
                                        "xn": "0.40502100000000002",
                                        "yn": "0.5"
                                    }
                                }
                            },
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "0.59999999999999998",
                                        "yp": "1",
                                        "x": "1",
                                        "y": "1",
                                        "xn": "1.3999999999999999",
                                        "yn": "1"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "valueName": "curl_strands.height",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "create_circle1.scale",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "1f",
                        "y": "1f",
                        "z": "1f"
                    }
                },
                {
                    "valueName": "create_circle1.sides",
                    "valueType": "long",
                    "value": "6"
                },
                {
                    "valueName": "create_circle1.radius",
                    "valueType": "float",
                    "value": "10.8000002f"
                },
                {
                    "valueName": "create_circle1.axis",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "1f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "point_per_strands.value",
                    "valueType": "uint",
                    "value": "50U"
                },
                {
                    "valueName": "flatten_2D_array.mode",
                    "valueType": "MJCG::arrayConversionType",
                    "value": "Constant Subsize"
                },
                {
                    "valueName": "num_strands.value",
                    "valueType": "long",
                    "value": "15"
                },
                {
                    "valueName": "for_each__build_strands.size",
                    "valueType": "long",
                    "value": "50"
                },
                {
                    "valueName": "create_circle.radius",
                    "valueType": "float",
                    "value": "0.5f"
                },
                {
                    "valueName": "create_circle.axis",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "1f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "strands_wrap_deformer.alignment",
                    "valueType": "MJCG::axisType",
                    "value": "X"
                },
                {
                    "valueName": "strands_wrap_deformer.update_framing",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "set_geo_property.property",
                    "valueType": "string",
                    "value": "color"
                },
                {
                    "valueName": "set_geo_property.data",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "0f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "set_strands_shape.shape",
                    "valueType": "Geometry::StrandShapes",
                    "value": "Ribbon"
                },
                {
                    "valueName": "set_strands_shape.default_size",
                    "valueType": "float",
                    "value": "0.0199999996f"
                }
            ],
            "reservedNodeNames": [
                {
                    "name": "output"
                },
                {
                    "name": "reptileShape"
                }
            ]
        }
    ]
}
