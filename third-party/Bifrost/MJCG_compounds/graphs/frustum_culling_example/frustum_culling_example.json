{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///bifrost_object_i.json"
        },
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///scatter_types.json"
        },
        {
            "uri": "file:///geometry_types.json"
        },
        {
            "uri": "file:///bifrost_geometry_query_types.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///riv_types.json"
        },
        {
            "uri": "file:///point_types.json"
        },
        {
            "uri": "file:///FCurve.json"
        },
        {
            "uri": "file:///riv_ops.json"
        },
        {
            "uri": "file:///get_indexer_element.json"
        },
        {
            "uri": "file:///math_util.json"
        },
        {
            "uri": "file:///get_loc_element.json"
        },
        {
            "uri": "file:///invalid_index.json"
        },
        {
            "uri": "file:///get_mesh_geo_loc_data.json"
        },
        {
            "uri": "file:///Math_constants.json"
        },
        {
            "uri": "file:///max_weight.json"
        },
        {
            "uri": "file:///mesh_v_interp.json"
        },
        {
            "uri": "file:///CoreArrayOps.json"
        },
        {
            "uri": "file:///get_property_any.json"
        },
        {
            "uri": "file:///get_property.json"
        },
        {
            "uri": "file:///get_geo_property.json"
        },
        {
            "uri": "file:///create_object_from_schema.json"
        },
        {
            "uri": "file:///is_a.json"
        },
        {
            "uri": "file:///is_a_range_geo_property.json"
        },
        {
            "uri": "file:///get_range_geo_property.json"
        },
        {
            "uri": "file:///mesh_fv_interp.json"
        },
        {
            "uri": "file:///mesh_f_interp.json"
        },
        {
            "uri": "file:///Core_Array_empty_array.json"
        },
        {
            "uri": "file:///choose_mesh_values.json"
        },
        {
            "uri": "file:///get_sub_object.json"
        },
        {
            "uri": "file:///get_point_count.json"
        },
        {
            "uri": "file:///get_geo_component_count.json"
        },
        {
            "uri": "file:///get_mesh_structure.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///has_property.json"
        },
        {
            "uri": "file:///get_point_geo_loc_data.json"
        },
        {
            "uri": "file:///point_p_interp.json"
        },
        {
            "uri": "file:///sample_volume_property.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///get_strands_structure.json"
        },
        {
            "uri": "file:///get_strand_geo_loc_data.json"
        },
        {
            "uri": "file:///Core_Constants_default_value.json"
        },
        {
            "uri": "file:///strand_p_interp.json"
        },
        {
            "uri": "file:///strand_s_interp.json"
        },
        {
            "uri": "file:///choose_strand_values.json"
        },
        {
            "uri": "file:///get_geo_schema_type.json"
        },
        {
            "uri": "file:///switch_is_a.json"
        },
        {
            "uri": "file:///sample_property.json"
        },
        {
            "uri": "file:///Math_matrix_to_quaternion.json"
        },
        {
            "uri": "file:///Math_length_squared.json"
        },
        {
            "uri": "file:///normal_and_tangent_to_orientation.json"
        },
        {
            "uri": "file:///Core_Array_array_is_empty.json"
        },
        {
            "uri": "file:///get_geo_property_check.json"
        },
        {
            "uri": "file:///get_geo_target_count.json"
        },
        {
            "uri": "file:///CoreStringOps.json"
        },
        {
            "uri": "file:///volume_types.json"
        },
        {
            "uri": "file:///volume_nodedefs.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///Math_multiply_quaternions.json"
        },
        {
            "uri": "file:///Math_rotate_by_quaternion.json"
        },
        {
            "uri": "file:///create_volume_geo_prop.json"
        },
        {
            "uri": "file:///is_a_mesh.json"
        },
        {
            "uri": "file:///is_a_strands.json"
        },
        {
            "uri": "file:///is_a_points.json"
        },
        {
            "uri": "file:///is_a_volume.json"
        },
        {
            "uri": "file:///get_target_component.json"
        },
        {
            "uri": "file:///create_data_geo_prop.json"
        },
        {
            "uri": "file:///set_property_any.json"
        },
        {
            "uri": "file:///set_property.json"
        },
        {
            "uri": "file:///set_geo_property.array.json"
        },
        {
            "uri": "file:///set_geo_property.scalar.json"
        },
        {
            "uri": "file:///Math_axis_angle_to_quaternion.json"
        },
        {
            "uri": "file:///Math_vector4_to_vector3.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_vector.json"
        },
        {
            "uri": "file:///rotate_points.json"
        },
        {
            "uri": "file:///Math_almost_equal.json"
        },
        {
            "uri": "file:///Math_quaternion_to_axis_angle.json"
        },
        {
            "uri": "file:///Math_array.json"
        },
        {
            "uri": "file:///set_geo_property_data.json"
        },
        {
            "uri": "file:///get_point_normal.json"
        },
        {
            "uri": "file:///get_point_position.json"
        },
        {
            "uri": "file:///build_closest_accelerator.json"
        },
        {
            "uri": "file:///sample_closest_point_accelerator.json"
        },
        {
            "uri": "file:///get_closest_point.json"
        },
        {
            "uri": "file:///sample_interpreted_auto_port_as_vector.json"
        },
        {
            "uri": "file:///erase_property.json"
        },
        {
            "uri": "file:///Core_Array_slice_array.json"
        },
        {
            "uri": "file:///update_mesh_normals.json"
        },
        {
            "uri": "file:///access_offset_array.json"
        },
        {
            "uri": "file:///increment_decrement.json"
        },
        {
            "uri": "file:///get_indexed_geo_property_check.json"
        },
        {
            "uri": "file:///UV_set_name.json"
        },
        {
            "uri": "file:///UV_type_filter.json"
        },
        {
            "uri": "file:///UV_type_converter.json"
        },
        {
            "uri": "file:///get_mesh_UVs.json"
        },
        {
            "uri": "file:///int_filter.json"
        },
        {
            "uri": "file:///project_vector.json"
        },
        {
            "uri": "file:///orient_points_by_geometry.json"
        },
        {
            "uri": "file:///add_points_to_points.json"
        },
        {
            "uri": "file:///validate_points.json"
        },
        {
            "uri": "file:///construct_points.json"
        },
        {
            "uri": "file:///generate_sample_locations.json"
        },
        {
            "uri": "file:///get_max_index.json"
        },
        {
            "uri": "file:///scatter_points_internal.json"
        },
        {
            "uri": "file:///sample_closest_accelerator.json"
        },
        {
            "uri": "file:///get_closest_locations.json"
        },
        {
            "uri": "file:///jotun_rand.json"
        },
        {
            "uri": "file:///fluids_types.json"
        },
        {
            "uri": "file:///fluids_nodedefs.json"
        },
        {
            "uri": "file:///random_value.json"
        },
        {
            "uri": "file:///find_all_in_array.json"
        },
        {
            "uri": "file:///sample_closest_in_radius_accelerator.json"
        },
        {
            "uri": "file:///Core_Array_sum_array_impl.json"
        },
        {
            "uri": "file:///Core_Array_sum_array.json"
        },
        {
            "uri": "file:///half_of.json"
        },
        {
            "uri": "file:///Core_Array_flatten_nested_array.json"
        },
        {
            "uri": "file:///sample_interpreted_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///set_point_position.json"
        },
        {
            "uri": "file:///weighted_sample_elimination.json"
        },
        {
            "uri": "file:///scatter_points_blue_noise.json"
        },
        {
            "uri": "file:///mask_and_number_interaction.json"
        },
        {
            "uri": "file:///compute_mesh_surface_area.json"
        },
        {
            "uri": "file:///scatter_points_on_mesh.json"
        },
        {
            "uri": "file:///twice_of.json"
        },
        {
            "uri": "file:///compute_bounding_sphere.json"
        },
        {
            "uri": "file:///delete_points_in_points.json"
        },
        {
            "uri": "file:///delete_points.json"
        },
        {
            "uri": "file:///cull_overlapping_positions.json"
        },
        {
            "uri": "file:///merge_meshes.json"
        },
        {
            "uri": "file:///merge_points.json"
        },
        {
            "uri": "file:///merge_strands.json"
        },
        {
            "uri": "file:///merge_geometry.json"
        },
        {
            "uri": "file:///cull_overlapping_points.json"
        },
        {
            "uri": "file:///cull_points.json"
        },
        {
            "uri": "file:///density_to_radius.json"
        },
        {
            "uri": "file:///get_volume_tile_info.json"
        },
        {
            "uri": "file:///scatter_points.json"
        },
        {
            "uri": "file:///get_property_keys.json"
        },
        {
            "uri": "file:///is_empty.json"
        },
        {
            "uri": "file:///materials.json"
        },
        {
            "uri": "file:///set_point_shape.json"
        },
        {
            "uri": "file:///object_terminal.json"
        },
        {
            "uri": "file:///Math_degrees_to_radians.json"
        },
        {
            "uri": "file:///delete_faces.json"
        },
        {
            "uri": "file:///update_mesh_adjacency.json"
        },
        {
            "uri": "file:///standard_surface_mat.json"
        },
        {
            "uri": "file:///assign_diagnostic_material.json"
        },
        {
            "uri": "file:///frustum_culling.json"
        },
        {
            "uri": "file:///set_sub_object_property.json"
        },
        {
            "uri": "file:///validate_mesh.json"
        },
        {
            "uri": "file:///construct_mesh.json"
        },
        {
            "uri": "file:///Core_Array_reverse_array.json"
        },
        {
            "uri": "file:///Math_quaternion_to_matrix.json"
        },
        {
            "uri": "file:///Math_compose_transform_matrix.json"
        },
        {
            "uri": "file:///Math_vector3_to_vector4.json"
        },
        {
            "uri": "file:///rotation_between_vectors.json"
        },
        {
            "uri": "file:///create_mesh_plane.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "MJCG::Graphs::frustum_culling_example",
            "uriImported": "stream:/bifrostGraphShape1",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "camera_transform"
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "2542.65 960.244"
                                        }
                                    ]
                                },
                                {
                                    "metaName": "input1",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "3434.03 567.856"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "io_ports"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "3440.78 737.116"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "backdrop",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#4d6d4d"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Your camera's world matrix.\n4 additional parameters must also be set on the frustum_culling compound."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "2449.58 918.17 410.304 232.009"
                        }
                    ]
                },
                {
                    "metaName": "backdrop1",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#3e5e6d"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Scatter points and set render settings."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "2371.51 416.752 515.245 389.616"
                        }
                    ]
                },
                {
                    "metaName": "backdrop2",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d4a4a"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "This culls geometry based on the camera's field of view.\nThe top node culls the scattered points and show which are affected.\nThe bottom node culls the meshes and draw the culled mesh.\n\nThe diagnostic  display the affected component in red and remaining in green."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "2981.25 338.508 428.973 732.292"
                        }
                    ]
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,MJCG::Modeling::Common,frustum_culling"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "input"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Modeling::Primitive,create_mesh_plane"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Time,time"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Modeling::Points,cull_points"
                },
                {
                    "metaName": "backdrop3",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#5e6d4b"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "1979.9 773.699 312.501 294.721"
                        }
                    ]
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "1936.77 258.91 1809.96 1044.69"
                },
                {
                    "metaName": "compoundIsGraph",
                    "metaValue": "true"
                },
                {
                    "metaName": "author",
                    "metaType": "string",
                    "metaValue": "Maxime Jeanmougin"
                },
                {
                    "metaName": "category",
                    "metaType": "string",
                    "metaValue": "MJCG"
                },
                {
                    "metaName": "description",
                    "metaType": "string",
                    "metaValue": "Culls geometry components outside the field of view of a camera."
                },
                {
                    "metaName": "example_scene",
                    "metaType": "string",
                    "metaValue": "frustum_culling_example_example.ma"
                },
                {
                    "metaName": "thumbnail",
                    "metaType": "string",
                    "metaValue": "frustum_culling_example_thumb.png"
                }
            ],
            "ports": [
                {
                    "portName": "camera_transform",
                    "portDirection": "input",
                    "portType": "Math::float4x4",
                    "portDefault": {
                        "c0": {
                            "x": "1f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c1": {
                            "x": "0f",
                            "y": "0.818408728f",
                            "z": "-0.574636579f",
                            "w": "0f"
                        },
                        "c2": {
                            "x": "0f",
                            "y": "0.574636579f",
                            "z": "0.818408728f",
                            "w": "0f"
                        },
                        "c3": {
                            "x": "0f",
                            "y": "6.82135057f",
                            "z": "16.4030151f",
                            "w": "1f"
                        }
                    }
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "scatter_points",
                    "nodeType": "Modeling::Points::scatter_points",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2389.7 462.711"
                        }
                    ]
                },
                {
                    "nodeName": "set_point_shape",
                    "nodeType": "Geometry::Properties::set_point_shape",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2636.07 497.168"
                        }
                    ]
                },
                {
                    "nodeName": "create_mesh_plane",
                    "nodeType": "Modeling::Primitive::create_mesh_plane",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2017.08 822.271"
                        }
                    ]
                },
                {
                    "nodeName": "frustum_culling",
                    "nodeType": "MJCG::Modeling::Common::frustum_culling",
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::final",
                        "Core::Graph::terminal::proxy"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "3081.93 426.006"
                        }
                    ]
                },
                {
                    "nodeName": "frustum_culling1",
                    "nodeType": "MJCG::Modeling::Common::frustum_culling",
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::final",
                        "Core::Graph::terminal::diagnostic"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "3083.56 747.013"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "scatter_points.points",
                    "target": "set_point_shape.points"
                },
                {
                    "source": "create_mesh_plane.plane_mesh",
                    "target": "scatter_points.geometry"
                },
                {
                    "source": "set_point_shape.out_points",
                    "target": "frustum_culling.geometry"
                },
                {
                    "source": ".camera_transform",
                    "target": "frustum_culling.camera_transform"
                },
                {
                    "source": ".camera_transform",
                    "target": "frustum_culling1.camera_transform"
                },
                {
                    "source": "create_mesh_plane.plane_mesh",
                    "target": "frustum_culling1.geometry"
                }
            ],
            "values": [
                {
                    "valueName": "scatter_points.scatter_mode",
                    "valueType": "Modeling::Points::ScatteringMode",
                    "value": "Random"
                },
                {
                    "valueName": "scatter_points.amount",
                    "valueType": "float",
                    "value": "10000f"
                },
                {
                    "valueName": "set_point_shape.shape",
                    "valueType": "Geometry::PointShapes",
                    "value": "Sphere"
                },
                {
                    "valueName": "set_point_shape.default_size",
                    "valueType": "float",
                    "value": "0.075000003f"
                },
                {
                    "valueName": "create_mesh_plane.length",
                    "valueType": "float",
                    "value": "25f"
                },
                {
                    "valueName": "create_mesh_plane.width",
                    "valueType": "float",
                    "value": "25f"
                },
                {
                    "valueName": "create_mesh_plane.length_segments",
                    "valueType": "int",
                    "value": "100L"
                },
                {
                    "valueName": "create_mesh_plane.width_segments",
                    "valueType": "int",
                    "value": "100L"
                },
                {
                    "valueName": "frustum_culling1.geometry",
                    "valueType": "Amino::Object",
                    "value": {}
                },
                {
                    "valueName": "frustum_culling1.camera_transform",
                    "valueType": "Math::float4x4",
                    "value": {
                        "c0": {
                            "x": "1f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c1": {
                            "x": "0f",
                            "y": "1f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c2": {
                            "x": "0f",
                            "y": "0f",
                            "z": "1f",
                            "w": "0f"
                        },
                        "c3": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "1f"
                        }
                    }
                },
                {
                    "valueName": "frustum_culling1.angle_of_view",
                    "valueType": "float",
                    "value": "54.4300003f"
                },
                {
                    "valueName": "frustum_culling1.aspect_ratio",
                    "valueType": "float",
                    "value": "1.5f"
                },
                {
                    "valueName": "frustum_culling1.near_clip_plane",
                    "valueType": "float",
                    "value": "0.100000001f"
                },
                {
                    "valueName": "frustum_culling1.far_clip_plane",
                    "valueType": "float",
                    "value": "10000f"
                }
            ],
            "reservedNodeNames": [
                {
                    "name": "input"
                },
                {
                    "name": "output"
                },
                {
                    "name": "input1"
                }
            ]
        }
    ]
}
