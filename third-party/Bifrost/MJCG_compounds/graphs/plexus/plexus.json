{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///riv_types.json"
        },
        {
            "uri": "file:///bifrost_object_i.json"
        },
        {
            "uri": "file:///point_types.json"
        },
        {
            "uri": "file:///FCurve.json"
        },
        {
            "uri": "file:///riv_ops.json"
        },
        {
            "uri": "file:///bifrost_geometry_query_types.json"
        },
        {
            "uri": "file:///geometry_types.json"
        },
        {
            "uri": "file:///add_points_to_points.json"
        },
        {
            "uri": "file:///create_object_from_schema.json"
        },
        {
            "uri": "file:///validate_points.json"
        },
        {
            "uri": "file:///construct_points.json"
        },
        {
            "uri": "file:///simulation_types.json"
        },
        {
            "uri": "file:///simulation_nodedefs.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///Math_lerp_with_clamp.json"
        },
        {
            "uri": "file:///Core_Constants_default_value.json"
        },
        {
            "uri": "file:///Math_change_range.json"
        },
        {
            "uri": "file:///get_property_any.json"
        },
        {
            "uri": "file:///get_property.json"
        },
        {
            "uri": "file:///CoreArrayOps.json"
        },
        {
            "uri": "file:///get_geo_property.json"
        },
        {
            "uri": "file:///get_strands_structure.json"
        },
        {
            "uri": "file:///get_point_position.json"
        },
        {
            "uri": "file:///access_offset_array.json"
        },
        {
            "uri": "file:///Math_array.json"
        },
        {
            "uri": "file:///Core_Array_slice_array.json"
        },
        {
            "uri": "file:///increment_decrement.json"
        },
        {
            "uri": "file:///has_property.json"
        },
        {
            "uri": "file:///create_volume_geo_prop.json"
        },
        {
            "uri": "file:///is_a.json"
        },
        {
            "uri": "file:///is_a_mesh.json"
        },
        {
            "uri": "file:///is_a_strands.json"
        },
        {
            "uri": "file:///is_a_points.json"
        },
        {
            "uri": "file:///is_a_volume.json"
        },
        {
            "uri": "file:///get_geo_schema_type.json"
        },
        {
            "uri": "file:///switch_is_a.json"
        },
        {
            "uri": "file:///get_target_component.json"
        },
        {
            "uri": "file:///create_data_geo_prop.json"
        },
        {
            "uri": "file:///set_property_any.json"
        },
        {
            "uri": "file:///set_property.json"
        },
        {
            "uri": "file:///get_geo_component_count.json"
        },
        {
            "uri": "file:///set_geo_property.array.json"
        },
        {
            "uri": "file:///set_geo_property.scalar.json"
        },
        {
            "uri": "file:///strands_length.json"
        },
        {
            "uri": "file:///Math_constants.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds_impl.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds.json"
        },
        {
            "uri": "file:///scatter_types.json"
        },
        {
            "uri": "file:///get_indexer_element.json"
        },
        {
            "uri": "file:///math_util.json"
        },
        {
            "uri": "file:///get_loc_element.json"
        },
        {
            "uri": "file:///invalid_index.json"
        },
        {
            "uri": "file:///get_mesh_geo_loc_data.json"
        },
        {
            "uri": "file:///max_weight.json"
        },
        {
            "uri": "file:///mesh_v_interp.json"
        },
        {
            "uri": "file:///is_a_range_geo_property.json"
        },
        {
            "uri": "file:///get_range_geo_property.json"
        },
        {
            "uri": "file:///mesh_fv_interp.json"
        },
        {
            "uri": "file:///mesh_f_interp.json"
        },
        {
            "uri": "file:///Core_Array_empty_array.json"
        },
        {
            "uri": "file:///choose_mesh_values.json"
        },
        {
            "uri": "file:///get_sub_object.json"
        },
        {
            "uri": "file:///get_point_count.json"
        },
        {
            "uri": "file:///get_mesh_structure.json"
        },
        {
            "uri": "file:///get_point_geo_loc_data.json"
        },
        {
            "uri": "file:///point_p_interp.json"
        },
        {
            "uri": "file:///sample_volume_property.json"
        },
        {
            "uri": "file:///get_strand_geo_loc_data.json"
        },
        {
            "uri": "file:///strand_p_interp.json"
        },
        {
            "uri": "file:///strand_s_interp.json"
        },
        {
            "uri": "file:///choose_strand_values.json"
        },
        {
            "uri": "file:///sample_property.json"
        },
        {
            "uri": "file:///Math_matrix_to_quaternion.json"
        },
        {
            "uri": "file:///Math_length_squared.json"
        },
        {
            "uri": "file:///normal_and_tangent_to_orientation.json"
        },
        {
            "uri": "file:///Core_Array_array_is_empty.json"
        },
        {
            "uri": "file:///get_geo_property_check.json"
        },
        {
            "uri": "file:///get_geo_target_count.json"
        },
        {
            "uri": "file:///CoreStringOps.json"
        },
        {
            "uri": "file:///volume_types.json"
        },
        {
            "uri": "file:///volume_nodedefs.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///Math_multiply_quaternions.json"
        },
        {
            "uri": "file:///Math_rotate_by_quaternion.json"
        },
        {
            "uri": "file:///Math_axis_angle_to_quaternion.json"
        },
        {
            "uri": "file:///Math_vector4_to_vector3.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_vector.json"
        },
        {
            "uri": "file:///rotate_points.json"
        },
        {
            "uri": "file:///Math_almost_equal.json"
        },
        {
            "uri": "file:///Math_quaternion_to_axis_angle.json"
        },
        {
            "uri": "file:///set_geo_property_data.json"
        },
        {
            "uri": "file:///get_point_normal.json"
        },
        {
            "uri": "file:///build_closest_accelerator.json"
        },
        {
            "uri": "file:///sample_closest_point_accelerator.json"
        },
        {
            "uri": "file:///get_closest_point.json"
        },
        {
            "uri": "file:///sample_interpreted_auto_port_as_vector.json"
        },
        {
            "uri": "file:///erase_property.json"
        },
        {
            "uri": "file:///update_mesh_normals.json"
        },
        {
            "uri": "file:///get_indexed_geo_property_check.json"
        },
        {
            "uri": "file:///UV_set_name.json"
        },
        {
            "uri": "file:///UV_type_filter.json"
        },
        {
            "uri": "file:///UV_type_converter.json"
        },
        {
            "uri": "file:///get_mesh_UVs.json"
        },
        {
            "uri": "file:///int_filter.json"
        },
        {
            "uri": "file:///project_vector.json"
        },
        {
            "uri": "file:///orient_points_by_geometry.json"
        },
        {
            "uri": "file:///generate_sample_locations.json"
        },
        {
            "uri": "file:///get_max_index.json"
        },
        {
            "uri": "file:///scatter_points_internal.json"
        },
        {
            "uri": "file:///sample_closest_accelerator.json"
        },
        {
            "uri": "file:///get_closest_locations.json"
        },
        {
            "uri": "file:///jotun_rand.json"
        },
        {
            "uri": "file:///fluids_types.json"
        },
        {
            "uri": "file:///fluids_nodedefs.json"
        },
        {
            "uri": "file:///random_value.json"
        },
        {
            "uri": "file:///find_all_in_array.json"
        },
        {
            "uri": "file:///sample_closest_in_radius_accelerator.json"
        },
        {
            "uri": "file:///Core_Array_sum_array_impl.json"
        },
        {
            "uri": "file:///Core_Array_sum_array.json"
        },
        {
            "uri": "file:///half_of.json"
        },
        {
            "uri": "file:///Core_Array_flatten_nested_array.json"
        },
        {
            "uri": "file:///sample_interpreted_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///set_point_position.json"
        },
        {
            "uri": "file:///weighted_sample_elimination.json"
        },
        {
            "uri": "file:///scatter_points_blue_noise.json"
        },
        {
            "uri": "file:///mask_and_number_interaction.json"
        },
        {
            "uri": "file:///compute_mesh_surface_area.json"
        },
        {
            "uri": "file:///scatter_points_on_mesh.json"
        },
        {
            "uri": "file:///twice_of.json"
        },
        {
            "uri": "file:///compute_bounding_sphere.json"
        },
        {
            "uri": "file:///delete_points_in_points.json"
        },
        {
            "uri": "file:///delete_points.json"
        },
        {
            "uri": "file:///cull_overlapping_positions.json"
        },
        {
            "uri": "file:///merge_meshes.json"
        },
        {
            "uri": "file:///merge_points.json"
        },
        {
            "uri": "file:///merge_strands.json"
        },
        {
            "uri": "file:///merge_geometry.json"
        },
        {
            "uri": "file:///cull_overlapping_points.json"
        },
        {
            "uri": "file:///cull_points.json"
        },
        {
            "uri": "file:///density_to_radius.json"
        },
        {
            "uri": "file:///get_volume_tile_info.json"
        },
        {
            "uri": "file:///scatter_points.json"
        },
        {
            "uri": "file:///get_property_keys.json"
        },
        {
            "uri": "file:///is_empty.json"
        },
        {
            "uri": "file:///materials.json"
        },
        {
            "uri": "file:///set_point_shape.json"
        },
        {
            "uri": "file:///set_sub_object_property.json"
        },
        {
            "uri": "file:///validate_mesh.json"
        },
        {
            "uri": "file:///construct_mesh.json"
        },
        {
            "uri": "file:///Core_Array_reverse_array.json"
        },
        {
            "uri": "file:///Math_quaternion_to_matrix.json"
        },
        {
            "uri": "file:///Math_compose_transform_matrix.json"
        },
        {
            "uri": "file:///Math_vector3_to_vector4.json"
        },
        {
            "uri": "file:///rotation_between_vectors.json"
        },
        {
            "uri": "file:///create_mesh_plane.json"
        },
        {
            "uri": "file:///convert_to_points.json"
        },
        {
            "uri": "file:///set_strands_shape.json"
        },
        {
            "uri": "file:///get_points_in_radius.json"
        },
        {
            "uri": "file:///cumulative_sum_array.json"
        },
        {
            "uri": "file:///update_point_strand_index.json"
        },
        {
            "uri": "file:///get_array_indices.json"
        },
        {
            "uri": "file:///check_point_strand_index.json"
        },
        {
            "uri": "file:///update_strands_ratio.json"
        },
        {
            "uri": "file:///int_array_filter.json"
        },
        {
            "uri": "file:///validate_strands.json"
        },
        {
            "uri": "file:///construct_strands.json"
        },
        {
            "uri": "file:///create_strands_from_counts.json"
        },
        {
            "uri": "file:///object_terminal.json"
        },
        {
            "uri": "file:///standard_surface_mat.json"
        },
        {
            "uri": "file:///assign_diagnostic_material.json"
        },
        {
            "uri": "file:///remove_first_in_array.json"
        },
        {
            "uri": "file:///create_plexus_from_points.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "MJCG::Graphs::plexus",
            "uriImported": "stream:/bifrostGraph1Shape",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "-541 340.568"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "2946.45 -149.13"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "out_strands"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "output1",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "out_points"
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "3194.99 145.097"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "backdrop",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#686d50"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Create a plane"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-544.022 -15.2967 256.62 283.467"
                        }
                    ]
                },
                {
                    "metaName": "backdrop1",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#696d50"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Set strands render settings\n"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "2669.87 -235.308 538.255 322.246"
                        }
                    ]
                },
                {
                    "metaName": "backdrop3",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#43526d"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Scatter points on the plane and add time varying turbulence"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-226.623 -101.419 1910.33 668.802"
                        }
                    ]
                },
                {
                    "metaName": "backdrop4",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d5268"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Convert strands to points and add render settings"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "2672 110.539 772.134 332.534"
                        }
                    ]
                },
                {
                    "metaName": "backdrop5",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Vary color depending on segment length"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#486d4a"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "2319.87 -37.1716 300.583 348.654"
                        }
                    ]
                },
                {
                    "metaName": "backdrop2",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "construct a pointcloud and create the plexus"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d4b4b"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "1716.88 21.8024 550.855 289.41"
                        }
                    ]
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Object,erase_property"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,MJCG::Modeling::Strands,create_plexus_from_points"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Geometry::Collection,promote_collection"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Geometry::Collection,collect_points_in_mesh"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Geometry::Mesh,delete_mesh_faces"
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "-1575.1 -224.556 6031.61 785.537"
                },
                {
                    "metaName": "compoundIsGraph",
                    "metaValue": "true"
                },
                {
                    "metaName": "author",
                    "metaType": "string",
                    "metaValue": "Maxime Jeanmougin"
                },
                {
                    "metaName": "category",
                    "metaType": "string",
                    "metaValue": "MJCG"
                },
                {
                    "metaName": "description",
                    "metaType": "string",
                    "metaValue": "generates a plexus by connecting points with their closest neighbors."
                },
                {
                    "metaName": "thumbnail",
                    "metaType": "string",
                    "metaValue": "plexus_thumb.png"
                }
            ],
            "ports": [
                {
                    "portName": "out_strands",
                    "portDirection": "output",
                    "portType": "Amino::Object"
                },
                {
                    "portName": "out_points",
                    "portDirection": "output",
                    "portType": "Amino::Object"
                }
            ],
            "compounds": [
                {
                    "name": "color_by_length",
                    "uriImported": "stream:/bifrostGraph1Shape",
                    "metadata": [
                        {
                            "metaName": "io_nodes",
                            "metadata": [
                                {
                                    "metaName": "io_inodes",
                                    "metadata": [
                                        {
                                            "metaName": "input",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "1506.85 873.61"
                                                },
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "in_strands"
                                                        },
                                                        {
                                                            "metaName": "start_color"
                                                        },
                                                        {
                                                            "metaName": "end_color"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "io_onodes",
                                    "metadata": [
                                        {
                                            "metaName": "output",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "3846.48 660.71"
                                                },
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "out_strands"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Array,array_size"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Iterators,for_each"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,MJCG::Geometry::Properties,get_point_length"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Geometry::Properties,set_geo_property"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Array,array_bounds"
                        },
                        {
                            "metaName": "ViewportRect",
                            "metaType": "string",
                            "metaValue": "1528.01 656.986 2797.92 602.649"
                        }
                    ],
                    "ports": [
                        {
                            "portName": "in_strands",
                            "portDirection": "input",
                            "portType": "Amino::Object"
                        },
                        {
                            "portName": "start_color",
                            "portDirection": "input",
                            "portType": "Math::float4"
                        },
                        {
                            "portName": "end_color",
                            "portDirection": "input",
                            "portType": "Math::float4"
                        },
                        {
                            "portName": "out_strands",
                            "portDirection": "output",
                            "portType": "Amino::Object"
                        }
                    ],
                    "compounds": [
                        {
                            "name": "compute_segment_length",
                            "uriImported": "stream:/bifrostGraph1Shape",
                            "metadata": [
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                },
                                {
                                    "metaName": "icon",
                                    "metaType": "string",
                                    "metaValue": "<NATIVE>../icons/LoopForEach.svg"
                                },
                                {
                                    "metaName": "io_nodes",
                                    "metadata": [
                                        {
                                            "metaName": "io_inodes",
                                            "metadata": [
                                                {
                                                    "metaName": "input",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "max_iterations"
                                                                },
                                                                {
                                                                    "metaName": "current_index"
                                                                },
                                                                {
                                                                    "metaName": "point_length"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_metadata",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "-646.314 119.304"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "io_onodes",
                                            "metadata": [
                                                {
                                                    "metaName": "output",
                                                    "metadata": [
                                                        {
                                                            "metaName": "io_ports",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "out_point_length"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "metaName": "io_metadata",
                                                            "metadata": [
                                                                {
                                                                    "metaName": "DisplayMode",
                                                                    "metaType": "string",
                                                                    "metaValue": "2"
                                                                },
                                                                {
                                                                    "metaName": "LayoutPos",
                                                                    "metaType": "string",
                                                                    "metaValue": "817.2 316.952"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Math,increment"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Logic,equal"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Logic,if"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Array,get_from_array"
                                },
                                {
                                    "metaName": "_recentNode_",
                                    "metaType": "string",
                                    "metaValue": "BifrostGraph,Core::Array,array_size"
                                },
                                {
                                    "metaName": "ViewportRect",
                                    "metaType": "string",
                                    "metaValue": "-815.651 76.4988 2027.95 581.775"
                                }
                            ],
                            "ports": [
                                {
                                    "portName": "max_iterations",
                                    "portDirection": "input",
                                    "portType": "long",
                                    "portIterationLimit": "true"
                                },
                                {
                                    "portName": "current_index",
                                    "portDirection": "input",
                                    "portType": "long",
                                    "portIterationCounter": "true"
                                },
                                {
                                    "portName": "point_length",
                                    "portDirection": "input"
                                },
                                {
                                    "portName": "out_point_length",
                                    "portDirection": "output",
                                    "portIterationTarget": "true"
                                }
                            ],
                            "compoundNodes": [
                                {
                                    "nodeName": "get_from_array",
                                    "nodeType": "Core::Array::get_from_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "-44.4706 141.412"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "if",
                                    "nodeType": "Core::Logic::if",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "544.071 318.026"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "equal",
                                    "nodeType": "Core::Logic::equal",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "241.344 120.336"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "increment",
                                    "nodeType": "Core::Math::increment",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "-364.692 417.712"
                                        }
                                    ]
                                },
                                {
                                    "nodeName": "get_from_array1",
                                    "nodeType": "Core::Array::get_from_array",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "-35.3983 371.312"
                                        }
                                    ]
                                }
                            ],
                            "connections": [
                                {
                                    "source": ".current_index",
                                    "target": "get_from_array.index"
                                },
                                {
                                    "source": ".point_length",
                                    "target": "get_from_array.array"
                                },
                                {
                                    "source": "get_from_array.value",
                                    "target": "equal.first"
                                },
                                {
                                    "source": "equal.output",
                                    "target": "if.condition"
                                },
                                {
                                    "source": ".point_length",
                                    "target": "get_from_array1.array"
                                },
                                {
                                    "source": "increment.output",
                                    "target": "get_from_array1.index"
                                },
                                {
                                    "source": ".current_index",
                                    "target": "increment.value"
                                },
                                {
                                    "source": "get_from_array1.value",
                                    "target": "if.true_case"
                                },
                                {
                                    "source": "get_from_array.value",
                                    "target": "if.false_case"
                                },
                                {
                                    "source": "if.output",
                                    "target": ".out_point_length"
                                }
                            ],
                            "values": [],
                            "forEachCompound": {
                                "ports": [],
                                "grainSize": "1"
                            }
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "linear_interpolate",
                            "nodeType": "Core::Math::linear_interpolate",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "3263.32 870.781"
                                }
                            ]
                        },
                        {
                            "nodeName": "rescale",
                            "nodeType": "Core::Math::change_range",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "2988.18 1000.44"
                                }
                            ]
                        },
                        {
                            "nodeName": "update_strands_length",
                            "nodeType": "Geometry::Strands::update_strands_length",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "1766.89 663.083"
                                }
                            ]
                        },
                        {
                            "nodeName": "array_bounds",
                            "nodeType": "Core::Array::array_bounds",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "2686.64 1115.65"
                                }
                            ]
                        },
                        {
                            "nodeName": "set_geo_property1",
                            "nodeType": "Geometry::Properties::set_geo_property",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "3569.94 632.078"
                                }
                            ]
                        },
                        {
                            "nodeName": "compute_segment_length",
                            "nodeType": "compute_segment_length",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "2426.34 1024.79"
                                }
                            ]
                        },
                        {
                            "nodeName": "array_size",
                            "nodeType": "Core::Array::array_size",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "2079.87 1072.74"
                                }
                            ]
                        }
                    ],
                    "connections": [
                        {
                            "source": "linear_interpolate.interpolated",
                            "target": "set_geo_property1.data"
                        },
                        {
                            "source": "rescale.result",
                            "target": "linear_interpolate.fraction"
                        },
                        {
                            "source": "update_strands_length.out_strands",
                            "target": "set_geo_property1.geometry"
                        },
                        {
                            "source": "array_bounds.max_bound",
                            "target": "rescale.from_end"
                        },
                        {
                            "source": "set_geo_property1.out_geometry",
                            "target": ".out_strands"
                        },
                        {
                            "source": ".in_strands",
                            "target": "update_strands_length.strands"
                        },
                        {
                            "source": ".start_color",
                            "target": "linear_interpolate.first"
                        },
                        {
                            "source": ".end_color",
                            "target": "linear_interpolate.second"
                        },
                        {
                            "source": "update_strands_length.point_length",
                            "target": "compute_segment_length.point_length"
                        },
                        {
                            "source": "array_size.size",
                            "target": "compute_segment_length.max_iterations"
                        },
                        {
                            "source": "compute_segment_length.out_point_length",
                            "target": "array_bounds.array"
                        },
                        {
                            "source": "compute_segment_length.out_point_length",
                            "target": "rescale.value"
                        },
                        {
                            "source": "update_strands_length.point_length",
                            "target": "array_size.array"
                        }
                    ],
                    "values": [
                        {
                            "valueName": "linear_interpolate.clamp_negative",
                            "valueType": "bool",
                            "value": "true"
                        },
                        {
                            "valueName": "linear_interpolate.clamp_above_one",
                            "valueType": "bool",
                            "value": "true"
                        },
                        {
                            "valueName": "rescale.from_end",
                            "valueType": "float",
                            "value": "0.5f"
                        },
                        {
                            "valueName": "rescale.to_start",
                            "valueType": "float",
                            "value": "0f"
                        },
                        {
                            "valueName": "rescale.to_end",
                            "valueType": "float",
                            "value": "1f"
                        },
                        {
                            "valueName": "rescale.clamp",
                            "valueType": "bool",
                            "value": "true"
                        },
                        {
                            "valueName": "set_geo_property1.property",
                            "valueType": "string",
                            "value": "color"
                        },
                        {
                            "valueName": "set_geo_property1.default",
                            "valueType": "Math::float4",
                            "value": {
                                "x": "1f",
                                "y": "1f",
                                "z": "1f",
                                "w": "1f"
                            }
                        },
                        {
                            "valueName": "set_geo_property1.target",
                            "valueType": "string",
                            "value": "point_component"
                        },
                        {
                            "valueName": "compute_segment_length.max_iterations",
                            "valueType": "long",
                            "value": "10"
                        }
                    ],
                    "reservedNodeNames": [
                        {
                            "name": "input"
                        },
                        {
                            "name": "output"
                        }
                    ]
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "add",
                    "nodeType": "Core::Math::add",
                    "multiInPortNames": [
                        "sampled_data",
                        "vector3"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1406.1 -52.339"
                        }
                    ]
                },
                {
                    "nodeName": "construct_points",
                    "nodeType": "Geometry::Points::construct_points",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1746.96 62.1764"
                        }
                    ]
                },
                {
                    "nodeName": "time",
                    "nodeType": "Core::Time::time",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-206.535 290.155"
                        }
                    ]
                },
                {
                    "nodeName": "color_by_length",
                    "nodeType": "color_by_length",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2356.1 0.747599"
                        }
                    ]
                },
                {
                    "nodeName": "scatter_points",
                    "nodeType": "Modeling::Points::scatter_points",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "Scatter Settings",
                                    "metaType": "string",
                                    "metaValue": "0"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-210.829 -52.676"
                        }
                    ]
                },
                {
                    "nodeName": "set_point_shape",
                    "nodeType": "Geometry::Properties::set_point_shape",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2946.05 144.806"
                        }
                    ]
                },
                {
                    "nodeName": "create_mesh_plane",
                    "nodeType": "Modeling::Primitive::create_mesh_plane",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-535.902 19.1138"
                        }
                    ]
                },
                {
                    "nodeName": "scalar_to_vector3",
                    "nodeType": "Core::Conversion::scalar_to_vector3",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1121.74 55.7367"
                        }
                    ]
                },
                {
                    "nodeName": "vector3_to_scalar",
                    "nodeType": "Core::Conversion::vector3_to_scalar",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "859.198 81.0831"
                        }
                    ]
                },
                {
                    "nodeName": "convert_to_points",
                    "nodeType": "MJCG::Geometry::Converters::convert_to_points",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2698.26 169.947"
                        }
                    ]
                },
                {
                    "nodeName": "set_strands_shape",
                    "nodeType": "Geometry::Strands::set_strands_shape",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2698.41 -184.99"
                        }
                    ]
                },
                {
                    "nodeName": "fractal_turbulence_field",
                    "nodeType": "Core::Fields::fractal_turbulence_field",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "318.061 200.727"
                        }
                    ]
                },
                {
                    "nodeName": "sample_field",
                    "nodeType": "Core::Fields::sample_field",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "591.081 70.9637"
                        }
                    ]
                },
                {
                    "nodeName": "scalar_field",
                    "nodeType": "Core::Fields::scalar_field",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "51.573 311.174"
                        }
                    ]
                },
                {
                    "nodeName": "create_plexus_from_points",
                    "nodeType": "MJCG::Modeling::Strands::create_plexus_from_points",
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::final",
                        "Core::Graph::terminal::proxy"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2001.95 45.5539"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "add.output",
                    "target": "construct_points.point_position"
                },
                {
                    "source": "vector3_to_scalar.x",
                    "target": "scalar_to_vector3.x"
                },
                {
                    "source": "vector3_to_scalar.z",
                    "target": "scalar_to_vector3.z"
                },
                {
                    "source": "color_by_length.out_strands",
                    "target": "convert_to_points.geometry"
                },
                {
                    "source": "convert_to_points.points",
                    "target": "set_point_shape.points"
                },
                {
                    "source": "color_by_length.out_strands",
                    "target": "set_strands_shape.strands"
                },
                {
                    "source": "time.seconds",
                    "target": "scalar_field.value"
                },
                {
                    "source": "scalar_field.scalar_field",
                    "target": "fractal_turbulence_field.time"
                },
                {
                    "source": "sample_field.result",
                    "target": "vector3_to_scalar.vector3"
                },
                {
                    "source": "fractal_turbulence_field.noise_field",
                    "target": "sample_field.field"
                },
                {
                    "source": "scalar_to_vector3.vector3",
                    "target": "add.first.vector3"
                },
                {
                    "source": "set_strands_shape.out_strands",
                    "target": ".out_strands"
                },
                {
                    "source": "create_mesh_plane.plane_mesh",
                    "target": "scatter_points.geometry"
                },
                {
                    "source": "create_plexus_from_points.strands",
                    "target": "color_by_length.in_strands"
                },
                {
                    "source": "construct_points.points",
                    "target": "create_plexus_from_points.points"
                },
                {
                    "source": "set_point_shape.out_points",
                    "target": ".out_points"
                },
                {
                    "source": "scatter_points.positions",
                    "target": "sample_field.position"
                },
                {
                    "source": "scatter_points.positions",
                    "target": "add.first.sampled_data"
                }
            ],
            "values": [
                {
                    "valueName": "color_by_length.start_color",
                    "valueType": "Math::float4",
                    "value": {
                        "x": "0f",
                        "y": "0.5f",
                        "z": "1f",
                        "w": "0.5f"
                    }
                },
                {
                    "valueName": "color_by_length.end_color",
                    "valueType": "Math::float4",
                    "value": {
                        "x": "0f",
                        "y": "0f",
                        "z": "0f",
                        "w": "0f"
                    }
                },
                {
                    "valueName": "scatter_points.amount",
                    "valueType": "float",
                    "value": "1000f"
                },
                {
                    "valueName": "set_point_shape.shape",
                    "valueType": "Geometry::PointShapes",
                    "value": "Disk"
                },
                {
                    "valueName": "set_point_shape.screen_aligned",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "set_point_shape.default_size",
                    "valueType": "float",
                    "value": "0.075000003f"
                },
                {
                    "valueName": "create_mesh_plane.length",
                    "valueType": "float",
                    "value": "20f"
                },
                {
                    "valueName": "create_mesh_plane.width",
                    "valueType": "float",
                    "value": "20f"
                },
                {
                    "valueName": "create_mesh_plane.length_segments",
                    "valueType": "int",
                    "value": "3L"
                },
                {
                    "valueName": "create_mesh_plane.width_segments",
                    "valueType": "int",
                    "value": "3L"
                },
                {
                    "valueName": "set_strands_shape.default_size",
                    "valueType": "float",
                    "value": "0.0199999996f"
                },
                {
                    "valueName": "fractal_turbulence_field.magnitude",
                    "valueType": "float",
                    "value": "5f"
                },
                {
                    "valueName": "fractal_turbulence_field.num_frequencies",
                    "valueType": "float",
                    "value": "10f"
                },
                {
                    "valueName": "fractal_turbulence_field.frequency",
                    "valueType": "float",
                    "value": "0.5f"
                },
                {
                    "valueName": "fractal_turbulence_field.ratio",
                    "valueType": "float",
                    "value": "0.5f"
                },
                {
                    "valueName": "fractal_turbulence_field.frequency_ratio",
                    "valueType": "float",
                    "value": "0.75f"
                },
                {
                    "valueName": "fractal_turbulence_field.seed",
                    "valueType": "long",
                    "value": "0"
                },
                {
                    "valueName": "create_plexus_from_points.radius",
                    "valueType": "float",
                    "value": "5f"
                },
                {
                    "valueName": "create_plexus_from_points.enable_max_number",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "create_plexus_from_points.max_number",
                    "valueType": "long",
                    "value": "10"
                }
            ],
            "reservedNodeNames": [
                {
                    "name": "output"
                },
                {
                    "name": "output1"
                },
                {
                    "name": "input"
                }
            ]
        }
    ]
}
