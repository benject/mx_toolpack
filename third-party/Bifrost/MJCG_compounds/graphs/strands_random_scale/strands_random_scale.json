{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///bifrost_object_i.json"
        },
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///CoreArrayOps.json"
        },
        {
            "uri": "file:///bifrost_geometry_query_types.json"
        },
        {
            "uri": "file:///geometry_types.json"
        },
        {
            "uri": "file:///get_property_any.json"
        },
        {
            "uri": "file:///get_property.json"
        },
        {
            "uri": "file:///get_geo_property.json"
        },
        {
            "uri": "file:///get_point_position.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///set_property_any.json"
        },
        {
            "uri": "file:///set_property.json"
        },
        {
            "uri": "file:///Core_Constants_default_value.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///has_property.json"
        },
        {
            "uri": "file:///create_volume_geo_prop.json"
        },
        {
            "uri": "file:///is_a.json"
        },
        {
            "uri": "file:///create_object_from_schema.json"
        },
        {
            "uri": "file:///is_a_mesh.json"
        },
        {
            "uri": "file:///is_a_strands.json"
        },
        {
            "uri": "file:///is_a_points.json"
        },
        {
            "uri": "file:///is_a_volume.json"
        },
        {
            "uri": "file:///get_geo_schema_type.json"
        },
        {
            "uri": "file:///switch_is_a.json"
        },
        {
            "uri": "file:///get_target_component.json"
        },
        {
            "uri": "file:///create_data_geo_prop.json"
        },
        {
            "uri": "file:///get_geo_component_count.json"
        },
        {
            "uri": "file:///set_geo_property.array.json"
        },
        {
            "uri": "file:///set_geo_property.scalar.json"
        },
        {
            "uri": "file:///Math_array.json"
        },
        {
            "uri": "file:///riv_types.json"
        },
        {
            "uri": "file:///point_types.json"
        },
        {
            "uri": "file:///FCurve.json"
        },
        {
            "uri": "file:///riv_ops.json"
        },
        {
            "uri": "file:///access_offset_array.json"
        },
        {
            "uri": "file:///get_strands_structure.json"
        },
        {
            "uri": "file:///update_point_strand_index.json"
        },
        {
            "uri": "file:///int_filter.json"
        },
        {
            "uri": "file:///get_array_indices.json"
        },
        {
            "uri": "file:///get_geo_property_check.json"
        },
        {
            "uri": "file:///check_point_strand_index.json"
        },
        {
            "uri": "file:///update_strands_ratio.json"
        },
        {
            "uri": "file:///cumulative_sum_array.json"
        },
        {
            "uri": "file:///int_array_filter.json"
        },
        {
            "uri": "file:///set_geo_property_data.json"
        },
        {
            "uri": "file:///set_point_position.json"
        },
        {
            "uri": "file:///set_sub_object_property.json"
        },
        {
            "uri": "file:///validate_strands.json"
        },
        {
            "uri": "file:///construct_strands.json"
        },
        {
            "uri": "file:///create_strands_from_counts.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///Math_lerp_with_clamp.json"
        },
        {
            "uri": "file:///check_point_ratio.json"
        },
        {
            "uri": "file:///set_strands_pos_from_root_data.json"
        },
        {
            "uri": "file:///create_strands_along_normals.json"
        },
        {
            "uri": "file:///increment_decrement.json"
        },
        {
            "uri": "file:///validate_mesh.json"
        },
        {
            "uri": "file:///construct_mesh.json"
        },
        {
            "uri": "file:///Math_constants.json"
        },
        {
            "uri": "file:///Core_Array_slice_array.json"
        },
        {
            "uri": "file:///get_sub_object.json"
        },
        {
            "uri": "file:///erase_property.json"
        },
        {
            "uri": "file:///update_mesh_normals.json"
        },
        {
            "uri": "file:///Math_quaternion_to_matrix.json"
        },
        {
            "uri": "file:///Math_compose_transform_matrix.json"
        },
        {
            "uri": "file:///Math_vector3_to_vector4.json"
        },
        {
            "uri": "file:///Math_vector4_to_vector3.json"
        },
        {
            "uri": "file:///Math_axis_angle_to_quaternion.json"
        },
        {
            "uri": "file:///Math_length_squared.json"
        },
        {
            "uri": "file:///Math_almost_equal.json"
        },
        {
            "uri": "file:///rotation_between_vectors.json"
        },
        {
            "uri": "file:///Math_multiply_quaternions.json"
        },
        {
            "uri": "file:///Math_rotate_by_quaternion.json"
        },
        {
            "uri": "file:///set_point_normal.json"
        },
        {
            "uri": "file:///create_mesh_sphere.json"
        },
        {
            "uri": "file:///get_strands_start_points.json"
        },
        {
            "uri": "file:///Core_Array_flatten_nested_array.json"
        },
        {
            "uri": "file:///Core_Array_array_is_empty.json"
        },
        {
            "uri": "file:///get_geo_target_count.json"
        },
        {
            "uri": "file:///CoreStringOps.json"
        },
        {
            "uri": "file:///volume_types.json"
        },
        {
            "uri": "file:///volume_nodedefs.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///jotun_rand.json"
        },
        {
            "uri": "file:///random_value.json"
        },
        {
            "uri": "file:///object_terminal.json"
        },
        {
            "uri": "file:///scale_strands.json"
        },
        {
            "uri": "file:///get_property_keys.json"
        },
        {
            "uri": "file:///is_empty.json"
        },
        {
            "uri": "file:///materials.json"
        },
        {
            "uri": "file:///set_strands_shape.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_vector.json"
        },
        {
            "uri": "file:///standard_surface_mat.json"
        },
        {
            "uri": "file:///assign_diagnostic_material.json"
        },
        {
            "uri": "file:///strands_framing_type.json"
        },
        {
            "uri": "file:///multiply_vector_by_matrix.json"
        },
        {
            "uri": "file:///Math_change_range.json"
        },
        {
            "uri": "file:///change_range.json"
        },
        {
            "uri": "file:///oscillator.json"
        },
        {
            "uri": "file:///get_point_ratio.json"
        },
        {
            "uri": "file:///get_point_orientation.json"
        },
        {
            "uri": "file:///get_point_binormal.json"
        },
        {
            "uri": "file:///get_point_tangent.json"
        },
        {
            "uri": "file:///Math_matrix_to_quaternion.json"
        },
        {
            "uri": "file:///normal_and_tangent_to_orientation.json"
        },
        {
            "uri": "file:///get_point_normal.json"
        },
        {
            "uri": "file:///project_vector.json"
        },
        {
            "uri": "file:///array_conversion_type.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds_impl.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds.json"
        },
        {
            "uri": "file:///flatten_2D_array.json"
        },
        {
            "uri": "file:///Core_Array_reverse_array.json"
        },
        {
            "uri": "file:///remove_from_array.json"
        },
        {
            "uri": "file:///remove_first_in_array.json"
        },
        {
            "uri": "file:///set_point_tangent.json"
        },
        {
            "uri": "file:///set_point_orientation.json"
        },
        {
            "uri": "file:///set_point_binormal.json"
        },
        {
            "uri": "file:///find_orthogonal_vectors.json"
        },
        {
            "uri": "file:///Math_euler_to_quaternion.json"
        },
        {
            "uri": "file:///Math_degrees_to_radians.json"
        },
        {
            "uri": "file:///get_point_count.json"
        },
        {
            "uri": "file:///update_strands_tangents.json"
        },
        {
            "uri": "file:///set_strands_size_profile.json"
        },
        {
            "uri": "file:///instances.json"
        },
        {
            "uri": "file:///set_orientation_value.json"
        },
        {
            "uri": "file:///get_geo_property_or_default.json"
        },
        {
            "uri": "file:///randomize_point_rotation.json"
        },
        {
            "uri": "file:///Core_Array_sum_array_impl.json"
        },
        {
            "uri": "file:///Core_Array_sum_array.json"
        },
        {
            "uri": "file:///fluids_types.json"
        },
        {
            "uri": "file:///fluids_nodedefs.json"
        },
        {
            "uri": "file:///string_to_array.json"
        },
        {
            "uri": "file:///half_of.json"
        },
        {
            "uri": "file:///create_mesh_cube.json"
        },
        {
            "uri": "file:///randomize_selection.json"
        },
        {
            "uri": "file:///delete_points_in_points.json"
        },
        {
            "uri": "file:///delete_points.json"
        },
        {
            "uri": "file:///find_all_in_array.json"
        },
        {
            "uri": "file:///cull_points.json"
        },
        {
            "uri": "file:///create_mesh_plane.json"
        },
        {
            "uri": "file:///Core_Array_all_any_array.json"
        },
        {
            "uri": "file:///create_instances.json"
        },
        {
            "uri": "file:///flatten_instance_selection.json"
        },
        {
            "uri": "file:///Math_quaternion_invert.json"
        },
        {
            "uri": "file:///points_to_transforms.json"
        },
        {
            "uri": "file:///Math_quaternion_to_axis_angle.json"
        },
        {
            "uri": "file:///translate_points.json"
        },
        {
            "uri": "file:///scale_points.json"
        },
        {
            "uri": "file:///rotate_points.json"
        },
        {
            "uri": "file:///dump_object.json"
        },
        {
            "uri": "file:///Math_nlerp.json"
        },
        {
            "uri": "file:///Math_quaternion_slerp.json"
        },
        {
            "uri": "file:///get_indexed_geo_property_check.json"
        },
        {
            "uri": "file:///get_mesh_structure.json"
        },
        {
            "uri": "file:///transform_points.json"
        },
        {
            "uri": "file:///merge_meshes.json"
        },
        {
            "uri": "file:///merge_points.json"
        },
        {
            "uri": "file:///merge_strands.json"
        },
        {
            "uri": "file:///merge_geometry.json"
        },
        {
            "uri": "file:///bake_instanced_geometry.json"
        },
        {
            "uri": "file:///strands_basis_to_orientation.json"
        },
        {
            "uri": "file:///point_transform_scope.json"
        },
        {
            "uri": "file:///array_average.json"
        },
        {
            "uri": "file:///get_strand_length.json"
        },
        {
            "uri": "file:///update_strands_orientations.json"
        },
        {
            "uri": "file:///check_strands_orientations.json"
        },
        {
            "uri": "file:///get_point_length.json"
        },
        {
            "uri": "file:///get_point_size.json"
        },
        {
            "uri": "file:///curl_strands.json"
        },
        {
            "uri": "file:///fill_interpolated_array.json"
        },
        {
            "uri": "file:///add_points_to_points.json"
        },
        {
            "uri": "file:///validate_points.json"
        },
        {
            "uri": "file:///construct_points.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "MJCG::Graphs::strands_random_scale",
            "uriImported": "stream:/strandsRandomScaleShape",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "648.486 710.766"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "out_strands"
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "884.728 380.357"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "backdrop",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#4b6d3d"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Create points, set a normal property and generate strands along its normals."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-2512.87 362.871 532.909 358.895"
                        }
                    ]
                },
                {
                    "metaName": "backdrop1",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6a4c6d"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "347.881 252.325 763.539 420.308"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Scale the strands with random values between 0 and 5. \nThese random values are also multiplied by the weights, creating a sorta progressive random scale effect.\nFinally, add render settings.draw in the viewport."
                        }
                    ]
                },
                {
                    "metaName": "backdrop2",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Apply random color per strands and add strand size profile."
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6b6d42"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-1119.21 310.033 1062.71 421.186"
                        }
                    ]
                },
                {
                    "metaName": "backdrop3",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d4545"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-1952.31 325.573 806.768 393.091"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Generate stands from points, add some waves, and update the tangents for nicer viewport display."
                        }
                    ]
                },
                {
                    "metaName": "backdrop4",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#444e6d"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Generate per strand weights from 0 to 1."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-20.0265 433.986 320.006 336.149"
                        }
                    ]
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Math,multiply"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Math,twice_of"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Graph,pass"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Constants,pi"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,MJCG::Core::Array,fill_interpolated_array"
                },
                {
                    "metaName": "backdrop5",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#3a596d"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-4147.42 262.652 1607.93 539.591"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Generate a pseudo spiral with points. Each points will generate a strands in the 3rd step."
                        }
                    ]
                },
                {
                    "metaName": "backdrop6",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d3f3f"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "The number of strands."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-4012.68 828.91 280.677 235.632"
                        }
                    ]
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "-4205.64 -1032.64 5395.56 3373.17"
                },
                {
                    "metaName": "compoundIsGraph",
                    "metaValue": "true"
                },
                {
                    "metaName": "author",
                    "metaType": "string",
                    "metaValue": "Maxime Jeanmougin"
                },
                {
                    "metaName": "category",
                    "metaType": "string",
                    "metaValue": "MJCG"
                },
                {
                    "metaName": "description",
                    "metaType": "string",
                    "metaValue": "Applies random scale to strands."
                },
                {
                    "metaName": "thumbnail",
                    "metaType": "string",
                    "metaValue": "strands_random_scale_thumb.png"
                }
            ],
            "ports": [
                {
                    "portName": "out_strands",
                    "portDirection": "output",
                    "portType": "Amino::Object"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "create_strands_along_normals",
                    "nodeType": "Modeling::Strands::create_strands_along_normals",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1931 386"
                        }
                    ]
                },
                {
                    "nodeName": "scale_strands",
                    "nodeType": "MJCG::Geometry::Strands::scale_strands",
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::proxy"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "Scale",
                                    "metaType": "string",
                                    "metaValue": "1"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "390.687 317.549"
                        }
                    ]
                },
                {
                    "nodeName": "set_strands_shape",
                    "nodeType": "Geometry::Strands::set_strands_shape",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "640.687 340.284"
                        }
                    ]
                },
                {
                    "nodeName": "assign_diagnostic_material",
                    "nodeType": "Diagnostic::Display::assign_diagnostic_material",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-581 339"
                        }
                    ]
                },
                {
                    "nodeName": "get_strands_structure",
                    "nodeType": "Geometry::Strands::get_strands_structure",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1080 448"
                        }
                    ]
                },
                {
                    "nodeName": "random_value",
                    "nodeType": "Core::Randomization::random_value",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-828 450"
                        }
                    ]
                },
                {
                    "nodeName": "curl_strands",
                    "nodeType": "MJCG::Geometry::Strands::curl_strands",
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::proxy"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1667 361"
                        }
                    ]
                },
                {
                    "nodeName": "set_geo_property",
                    "nodeType": "Geometry::Properties::set_geo_property",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2224.08 410.261"
                        }
                    ]
                },
                {
                    "nodeName": "value",
                    "valueType": "Math::float3",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "1"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2482.08 573.261"
                        }
                    ]
                },
                {
                    "nodeName": "fill_interpolated_array",
                    "nodeType": "MJCG::Core::Array::fill_interpolated_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "26.5973 472.812"
                        }
                    ]
                },
                {
                    "nodeName": "set_strands_size_profile",
                    "nodeType": "Modeling::Strands::set_strands_size_profile",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-325 342"
                        }
                    ]
                },
                {
                    "nodeName": "update_strands_tangents",
                    "nodeType": "Geometry::Strands::update_strands_tangents",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1417 361"
                        }
                    ]
                },
                {
                    "nodeName": "construct_points",
                    "nodeType": "Geometry::Points::construct_points",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2478.08 399.261"
                        }
                    ]
                },
                {
                    "nodeName": "sequence_array1",
                    "nodeType": "Core::Array::sequence_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3064.34 551.362"
                        }
                    ]
                },
                {
                    "nodeName": "cos",
                    "nodeType": "Core::Math::cos",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3316.52 448.626"
                        }
                    ]
                },
                {
                    "nodeName": "sin",
                    "nodeType": "Core::Math::sin",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3313.46 271.659"
                        }
                    ]
                },
                {
                    "nodeName": "scalar_to_vector3",
                    "nodeType": "Core::Conversion::scalar_to_vector3",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3062.31 317.817"
                        }
                    ]
                },
                {
                    "nodeName": "fill_interpolated_array1",
                    "nodeType": "MJCG::Core::Array::fill_interpolated_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3586.43 373.774"
                        }
                    ]
                },
                {
                    "nodeName": "pi",
                    "nodeType": "Core::Constants::pi",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-4124.5 381.606"
                        }
                    ]
                },
                {
                    "nodeName": "value1",
                    "valueType": "long",
                    "metadata": [
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3992.77 860.713"
                        },
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        }
                    ]
                },
                {
                    "nodeName": "multiply",
                    "nodeType": "Core::Math::multiply",
                    "multiInPortNames": [
                        "vector3",
                        "sequence"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2811.24 422.844"
                        }
                    ]
                },
                {
                    "nodeName": "strand_count",
                    "nodeType": "Core::Graph::pass",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-324.186 768.483"
                        }
                    ]
                },
                {
                    "nodeName": "multiply1",
                    "nodeType": "Core::Math::multiply",
                    "multiInPortNames": [
                        "pi",
                        "output1"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-3860.08 377.366"
                        }
                    ]
                },
                {
                    "nodeName": "value2",
                    "valueType": "float",
                    "metadata": [
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-4125.5 498.181"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "get_strands_structure.point_strand_index",
                    "target": "random_value.index"
                },
                {
                    "source": "random_value.random_value",
                    "target": "assign_diagnostic_material.emission_color"
                },
                {
                    "source": "create_strands_along_normals.strands",
                    "target": "curl_strands.strands"
                },
                {
                    "source": "value.output",
                    "target": "set_geo_property.data"
                },
                {
                    "source": "set_geo_property.out_geometry",
                    "target": "create_strands_along_normals.geometry"
                },
                {
                    "source": "assign_diagnostic_material.geometry_with_material",
                    "target": "set_strands_size_profile.strands"
                },
                {
                    "source": "set_strands_size_profile.out_strands",
                    "target": "scale_strands.strands"
                },
                {
                    "source": "scale_strands.out_strands",
                    "target": "set_strands_shape.strands"
                },
                {
                    "source": "set_strands_shape.out_strands",
                    "target": ".out_strands"
                },
                {
                    "source": "curl_strands.out_strands",
                    "target": "update_strands_tangents.strands"
                },
                {
                    "source": "update_strands_tangents.out_strands",
                    "target": "get_strands_structure.strands"
                },
                {
                    "source": "update_strands_tangents.out_strands",
                    "target": "assign_diagnostic_material.geometry"
                },
                {
                    "source": "construct_points.points",
                    "target": "set_geo_property.geometry"
                },
                {
                    "source": "sin.sine",
                    "target": "scalar_to_vector3.x"
                },
                {
                    "source": "cos.cosine",
                    "target": "scalar_to_vector3.z"
                },
                {
                    "source": "fill_interpolated_array1.interpolated",
                    "target": "sin.value"
                },
                {
                    "source": "fill_interpolated_array1.interpolated",
                    "target": "cos.value"
                },
                {
                    "source": "value1.output",
                    "target": "fill_interpolated_array1.size"
                },
                {
                    "source": "value1.output",
                    "target": "sequence_array1.size"
                },
                {
                    "source": "scalar_to_vector3.vector3",
                    "target": "multiply.first.vector3"
                },
                {
                    "source": "sequence_array1.sequence",
                    "target": "multiply.first.sequence"
                },
                {
                    "source": "multiply.output",
                    "target": "construct_points.point_position"
                },
                {
                    "source": "value1.output",
                    "target": "strand_count.input"
                },
                {
                    "source": "strand_count.output",
                    "target": "fill_interpolated_array.size"
                },
                {
                    "source": "pi.pi",
                    "target": "multiply1.first.pi"
                },
                {
                    "source": "value2.output",
                    "target": "multiply1.first.output1"
                },
                {
                    "source": "multiply1.output",
                    "target": "fill_interpolated_array1.second"
                },
                {
                    "source": "fill_interpolated_array.interpolated",
                    "target": "scale_strands.weights"
                }
            ],
            "values": [
                {
                    "valueName": "create_strands_along_normals.segments",
                    "valueType": "long",
                    "value": "200"
                },
                {
                    "valueName": "create_strands_along_normals.length",
                    "valueType": "float",
                    "value": "5f"
                },
                {
                    "valueName": "scale_strands.scale",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "scale_strands.randomize_scale",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "scale_strands.min_scale",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "scale_strands.max_scale",
                    "valueType": "float",
                    "value": "5f"
                },
                {
                    "valueName": "scale_strands.random_seed",
                    "valueType": "long",
                    "value": "30"
                },
                {
                    "valueName": "scale_strands.scale_relevant_properties",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "set_strands_shape.default_size",
                    "valueType": "float",
                    "value": "0.0500000007f"
                },
                {
                    "valueName": "random_value.min",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "0f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "random_value.max",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "1f",
                        "y": "1f",
                        "z": "1f"
                    }
                },
                {
                    "valueName": "random_value.seed",
                    "valueType": "long",
                    "value": "54245"
                },
                {
                    "valueName": "curl_strands.spacial_frequency",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "curl_strands.frequency",
                    "valueType": "float",
                    "value": "3f"
                },
                {
                    "valueName": "curl_strands.size",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "curl_strands.size_profile",
                    "valueType": "Amino::FCurve",
                    "value": {
                        "version": "1",
                        "preExtrapolation": "0",
                        "postExtrapolation": "0",
                        "points": [
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "-0.40000000000000002",
                                        "yp": "1",
                                        "x": "0",
                                        "y": "1",
                                        "xn": "0.40000000000000002",
                                        "yn": "1"
                                    }
                                }
                            },
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "0.59999999999999998",
                                        "yp": "0",
                                        "x": "1",
                                        "y": "0",
                                        "xn": "1.3999999999999999",
                                        "yn": "0"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "valueName": "set_geo_property.property",
                    "valueType": "string",
                    "value": "point_normal"
                },
                {
                    "valueName": "set_geo_property.data",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "0f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "value.value",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "1f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "fill_interpolated_array.first",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "fill_interpolated_array.second",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "set_strands_size_profile.factor",
                    "valueType": "float",
                    "value": "0.0500000007f"
                },
                {
                    "valueName": "set_strands_size_profile.profile",
                    "valueType": "Amino::FCurve",
                    "value": {
                        "version": "1",
                        "preExtrapolation": "0",
                        "postExtrapolation": "0",
                        "points": [
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "-0.40000000000000002",
                                        "yp": "1",
                                        "x": "0",
                                        "y": "1",
                                        "xn": "0.40000000000000002",
                                        "yn": "1"
                                    }
                                }
                            },
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "0.62419800000000003",
                                        "yp": "0.40714299999999998",
                                        "x": "1",
                                        "y": "0.10000000000000001",
                                        "xn": "1.3757999999999999",
                                        "yn": "-0.20714099999999999"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "valueName": "sequence_array1.size",
                    "valueType": "long",
                    "value": "10"
                },
                {
                    "valueName": "sequence_array1.start",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "sequence_array1.step",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "fill_interpolated_array1.first",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "fill_interpolated_array1.second",
                    "valueType": "float",
                    "value": "10f"
                },
                {
                    "valueName": "fill_interpolated_array1.pop_first",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "value1.value",
                    "valueType": "long",
                    "value": "60"
                },
                {
                    "valueName": "value2.value",
                    "valueType": "float",
                    "value": "4f"
                }
            ],
            "reservedNodeNames": [
                {
                    "name": "input"
                },
                {
                    "name": "output"
                }
            ]
        }
    ]
}