{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///bifrost_object_i.json"
        },
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///CoreArrayOps.json"
        },
        {
            "uri": "file:///bifrost_geometry_query_types.json"
        },
        {
            "uri": "file:///geometry_types.json"
        },
        {
            "uri": "file:///get_property_any.json"
        },
        {
            "uri": "file:///get_property.json"
        },
        {
            "uri": "file:///get_geo_property.json"
        },
        {
            "uri": "file:///get_point_position.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///has_property.json"
        },
        {
            "uri": "file:///create_volume_geo_prop.json"
        },
        {
            "uri": "file:///is_a.json"
        },
        {
            "uri": "file:///create_object_from_schema.json"
        },
        {
            "uri": "file:///is_a_mesh.json"
        },
        {
            "uri": "file:///is_a_strands.json"
        },
        {
            "uri": "file:///is_a_points.json"
        },
        {
            "uri": "file:///is_a_volume.json"
        },
        {
            "uri": "file:///get_geo_schema_type.json"
        },
        {
            "uri": "file:///switch_is_a.json"
        },
        {
            "uri": "file:///get_target_component.json"
        },
        {
            "uri": "file:///create_data_geo_prop.json"
        },
        {
            "uri": "file:///set_property_any.json"
        },
        {
            "uri": "file:///set_property.json"
        },
        {
            "uri": "file:///get_geo_component_count.json"
        },
        {
            "uri": "file:///set_geo_property.array.json"
        },
        {
            "uri": "file:///set_geo_property.scalar.json"
        },
        {
            "uri": "file:///simulation_types.json"
        },
        {
            "uri": "file:///simulation_nodedefs.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///riv_types.json"
        },
        {
            "uri": "file:///point_types.json"
        },
        {
            "uri": "file:///FCurve.json"
        },
        {
            "uri": "file:///riv_ops.json"
        },
        {
            "uri": "file:///increment_decrement.json"
        },
        {
            "uri": "file:///Math_constants.json"
        },
        {
            "uri": "file:///noise_nodedefs.json"
        },
        {
            "uri": "file:///fractal_turbulence.json"
        },
        {
            "uri": "file:///Core_Array_sum_array_impl.json"
        },
        {
            "uri": "file:///Core_Array_sum_array.json"
        },
        {
            "uri": "file:///array_average.json"
        },
        {
            "uri": "file:///Math_lerp_with_clamp.json"
        },
        {
            "uri": "file:///Core_Array_array_is_empty.json"
        },
        {
            "uri": "file:///get_geo_target_count.json"
        },
        {
            "uri": "file:///CoreStringOps.json"
        },
        {
            "uri": "file:///get_geo_property_check.json"
        },
        {
            "uri": "file:///volume_types.json"
        },
        {
            "uri": "file:///volume_nodedefs.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///object_terminal.json"
        },
        {
            "uri": "file:///get_property_keys.json"
        },
        {
            "uri": "file:///is_empty.json"
        },
        {
            "uri": "file:///materials.json"
        },
        {
            "uri": "file:///standard_surface_mat.json"
        },
        {
            "uri": "file:///Math_vector4_to_vector3.json"
        },
        {
            "uri": "file:///get_sub_object.json"
        },
        {
            "uri": "file:///Math_array.json"
        },
        {
            "uri": "file:///get_point_count.json"
        },
        {
            "uri": "file:///get_point_normal.json"
        },
        {
            "uri": "file:///access_offset_array.json"
        },
        {
            "uri": "file:///Core_Array_slice_array.json"
        },
        {
            "uri": "file:///update_point_neighbors.json"
        },
        {
            "uri": "file:///get_strands_structure.json"
        },
        {
            "uri": "file:///Core_Array_flatten_nested_array.json"
        },
        {
            "uri": "file:///update_point_strand_index.json"
        },
        {
            "uri": "file:///check_point_strand_index.json"
        },
        {
            "uri": "file:///update_strands_neighbors.json"
        },
        {
            "uri": "file:///update_mesh_adjacency.json"
        },
        {
            "uri": "file:///Core_Constants_default_value.json"
        },
        {
            "uri": "file:///smooth_geo_property.json"
        },
        {
            "uri": "file:///set_sub_object_property.json"
        },
        {
            "uri": "file:///validate_mesh.json"
        },
        {
            "uri": "file:///construct_mesh.json"
        },
        {
            "uri": "file:///Core_Array_reverse_array.json"
        },
        {
            "uri": "file:///half_of.json"
        },
        {
            "uri": "file:///Math_quaternion_to_matrix.json"
        },
        {
            "uri": "file:///Math_compose_transform_matrix.json"
        },
        {
            "uri": "file:///Math_multiply_quaternions.json"
        },
        {
            "uri": "file:///Math_rotate_by_quaternion.json"
        },
        {
            "uri": "file:///Math_axis_angle_to_quaternion.json"
        },
        {
            "uri": "file:///Math_length_squared.json"
        },
        {
            "uri": "file:///Math_almost_equal.json"
        },
        {
            "uri": "file:///Math_vector3_to_vector4.json"
        },
        {
            "uri": "file:///rotation_between_vectors.json"
        },
        {
            "uri": "file:///create_mesh_plane.json"
        },
        {
            "uri": "file:///distance_between_vectors.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "MJCG::Graphs::smooth_geo_property_color",
            "uriImported": "stream:/bifrostGraphShape1",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "98.4862 521.781"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "io_ports"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "338.185 521.251"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "backdrop",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d4c4c"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "apply color noise"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "12.5061 754.285 829.545 517.567"
                        }
                    ]
                },
                {
                    "metaName": "backdrop1",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#4e6d41"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "control smoothing iterations with the current frame\n"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "977.89 895.727 496.869 300.746"
                        }
                    ]
                },
                {
                    "metaName": "backdrop2",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#2d4e6d"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Smooth the point_color geo property\n"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "1567.75 710.385 327.432 430.453"
                        }
                    ]
                },
                {
                    "metaName": "backdrop3",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d3f5d"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "637.621 445.704 854.615 278.543"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Create weights by getting the distance from origin so that we can smooth the geo property only around the center of the plane."
                        }
                    ]
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Fields,fractal_noise_field"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Fields,curl_noise_field"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::FCurve,evaluate_fcurve"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Math,change_range"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Array,array_bounds"
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "-871.747 442.606 3335.28 556.357"
                },
                {
                    "metaName": "compoundIsGraph",
                    "metaValue": "true"
                },
                {
                    "metaName": "author",
                    "metaType": "string",
                    "metaValue": "Maxime Jeanmougin"
                },
                {
                    "metaName": "category",
                    "metaType": "string",
                    "metaValue": "MJCG"
                },
                {
                    "metaName": "description",
                    "metaType": "string",
                    "metaValue": "Smooths the point_color geo property of a mesh plane."
                },
                {
                    "metaName": "thumbnail",
                    "metaType": "string",
                    "metaValue": "smooth_geo_property_color_thumb.png"
                }
            ],
            "ports": [],
            "compoundNodes": [
                {
                    "nodeName": "get_point_position",
                    "nodeType": "Geometry::Properties::get_point_position",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "23.7679 902.822"
                        }
                    ]
                },
                {
                    "nodeName": "set_geo_property",
                    "nodeType": "Geometry::Properties::set_geo_property",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "543.768 775.822"
                        }
                    ]
                },
                {
                    "nodeName": "to_long",
                    "nodeType": "Core::Type_Conversion::to_long",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1234.96 961.132"
                        }
                    ]
                },
                {
                    "nodeName": "time",
                    "nodeType": "Core::Time::time",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "987.96 938.132"
                        }
                    ]
                },
                {
                    "nodeName": "fractal_turbulence",
                    "nodeType": "Core::Randomization::fractal_turbulence",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "273.768 898.822"
                        }
                    ]
                },
                {
                    "nodeName": "smooth_geo_property",
                    "nodeType": "MJCG::Geometry::Common::smooth_geo_property",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "Smoothing",
                                    "metaType": "string",
                                    "metaValue": "1"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1618.19 758.238"
                        }
                    ]
                },
                {
                    "nodeName": "create_mesh_plane",
                    "nodeType": "Modeling::Primitive::create_mesh_plane",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-253.232 796.822"
                        }
                    ]
                },
                {
                    "nodeName": "distance_between_vectors",
                    "nodeType": "MJCG::Core::Math::distance_between_vectors",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "924.112 498.382"
                        }
                    ]
                },
                {
                    "nodeName": "evaluate_fcurve",
                    "nodeType": "Core::FCurve::evaluate_fcurve",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1195.6 483.072"
                        }
                    ]
                },
                {
                    "nodeName": "value",
                    "valueType": "Math::float3",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "659.871 505.971"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "time.frame",
                    "target": "to_long.from"
                },
                {
                    "source": "get_point_position.point_position",
                    "target": "fractal_turbulence.position"
                },
                {
                    "source": "fractal_turbulence.noise",
                    "target": "set_geo_property.data"
                },
                {
                    "source": "to_long.long",
                    "target": "smooth_geo_property.iterations"
                },
                {
                    "source": "set_geo_property.out_geometry",
                    "target": "smooth_geo_property.geometry"
                },
                {
                    "source": "create_mesh_plane.plane_mesh",
                    "target": "get_point_position.geometry"
                },
                {
                    "source": "create_mesh_plane.plane_mesh",
                    "target": "set_geo_property.geometry"
                },
                {
                    "source": "get_point_position.point_position",
                    "target": "distance_between_vectors.second"
                },
                {
                    "source": "value.output",
                    "target": "distance_between_vectors.first"
                },
                {
                    "source": "distance_between_vectors.distance",
                    "target": "evaluate_fcurve.x"
                },
                {
                    "source": "evaluate_fcurve.y",
                    "target": "smooth_geo_property.weights"
                }
            ],
            "values": [
                {
                    "valueName": "set_geo_property.property",
                    "valueType": "string",
                    "value": "point_color"
                },
                {
                    "valueName": "fractal_turbulence.magnitude",
                    "valueType": "float",
                    "value": "10f"
                },
                {
                    "valueName": "fractal_turbulence.num_frequencies",
                    "valueType": "float",
                    "value": "20f"
                },
                {
                    "valueName": "fractal_turbulence.frequency",
                    "valueType": "float",
                    "value": "5f"
                },
                {
                    "valueName": "fractal_turbulence.ratio",
                    "valueType": "float",
                    "value": "0.5f"
                },
                {
                    "valueName": "fractal_turbulence.frequency_ratio",
                    "valueType": "float",
                    "value": "0.200000003f"
                },
                {
                    "valueName": "fractal_turbulence.seed",
                    "valueType": "long",
                    "value": "5"
                },
                {
                    "valueName": "smooth_geo_property.property",
                    "valueType": "string",
                    "value": "point_color"
                },
                {
                    "valueName": "smooth_geo_property.type",
                    "valueType": "array<Math::float3>",
                    "value": []
                },
                {
                    "valueName": "create_mesh_plane.length",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "create_mesh_plane.width",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "create_mesh_plane.length_segments",
                    "valueType": "int",
                    "value": "50L"
                },
                {
                    "valueName": "create_mesh_plane.width_segments",
                    "valueType": "int",
                    "value": "50L"
                },
                {
                    "valueName": "evaluate_fcurve.fcurve",
                    "valueType": "Amino::FCurve",
                    "value": {
                        "version": "1",
                        "preExtrapolation": "0",
                        "postExtrapolation": "0",
                        "points": [
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "-0.40000000000000002",
                                        "yp": "1",
                                        "x": "0",
                                        "y": "1",
                                        "xn": "0.40000000000000002",
                                        "yn": "1"
                                    }
                                }
                            },
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "2",
                                    "pcn": {
                                        "xp": "0.10000000000000001",
                                        "yp": "0",
                                        "x": "0.5",
                                        "y": "0",
                                        "xn": "0.90000000000000002",
                                        "yn": "0"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "valueName": "value.value",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "0f",
                        "z": "0f"
                    }
                }
            ],
            "reservedNodeNames": [
                {
                    "name": "input"
                },
                {
                    "name": "output"
                }
            ]
        }
    ]
}
