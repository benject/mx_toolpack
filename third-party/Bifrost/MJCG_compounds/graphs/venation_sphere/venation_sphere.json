{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///bifrost_object_i.json"
        },
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///CoreArrayOps.json"
        },
        {
            "uri": "file:///bifrost_geometry_query_types.json"
        },
        {
            "uri": "file:///geometry_types.json"
        },
        {
            "uri": "file:///get_property_any.json"
        },
        {
            "uri": "file:///get_property.json"
        },
        {
            "uri": "file:///get_geo_property.json"
        },
        {
            "uri": "file:///get_point_position.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///has_property.json"
        },
        {
            "uri": "file:///create_volume_geo_prop.json"
        },
        {
            "uri": "file:///is_a.json"
        },
        {
            "uri": "file:///create_object_from_schema.json"
        },
        {
            "uri": "file:///is_a_mesh.json"
        },
        {
            "uri": "file:///is_a_strands.json"
        },
        {
            "uri": "file:///is_a_points.json"
        },
        {
            "uri": "file:///is_a_volume.json"
        },
        {
            "uri": "file:///get_geo_schema_type.json"
        },
        {
            "uri": "file:///switch_is_a.json"
        },
        {
            "uri": "file:///get_target_component.json"
        },
        {
            "uri": "file:///create_data_geo_prop.json"
        },
        {
            "uri": "file:///set_property_any.json"
        },
        {
            "uri": "file:///set_property.json"
        },
        {
            "uri": "file:///get_geo_component_count.json"
        },
        {
            "uri": "file:///set_geo_property.array.json"
        },
        {
            "uri": "file:///set_geo_property.scalar.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///Math_constants.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds_impl.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds.json"
        },
        {
            "uri": "file:///Core_Constants_default_value.json"
        },
        {
            "uri": "file:///riv_types.json"
        },
        {
            "uri": "file:///point_types.json"
        },
        {
            "uri": "file:///FCurve.json"
        },
        {
            "uri": "file:///riv_ops.json"
        },
        {
            "uri": "file:///Math_change_range.json"
        },
        {
            "uri": "file:///processing_type.json"
        },
        {
            "uri": "file:///venation_node_type.json"
        },
        {
            "uri": "file:///Math_array.json"
        },
        {
            "uri": "file:///get_geo_property_check.json"
        },
        {
            "uri": "file:///get_sub_object.json"
        },
        {
            "uri": "file:///get_point_count.json"
        },
        {
            "uri": "file:///add_points_to_points.json"
        },
        {
            "uri": "file:///validate_points.json"
        },
        {
            "uri": "file:///construct_points.json"
        },
        {
            "uri": "file:///jotun_rand.json"
        },
        {
            "uri": "file:///increment_decrement.json"
        },
        {
            "uri": "file:///random_value.json"
        },
        {
            "uri": "file:///get_property_keys.json"
        },
        {
            "uri": "file:///is_empty.json"
        },
        {
            "uri": "file:///materials.json"
        },
        {
            "uri": "file:///erase_property.json"
        },
        {
            "uri": "file:///set_point_shape.json"
        },
        {
            "uri": "file:///set_point_size.json"
        },
        {
            "uri": "file:///set_point_length.json"
        },
        {
            "uri": "file:///int_filter.json"
        },
        {
            "uri": "file:///get_array_indices.json"
        },
        {
            "uri": "file:///get_strands_structure.json"
        },
        {
            "uri": "file:///access_offset_array.json"
        },
        {
            "uri": "file:///update_point_strand_index.json"
        },
        {
            "uri": "file:///check_point_strand_index.json"
        },
        {
            "uri": "file:///update_strands_ratio.json"
        },
        {
            "uri": "file:///set_sub_object_property.json"
        },
        {
            "uri": "file:///validate_strands.json"
        },
        {
            "uri": "file:///construct_strands.json"
        },
        {
            "uri": "file:///find_all_in_array.json"
        },
        {
            "uri": "file:///remove_first_in_array.json"
        },
        {
            "uri": "file:///Core_Array_flatten_nested_array.json"
        },
        {
            "uri": "file:///set_strands_shape.json"
        },
        {
            "uri": "file:///Math_lerp_with_clamp.json"
        },
        {
            "uri": "file:///Core_Array_slice_array.json"
        },
        {
            "uri": "file:///Core_Array_empty_array.json"
        },
        {
            "uri": "file:///Core_Array_array_is_empty.json"
        },
        {
            "uri": "file:///sort_array_and_remove_duplicates.json"
        },
        {
            "uri": "file:///object_terminal.json"
        },
        {
            "uri": "file:///delete_points_in_points.json"
        },
        {
            "uri": "file:///Math_axis_angle_to_quaternion.json"
        },
        {
            "uri": "file:///Math_degrees_to_radians.json"
        },
        {
            "uri": "file:///Math_multiply_quaternions.json"
        },
        {
            "uri": "file:///Math_rotate_by_quaternion.json"
        },
        {
            "uri": "file:///build_closest_accelerator.json"
        },
        {
            "uri": "file:///sample_closest_point_accelerator.json"
        },
        {
            "uri": "file:///simulation_types.json"
        },
        {
            "uri": "file:///simulation_nodedefs.json"
        },
        {
            "uri": "file:///fluids_types.json"
        },
        {
            "uri": "file:///volume_types.json"
        },
        {
            "uri": "file:///fluids_nodedefs.json"
        },
        {
            "uri": "file:///venation_branch_type.json"
        },
        {
            "uri": "file:///generate_venation_core.json"
        },
        {
            "uri": "file:///get_geo_target_count.json"
        },
        {
            "uri": "file:///CoreStringOps.json"
        },
        {
            "uri": "file:///volume_nodedefs.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///Profiler.json"
        },
        {
            "uri": "file:///object_profiler.json"
        },
        {
            "uri": "file:///check_point_ratio.json"
        },
        {
            "uri": "file:///set_strands_size_profile.json"
        },
        {
            "uri": "file:///cumulative_sum_array.json"
        },
        {
            "uri": "file:///get_strands_end_points.json"
        },
        {
            "uri": "file:///set_strand_length.json"
        },
        {
            "uri": "file:///sample_closest_in_radius_accelerator.json"
        },
        {
            "uri": "file:///get_points_in_radius.json"
        },
        {
            "uri": "file:///generate_venation.json"
        },
        {
            "uri": "file:///scatter_types.json"
        },
        {
            "uri": "file:///get_indexer_element.json"
        },
        {
            "uri": "file:///math_util.json"
        },
        {
            "uri": "file:///get_loc_element.json"
        },
        {
            "uri": "file:///invalid_index.json"
        },
        {
            "uri": "file:///get_mesh_geo_loc_data.json"
        },
        {
            "uri": "file:///max_weight.json"
        },
        {
            "uri": "file:///mesh_v_interp.json"
        },
        {
            "uri": "file:///is_a_range_geo_property.json"
        },
        {
            "uri": "file:///get_range_geo_property.json"
        },
        {
            "uri": "file:///mesh_fv_interp.json"
        },
        {
            "uri": "file:///mesh_f_interp.json"
        },
        {
            "uri": "file:///choose_mesh_values.json"
        },
        {
            "uri": "file:///get_mesh_structure.json"
        },
        {
            "uri": "file:///get_point_geo_loc_data.json"
        },
        {
            "uri": "file:///point_p_interp.json"
        },
        {
            "uri": "file:///sample_volume_property.json"
        },
        {
            "uri": "file:///get_strand_geo_loc_data.json"
        },
        {
            "uri": "file:///strand_p_interp.json"
        },
        {
            "uri": "file:///strand_s_interp.json"
        },
        {
            "uri": "file:///choose_strand_values.json"
        },
        {
            "uri": "file:///sample_property.json"
        },
        {
            "uri": "file:///Math_matrix_to_quaternion.json"
        },
        {
            "uri": "file:///Math_length_squared.json"
        },
        {
            "uri": "file:///normal_and_tangent_to_orientation.json"
        },
        {
            "uri": "file:///Math_vector4_to_vector3.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_vector.json"
        },
        {
            "uri": "file:///rotate_points.json"
        },
        {
            "uri": "file:///Math_almost_equal.json"
        },
        {
            "uri": "file:///Math_quaternion_to_axis_angle.json"
        },
        {
            "uri": "file:///set_geo_property_data.json"
        },
        {
            "uri": "file:///get_point_normal.json"
        },
        {
            "uri": "file:///get_closest_point.json"
        },
        {
            "uri": "file:///sample_interpreted_auto_port_as_vector.json"
        },
        {
            "uri": "file:///update_mesh_normals.json"
        },
        {
            "uri": "file:///get_indexed_geo_property_check.json"
        },
        {
            "uri": "file:///UV_set_name.json"
        },
        {
            "uri": "file:///UV_type_filter.json"
        },
        {
            "uri": "file:///UV_type_converter.json"
        },
        {
            "uri": "file:///get_mesh_UVs.json"
        },
        {
            "uri": "file:///project_vector.json"
        },
        {
            "uri": "file:///orient_points_by_geometry.json"
        },
        {
            "uri": "file:///generate_sample_locations.json"
        },
        {
            "uri": "file:///get_max_index.json"
        },
        {
            "uri": "file:///scatter_points_internal.json"
        },
        {
            "uri": "file:///sample_closest_accelerator.json"
        },
        {
            "uri": "file:///get_closest_locations.json"
        },
        {
            "uri": "file:///Core_Array_sum_array_impl.json"
        },
        {
            "uri": "file:///Core_Array_sum_array.json"
        },
        {
            "uri": "file:///half_of.json"
        },
        {
            "uri": "file:///sample_interpreted_auto_port_as_scalar.json"
        },
        {
            "uri": "file:///set_point_position.json"
        },
        {
            "uri": "file:///weighted_sample_elimination.json"
        },
        {
            "uri": "file:///scatter_points_blue_noise.json"
        },
        {
            "uri": "file:///mask_and_number_interaction.json"
        },
        {
            "uri": "file:///compute_mesh_surface_area.json"
        },
        {
            "uri": "file:///scatter_points_on_mesh.json"
        },
        {
            "uri": "file:///twice_of.json"
        },
        {
            "uri": "file:///compute_bounding_sphere.json"
        },
        {
            "uri": "file:///delete_points.json"
        },
        {
            "uri": "file:///cull_overlapping_positions.json"
        },
        {
            "uri": "file:///merge_meshes.json"
        },
        {
            "uri": "file:///merge_points.json"
        },
        {
            "uri": "file:///merge_strands.json"
        },
        {
            "uri": "file:///merge_geometry.json"
        },
        {
            "uri": "file:///cull_overlapping_points.json"
        },
        {
            "uri": "file:///cull_points.json"
        },
        {
            "uri": "file:///density_to_radius.json"
        },
        {
            "uri": "file:///get_volume_tile_info.json"
        },
        {
            "uri": "file:///scatter_points.json"
        },
        {
            "uri": "file:///validate_mesh.json"
        },
        {
            "uri": "file:///construct_mesh.json"
        },
        {
            "uri": "file:///Math_quaternion_to_matrix.json"
        },
        {
            "uri": "file:///Math_compose_transform_matrix.json"
        },
        {
            "uri": "file:///Math_vector3_to_vector4.json"
        },
        {
            "uri": "file:///rotation_between_vectors.json"
        },
        {
            "uri": "file:///set_point_normal.json"
        },
        {
            "uri": "file:///create_mesh_sphere.json"
        },
        {
            "uri": "file:///compute_on_frame.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "MJCG::Graphs::venation_sphere",
            "uriImported": "file:///__duplicateCompoundURIHelper__",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "701.996 602.59"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output1",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "out_geometry"
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "724.649 114.697"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "backdrop",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#496d55"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "set color from world position"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-372.29 62.5106 1342.19 491.614"
                        }
                    ]
                },
                {
                    "metaName": "backdrop1",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d4141"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Grow veins"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-705.011 67.8537 294.1 410.998"
                        }
                    ]
                },
                {
                    "metaName": "backdrop2",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d4545"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Generate attractor points"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-1691.53 353.224 357.706 396.558"
                        }
                    ]
                },
                {
                    "metaName": "backdrop3",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#456d48"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Generate seed points"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-2050.52 5.893 357.706 396.558"
                        }
                    ]
                },
                {
                    "metaName": "backdrop5",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#696d3f"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Scatter points on a sphere, one for colonization and the other for seed positions."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-2406.64 124.932 618.164 562.291"
                        }
                    ]
                },
                {
                    "metaName": "backdrop6",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6b6d4a"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "cache the scattered points so the simulation demo is faster.\nThe scatter is only evaluated on the frame 1."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-1312.7 11.6976 543.698 501.92"
                        }
                    ]
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Graph,terminal"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,MJCG::Modeling::Growth,generate_venation"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Geometry::Properties,get_geo_property"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Math,lerp"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Geometry::Strands::Internal,update_strands_ratio"
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "-2446.52 -721.856 3476.84 2182.75"
                },
                {
                    "metaName": "compoundIsGraph",
                    "metaValue": "true"
                },
                {
                    "metaName": "author",
                    "metaType": "string",
                    "metaValue": "Maxime Jeanmougin"
                },
                {
                    "metaName": "category",
                    "metaType": "string",
                    "metaValue": "MJCG"
                },
                {
                    "metaName": "description",
                    "metaType": "string",
                    "metaValue": "Grow veins by colonizing points scattered on a sphere."
                },
                {
                    "metaName": "example_scene",
                    "metaType": "string",
                    "metaValue": "venation_sphere_example.ma"
                },
                {
                    "metaName": "thumbnail",
                    "metaType": "string",
                    "metaValue": "venation_sphere_thumb.png"
                }
            ],
            "ports": [
                {
                    "portName": "out_geometry",
                    "portDirection": "output",
                    "portType": "Amino::Object"
                }
            ],
            "compounds": [
                {
                    "name": "push",
                    "uriImported": "file:///__duplicateCompoundURIHelper__",
                    "metadata": [
                        {
                            "metaName": "ViewportRect",
                            "metaType": "string",
                            "metaValue": "-1025 -673 2050 1346"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,multiply"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Geometry::Properties,set_point_position"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Simulation::Particles,set_particle_property_from_age"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Core::Math,add"
                        },
                        {
                            "metaName": "_recentNode_",
                            "metaType": "string",
                            "metaValue": "BifrostGraph,Geometry::Properties,get_point_normal"
                        },
                        {
                            "metaName": "io_nodes",
                            "metadata": [
                                {
                                    "metaName": "io_inodes",
                                    "metadata": [
                                        {
                                            "metaName": "input",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "-732.682 -105.233"
                                                },
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "sphere_mesh"
                                                        },
                                                        {
                                                            "metaName": "amount"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "metaName": "io_onodes",
                                    "metadata": [
                                        {
                                            "metaName": "output",
                                            "metadata": [
                                                {
                                                    "metaName": "DisplayMode",
                                                    "metaType": "string",
                                                    "metaValue": "2"
                                                },
                                                {
                                                    "metaName": "LayoutPos",
                                                    "metaType": "string",
                                                    "metaValue": "800 -113"
                                                },
                                                {
                                                    "metaName": "io_ports",
                                                    "metadata": [
                                                        {
                                                            "metaName": "out_sphere_mesh"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "ports": [
                        {
                            "portName": "sphere_mesh",
                            "portDirection": "input",
                            "portType": "Amino::Object"
                        },
                        {
                            "portName": "amount",
                            "portDirection": "input",
                            "portType": "float"
                        },
                        {
                            "portName": "out_sphere_mesh",
                            "portDirection": "output",
                            "portType": "Amino::Object"
                        }
                    ],
                    "compoundNodes": [
                        {
                            "nodeName": "get_point_position",
                            "nodeType": "Geometry::Properties::get_point_position",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "-212.134 41.3968"
                                }
                            ]
                        },
                        {
                            "nodeName": "get_point_normal",
                            "nodeType": "Geometry::Properties::get_point_normal",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "-226.02 302.73"
                                }
                            ]
                        },
                        {
                            "nodeName": "add",
                            "nodeType": "Core::Math::add",
                            "multiInPortNames": [
                                "point_position",
                                "point_normal"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "290.181 46.29"
                                }
                            ]
                        },
                        {
                            "nodeName": "set_point_position",
                            "nodeType": "Geometry::Properties::set_point_position",
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "552.557 -130.316"
                                }
                            ]
                        },
                        {
                            "nodeName": "multiply",
                            "nodeType": "Core::Math::multiply",
                            "multiInPortNames": [
                                "point_normal",
                                "port"
                            ],
                            "metadata": [
                                {
                                    "metaName": "DisplayMode",
                                    "metaType": "string",
                                    "metaValue": "2"
                                },
                                {
                                    "metaName": "LayoutPos",
                                    "metaType": "string",
                                    "metaValue": "38.5 178"
                                }
                            ]
                        }
                    ],
                    "connections": [
                        {
                            "source": "get_point_position.point_position",
                            "target": "add.first.point_position"
                        },
                        {
                            "source": "get_point_normal.point_normal",
                            "target": "multiply.first.point_normal"
                        },
                        {
                            "source": "add.output",
                            "target": "set_point_position.positions"
                        },
                        {
                            "source": "set_point_position.out_geometry",
                            "target": ".out_sphere_mesh"
                        },
                        {
                            "source": "multiply.output",
                            "target": "add.first.point_normal"
                        },
                        {
                            "source": ".sphere_mesh",
                            "target": "get_point_position.geometry"
                        },
                        {
                            "source": ".sphere_mesh",
                            "target": "get_point_normal.geometry"
                        },
                        {
                            "source": ".sphere_mesh",
                            "target": "set_point_position.geometry"
                        },
                        {
                            "source": ".amount",
                            "target": "multiply.first.port"
                        }
                    ],
                    "values": [],
                    "reservedNodeNames": [
                        {
                            "name": "input"
                        },
                        {
                            "name": "output"
                        }
                    ]
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "get_point_position",
                    "nodeType": "Geometry::Properties::get_point_position",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-346.739 232.232"
                        }
                    ]
                },
                {
                    "nodeName": "set_geo_property",
                    "nodeType": "Geometry::Properties::set_geo_property",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "463.115 87.1197"
                        }
                    ]
                },
                {
                    "nodeName": "array_bounds",
                    "nodeType": "Core::Array::array_bounds",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-72.2894 318.916"
                        }
                    ]
                },
                {
                    "nodeName": "change_range",
                    "nodeType": "Core::Math::change_range",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "196.686 200.806"
                        }
                    ]
                },
                {
                    "nodeName": "generate_venation",
                    "nodeType": "MJCG::Modeling::Growth::generate_venation",
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::final",
                        "Core::Graph::terminal::proxy",
                        "Core::Graph::terminal::diagnostic"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-668.985 107.725"
                        }
                    ]
                },
                {
                    "nodeName": "scatter_points1",
                    "nodeType": "Modeling::Points::scatter_points",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "Scatter Settings.Max Number",
                                    "metaType": "string",
                                    "metaValue": "0"
                                },
                                {
                                    "metaName": "Scatter Settings",
                                    "metaType": "string",
                                    "metaValue": "0"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1993.82 73.1372"
                        }
                    ]
                },
                {
                    "nodeName": "scatter_points2",
                    "nodeType": "Modeling::Points::scatter_points",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "Scatter Settings.Max Number",
                                    "metaType": "string",
                                    "metaValue": "1"
                                },
                                {
                                    "metaName": "Scatter Settings",
                                    "metaType": "string",
                                    "metaValue": "0"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1649.74 397.203"
                        }
                    ]
                },
                {
                    "nodeName": "push",
                    "nodeType": "push",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2074.55 168.528"
                        }
                    ]
                },
                {
                    "nodeName": "create_mesh_sphere",
                    "nodeType": "Modeling::Primitive::create_mesh_sphere",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2366.55 305.528"
                        }
                    ]
                },
                {
                    "nodeName": "compute_on_frame",
                    "nodeType": "Simulation::Common::compute_on_frame",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1039.21 53.8216"
                        }
                    ]
                },
                {
                    "nodeName": "compute_on_frame1",
                    "nodeType": "Simulation::Common::compute_on_frame",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1038.51 290.132"
                        }
                    ]
                },
                {
                    "nodeName": "value",
                    "valueType": "int",
                    "metadata": [
                        {
                            "metaName": "valuenode_defaultvalue",
                            "metaType": "string",
                            "metaValue": "0"
                        },
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-1294.36 187.427"
                        }
                    ]
                },
                {
                    "nodeName": "terminal",
                    "nodeType": "Core::Graph::terminal",
                    "fanInPortNames": {
                        "final": [],
                        "proxy": [
                            "sphere_mesh"
                        ],
                        "diagnostic": []
                    },
                    "deactivatedTerminals": [
                        "Core::Graph::terminal::final",
                        "Core::Graph::terminal::diagnostic",
                        "Core::Graph::terminal::proxy"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-2075.15 431.083"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "array_bounds.min_bound",
                    "target": "change_range.from_start"
                },
                {
                    "source": "array_bounds.max_bound",
                    "target": "change_range.from_end"
                },
                {
                    "source": "set_geo_property.out_geometry",
                    "target": ".out_geometry"
                },
                {
                    "source": "get_point_position.point_position",
                    "target": "array_bounds.array"
                },
                {
                    "source": "get_point_position.point_position",
                    "target": "change_range.value"
                },
                {
                    "source": "change_range.result",
                    "target": "set_geo_property.data"
                },
                {
                    "source": "generate_venation.strands",
                    "target": "set_geo_property.geometry"
                },
                {
                    "source": "generate_venation.strands",
                    "target": "get_point_position.geometry"
                },
                {
                    "source": "push.out_sphere_mesh",
                    "target": "scatter_points2.geometry"
                },
                {
                    "source": "push.out_sphere_mesh",
                    "target": "scatter_points1.geometry"
                },
                {
                    "source": "create_mesh_sphere.sphere_mesh",
                    "target": "push.sphere_mesh"
                },
                {
                    "source": "scatter_points1.points",
                    "target": "compute_on_frame.value_to_pull"
                },
                {
                    "source": "scatter_points2.points",
                    "target": "compute_on_frame1.value_to_pull"
                },
                {
                    "source": "value.output",
                    "target": "compute_on_frame.frame_to_pull_on"
                },
                {
                    "source": "value.output",
                    "target": "compute_on_frame1.frame_to_pull_on"
                },
                {
                    "source": "compute_on_frame.cached_value",
                    "target": "generate_venation.attractor_points"
                },
                {
                    "source": "compute_on_frame1.cached_value",
                    "target": "generate_venation.seed_points"
                },
                {
                    "source": "create_mesh_sphere.sphere_mesh",
                    "target": "terminal.proxy.sphere_mesh"
                }
            ],
            "values": [
                {
                    "valueName": "set_geo_property.property",
                    "valueType": "string",
                    "value": "color"
                },
                {
                    "valueName": "set_geo_property.target",
                    "valueType": "string",
                    "value": "point_component"
                },
                {
                    "valueName": "change_range.to_start",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "0f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "change_range.to_end",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "1f",
                        "y": "1f",
                        "z": "1f"
                    }
                },
                {
                    "valueName": "generate_venation.processing_mode",
                    "valueType": "MJCG::processingType",
                    "value": "Simulation"
                },
                {
                    "valueName": "generate_venation.start_frame",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "generate_venation.use_end_frame",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "generate_venation.end_frame",
                    "valueType": "float",
                    "value": "100f"
                },
                {
                    "valueName": "generate_venation.max_iterations",
                    "valueType": "long",
                    "value": "100"
                },
                {
                    "valueName": "generate_venation.attraction_radius",
                    "valueType": "float",
                    "value": "0.100000001f"
                },
                {
                    "valueName": "generate_venation.kill_radius",
                    "valueType": "float",
                    "value": "0.0399999991f"
                },
                {
                    "valueName": "generate_venation.min_step_length",
                    "valueType": "float",
                    "value": "0.0199999996f"
                },
                {
                    "valueName": "generate_venation.seed_points",
                    "valueType": "Amino::Object",
                    "value": {}
                },
                {
                    "valueName": "generate_venation.seed_size",
                    "valueType": "float",
                    "value": "0.00999999978f"
                },
                {
                    "valueName": "generate_venation.size_profile",
                    "valueType": "Amino::FCurve",
                    "value": {
                        "version": "1",
                        "preExtrapolation": "0",
                        "postExtrapolation": "0",
                        "points": [
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "1",
                                    "pcn": {
                                        "xp": "-0.182148",
                                        "yp": "0.998942",
                                        "x": "0",
                                        "y": "1",
                                        "xn": "0.182148",
                                        "yn": "1.001058"
                                    }
                                }
                            },
                            {
                                "point": {
                                    "locked": "1",
                                    "interpolation": "1",
                                    "pcn": {
                                        "xp": "0.86513099999999998",
                                        "yp": "0.113507",
                                        "x": "1",
                                        "y": "0.10000000000000001",
                                        "xn": "1.1348689999999999",
                                        "yn": "0.086493"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "valueName": "generate_venation.max_step_length",
                    "valueType": "float",
                    "value": "0.0299999993f"
                },
                {
                    "valueName": "generate_venation.step_length_seed",
                    "valueType": "long",
                    "value": "0"
                },
                {
                    "valueName": "generate_venation.clamp_step_angle",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "generate_venation.min_step_angle",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "generate_venation.max_step_angle",
                    "valueType": "float",
                    "value": "10f"
                },
                {
                    "valueName": "generate_venation.clamp_branch_angle",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "generate_venation.min_branch_angle",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "generate_venation.max_branch_angle",
                    "valueType": "float",
                    "value": "30f"
                },
                {
                    "valueName": "generate_venation.display_nodes",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "generate_venation.display_attraction_radius",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "generate_venation.display_kill_radius",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "scatter_points1.geometry",
                    "valueType": "Amino::Object",
                    "value": {}
                },
                {
                    "valueName": "scatter_points1.scatter_mode",
                    "valueType": "Modeling::Points::ScatteringMode",
                    "value": "Random"
                },
                {
                    "valueName": "scatter_points1.amount_mode",
                    "valueType": "Modeling::Points::AmountMode",
                    "value": "Number"
                },
                {
                    "valueName": "scatter_points1.amount",
                    "valueType": "float",
                    "value": "100000f"
                },
                {
                    "valueName": "scatter_points1.density_weights_mode",
                    "valueType": "Modeling::Points::DensityWeightsMode",
                    "value": "Random"
                },
                {
                    "valueName": "scatter_points1.cull_overlapping",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "scatter_points1.overlapping_radius",
                    "valueType": "float",
                    "value": "0.100000001f"
                },
                {
                    "valueName": "scatter_points1.transfer_properties",
                    "valueType": "string",
                    "value": "point_normal"
                },
                {
                    "valueName": "scatter_points1.set_emit_location",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "scatter_points1.set_orientations_from_geometry",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "scatter_points1.normal_mode",
                    "valueType": "Modeling::Points::OrientPointsNormalMode",
                    "value": "point_normal"
                },
                {
                    "valueName": "scatter_points1.tangent_mode",
                    "valueType": "Modeling::Points::OrientPointsTangentMode",
                    "value": "UV"
                },
                {
                    "valueName": "scatter_points1.prioritize_normal",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "scatter_points1.seed",
                    "valueType": "long",
                    "value": "0"
                },
                {
                    "valueName": "scatter_points1.max_number",
                    "valueType": "long",
                    "value": "1000000"
                },
                {
                    "valueName": "scatter_points2.geometry",
                    "valueType": "Amino::Object",
                    "value": {}
                },
                {
                    "valueName": "scatter_points2.scatter_mode",
                    "valueType": "Modeling::Points::ScatteringMode",
                    "value": "Random"
                },
                {
                    "valueName": "scatter_points2.amount_mode",
                    "valueType": "Modeling::Points::AmountMode",
                    "value": "Number"
                },
                {
                    "valueName": "scatter_points2.amount",
                    "valueType": "float",
                    "value": "20f"
                },
                {
                    "valueName": "scatter_points2.density_weights_mode",
                    "valueType": "Modeling::Points::DensityWeightsMode",
                    "value": "Random"
                },
                {
                    "valueName": "scatter_points2.cull_overlapping",
                    "valueType": "bool",
                    "value": "false"
                },
                {
                    "valueName": "scatter_points2.overlapping_radius",
                    "valueType": "float",
                    "value": "0.100000001f"
                },
                {
                    "valueName": "scatter_points2.transfer_properties",
                    "valueType": "string",
                    "value": "point_normal"
                },
                {
                    "valueName": "scatter_points2.set_emit_location",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "scatter_points2.set_orientations_from_geometry",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "scatter_points2.normal_mode",
                    "valueType": "Modeling::Points::OrientPointsNormalMode",
                    "value": "point_normal"
                },
                {
                    "valueName": "scatter_points2.tangent_mode",
                    "valueType": "Modeling::Points::OrientPointsTangentMode",
                    "value": "UV"
                },
                {
                    "valueName": "scatter_points2.prioritize_normal",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "scatter_points2.seed",
                    "valueType": "long",
                    "value": "2"
                },
                {
                    "valueName": "scatter_points2.max_number",
                    "valueType": "long",
                    "value": "1000000"
                },
                {
                    "valueName": "push.amount",
                    "valueType": "float",
                    "value": "0.0199999996f"
                },
                {
                    "valueName": "create_mesh_sphere.radius",
                    "valueType": "float",
                    "value": "3f"
                },
                {
                    "valueName": "create_mesh_sphere.height_segments",
                    "valueType": "int",
                    "value": "20L"
                },
                {
                    "valueName": "create_mesh_sphere.axis_segments",
                    "valueType": "int",
                    "value": "20L"
                },
                {
                    "valueName": "create_mesh_sphere.position",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "0f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "create_mesh_sphere.up_axis",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "1f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "create_mesh_sphere.base_to_pivot",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "compute_on_frame.frame_to_pull_on",
                    "valueType": "int",
                    "value": "1L"
                },
                {
                    "valueName": "compute_on_frame1.frame_to_pull_on",
                    "valueType": "int",
                    "value": "1L"
                },
                {
                    "valueName": "value.value",
                    "valueType": "int",
                    "value": "1L"
                }
            ],
            "reservedNodeNames": [
                {
                    "name": "output1"
                },
                {
                    "name": "input"
                }
            ]
        }
    ]
}