{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///riv_types.json"
        },
        {
            "uri": "file:///bifrost_object_i.json"
        },
        {
            "uri": "file:///point_types.json"
        },
        {
            "uri": "file:///FCurve.json"
        },
        {
            "uri": "file:///riv_ops.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///Math_quaternion_to_matrix.json"
        },
        {
            "uri": "file:///Math_compose_transform_matrix.json"
        },
        {
            "uri": "file:///bifrost_geometry_query_types.json"
        },
        {
            "uri": "file:///geometry_types.json"
        },
        {
            "uri": "file:///set_property_any.json"
        },
        {
            "uri": "file:///set_property.json"
        },
        {
            "uri": "file:///has_property.json"
        },
        {
            "uri": "file:///get_property_any.json"
        },
        {
            "uri": "file:///get_property.json"
        },
        {
            "uri": "file:///get_property_keys.json"
        },
        {
            "uri": "file:///is_empty.json"
        },
        {
            "uri": "file:///materials.json"
        },
        {
            "uri": "file:///set_strands_shape.json"
        },
        {
            "uri": "file:///Math_array.json"
        },
        {
            "uri": "file:///create_object_from_schema.json"
        },
        {
            "uri": "file:///set_sub_object_property.json"
        },
        {
            "uri": "file:///validate_strands.json"
        },
        {
            "uri": "file:///construct_strands.json"
        },
        {
            "uri": "file:///Math_multiply_quaternions.json"
        },
        {
            "uri": "file:///Math_euler_to_quaternion.json"
        },
        {
            "uri": "file:///Math_degrees_to_radians.json"
        },
        {
            "uri": "file:///Math_rotate_by_quaternion.json"
        },
        {
            "uri": "file:///create_volume_geo_prop.json"
        },
        {
            "uri": "file:///is_a.json"
        },
        {
            "uri": "file:///is_a_mesh.json"
        },
        {
            "uri": "file:///is_a_strands.json"
        },
        {
            "uri": "file:///is_a_points.json"
        },
        {
            "uri": "file:///is_a_volume.json"
        },
        {
            "uri": "file:///get_geo_schema_type.json"
        },
        {
            "uri": "file:///switch_is_a.json"
        },
        {
            "uri": "file:///get_target_component.json"
        },
        {
            "uri": "file:///create_data_geo_prop.json"
        },
        {
            "uri": "file:///get_geo_component_count.json"
        },
        {
            "uri": "file:///set_geo_property.array.json"
        },
        {
            "uri": "file:///set_geo_property.scalar.json"
        },
        {
            "uri": "file:///CoreArrayOps.json"
        },
        {
            "uri": "file:///get_geo_property.json"
        },
        {
            "uri": "file:///Core_Constants_default_value.json"
        },
        {
            "uri": "file:///int_filter.json"
        },
        {
            "uri": "file:///get_array_indices.json"
        },
        {
            "uri": "file:///get_strands_structure.json"
        },
        {
            "uri": "file:///access_offset_array.json"
        },
        {
            "uri": "file:///get_geo_property_check.json"
        },
        {
            "uri": "file:///update_point_strand_index.json"
        },
        {
            "uri": "file:///check_point_strand_index.json"
        },
        {
            "uri": "file:///update_strands_ratio.json"
        },
        {
            "uri": "file:///check_point_ratio.json"
        },
        {
            "uri": "file:///set_strands_size_profile.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///Math_matrix_to_quaternion.json"
        },
        {
            "uri": "file:///set_point_orientation.json"
        },
        {
            "uri": "file:///set_point_scale.json"
        },
        {
            "uri": "file:///add_points_to_points.json"
        },
        {
            "uri": "file:///validate_points.json"
        },
        {
            "uri": "file:///construct_points.json"
        },
        {
            "uri": "file:///instances.json"
        },
        {
            "uri": "file:///set_point_tangent.json"
        },
        {
            "uri": "file:///Core_Array_array_is_empty.json"
        },
        {
            "uri": "file:///get_geo_target_count.json"
        },
        {
            "uri": "file:///Math_vector4_to_vector3.json"
        },
        {
            "uri": "file:///volume_types.json"
        },
        {
            "uri": "file:///volume_nodedefs.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_vector.json"
        },
        {
            "uri": "file:///standard_surface_mat.json"
        },
        {
            "uri": "file:///assign_diagnostic_material.json"
        },
        {
            "uri": "file:///object_terminal.json"
        },
        {
            "uri": "file:///transform_scope.json"
        },
        {
            "uri": "file:///Math_length_squared.json"
        },
        {
            "uri": "file:///normal_and_tangent_to_orientation.json"
        },
        {
            "uri": "file:///cumulative_sum_array.json"
        },
        {
            "uri": "file:///int_array_filter.json"
        },
        {
            "uri": "file:///set_geo_property_data.json"
        },
        {
            "uri": "file:///set_point_position.json"
        },
        {
            "uri": "file:///create_strands_from_counts.json"
        },
        {
            "uri": "file:///twice_of.json"
        },
        {
            "uri": "file:///Math_constants.json"
        },
        {
            "uri": "file:///half_of.json"
        },
        {
            "uri": "file:///Math_change_range.json"
        },
        {
            "uri": "file:///change_range.json"
        },
        {
            "uri": "file:///Arnold_enums.json"
        },
        {
            "uri": "file:///CoreStringOps.json"
        },
        {
            "uri": "file:///erase_property.json"
        },
        {
            "uri": "file:///set_Arnold_parameter.json"
        },
        {
            "uri": "file:///Arnold_ray_types.json"
        },
        {
            "uri": "file:///Arnold_ray_bitmask.json"
        },
        {
            "uri": "file:///validate_mesh.json"
        },
        {
            "uri": "file:///set_Arnold_geo_settings.json"
        },
        {
            "uri": "file:///set_Arnold_strands_settings.json"
        },
        {
            "uri": "file:///increment_decrement.json"
        },
        {
            "uri": "file:///create_arrow_strands.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "MJCG::Graphs::aim_constraint",
            "uriImported": "file:///__duplicateCompoundURIHelper__",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "-926.394 373.498"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "up_vector"
                                                },
                                                {
                                                    "metaName": "start"
                                                },
                                                {
                                                    "metaName": "end"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1223.53 408.553"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "strands"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "backdrop",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d4848"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Generation a quaterion from two directions. We subtract the end vector for the start for the tangent, and the up-vector from the start for the normal.\nprioritize_normal is disable to have the quaternion tightly oriented to the end vector."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "-493.126 -183.333 1328.83 581.327"
                        }
                    ]
                },
                {
                    "metaName": "backdrop1",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#496d39"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "Diagnostic nodes to view the matrix and the vectors."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "904.226 36.257 562.498 654.915"
                        }
                    ]
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Math,normalize"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Modeling::Strands,create_arrow_strands"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Math,normal_and_tangent_to_orientation"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,MJCG::Core::Math,quaternion_from_direction_and_up_vector"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,MJCG::Diagnostic::Display,matrix_scope"
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "-1006.02 -521.554 2535.3 1591.66"
                },
                {
                    "metaName": "compoundIsGraph",
                    "metaValue": "true"
                },
                {
                    "metaName": "author",
                    "metaType": "string",
                    "metaValue": "Maxime Jeanmougin"
                },
                {
                    "metaName": "category",
                    "metaType": "string",
                    "metaValue": "MJCG"
                },
                {
                    "metaName": "description",
                    "metaType": "string",
                    "metaValue": "Calculate a quaternion aiming at a point in space."
                },
                {
                    "metaName": "example_scene",
                    "metaType": "string",
                    "metaValue": "aim_constraint_example.ma"
                },
                {
                    "metaName": "thumbnail",
                    "metaType": "string",
                    "metaValue": "aim_constraint_thumb.png"
                }
            ],
            "ports": [
                {
                    "portName": "up_vector",
                    "portDirection": "input",
                    "portType": "Math::float3",
                    "portDefault": {
                        "x": "-1.21893084f",
                        "y": "3.94398546f",
                        "z": "-1.83655417f"
                    }
                },
                {
                    "portName": "start",
                    "portDirection": "input",
                    "portType": "Math::float3",
                    "portDefault": {
                        "x": "0f",
                        "y": "3.36848116f",
                        "z": "0f"
                    }
                },
                {
                    "portName": "end",
                    "portDirection": "input",
                    "portType": "Math::float3",
                    "portDefault": {
                        "x": "1.90804505f",
                        "y": "5.65379381f",
                        "z": "1.63436067f"
                    }
                },
                {
                    "portName": "strands",
                    "portDirection": "output",
                    "portType": "Amino::Object"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "subtract1",
                    "nodeType": "Core::Math::subtract",
                    "multiInPortNames": [
                        "end",
                        "start"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-459.072 118.197"
                        }
                    ]
                },
                {
                    "nodeName": "SRT_to_matrix",
                    "nodeType": "Core::Math::SRT_to_matrix",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "535.399 96.7174"
                        }
                    ]
                },
                {
                    "nodeName": "transform_scope",
                    "nodeType": "MJCG::Diagnostic::Display::transform_scope",
                    "fanInPortNames": {
                        "transform": [
                            "transform",
                            "transform1"
                        ]
                    },
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "967.859 101.168"
                        }
                    ]
                },
                {
                    "nodeName": "normal_and_tangent_to_orientation",
                    "nodeType": "Core::Math::normal_and_tangent_to_orientation",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "230.869 -3.77165"
                        }
                    ]
                },
                {
                    "nodeName": "create_arrow_strands",
                    "nodeType": "Modeling::Strands::create_arrow_strands",
                    "fanInPortNames": {
                        "start_positions": [
                            "vector1",
                            "start"
                        ],
                        "end_positions": [
                            "vector2",
                            "up_vector"
                        ]
                    },
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "981.181 365.953"
                        }
                    ]
                },
                {
                    "nodeName": "subtract2",
                    "nodeType": "Core::Math::subtract",
                    "multiInPortNames": [
                        "up_vector",
                        "start"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-456.067 -112.953"
                        }
                    ]
                },
                {
                    "nodeName": "normalize",
                    "nodeType": "Core::Math::normalize",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-185.481 122.996"
                        }
                    ]
                },
                {
                    "nodeName": "normalize1",
                    "nodeType": "Core::Math::normalize",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-177.711 -74.8299"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": ".start",
                    "target": "SRT_to_matrix.translation"
                },
                {
                    "source": "normal_and_tangent_to_orientation.quaternion",
                    "target": "SRT_to_matrix.quaternion"
                },
                {
                    "source": ".start",
                    "target": "create_arrow_strands.start_positions.vector1"
                },
                {
                    "source": ".end",
                    "target": "create_arrow_strands.end_positions.vector2"
                },
                {
                    "source": "create_arrow_strands.strands",
                    "target": ".strands"
                },
                {
                    "source": ".start",
                    "target": "create_arrow_strands.start_positions.start"
                },
                {
                    "source": ".up_vector",
                    "target": "create_arrow_strands.end_positions.up_vector"
                },
                {
                    "source": ".end",
                    "target": "subtract1.first.end"
                },
                {
                    "source": ".start",
                    "target": "subtract1.first.start"
                },
                {
                    "source": ".up_vector",
                    "target": "subtract2.first.up_vector"
                },
                {
                    "source": ".start",
                    "target": "subtract2.first.start"
                },
                {
                    "source": "subtract1.output",
                    "target": "normalize.value"
                },
                {
                    "source": "normalize.normalized",
                    "target": "normal_and_tangent_to_orientation.tangent"
                },
                {
                    "source": "subtract2.output",
                    "target": "normalize1.value"
                },
                {
                    "source": "normalize1.normalized",
                    "target": "normal_and_tangent_to_orientation.normal"
                },
                {
                    "source": "SRT_to_matrix.transform",
                    "target": "transform_scope.transform.transform1"
                }
            ],
            "values": [
                {
                    "valueName": "SRT_to_matrix.scale",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "1f",
                        "y": "1f",
                        "z": "1f"
                    }
                },
                {
                    "valueName": "normal_and_tangent_to_orientation.prioritize_normal",
                    "valueType": "bool",
                    "value": "false"
                }
            ],
            "reservedNodeNames": [
                {
                    "name": "input"
                },
                {
                    "name": "output"
                }
            ]
        }
    ]
}
