{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///bifrost_object_i.json"
        },
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///bifrost_geometry_query_types.json"
        },
        {
            "uri": "file:///geometry_types.json"
        },
        {
            "uri": "file:///has_property.json"
        },
        {
            "uri": "file:///get_property_any.json"
        },
        {
            "uri": "file:///get_property.json"
        },
        {
            "uri": "file:///create_volume_geo_prop.json"
        },
        {
            "uri": "file:///is_a.json"
        },
        {
            "uri": "file:///create_object_from_schema.json"
        },
        {
            "uri": "file:///is_a_mesh.json"
        },
        {
            "uri": "file:///is_a_strands.json"
        },
        {
            "uri": "file:///is_a_points.json"
        },
        {
            "uri": "file:///is_a_volume.json"
        },
        {
            "uri": "file:///get_geo_schema_type.json"
        },
        {
            "uri": "file:///switch_is_a.json"
        },
        {
            "uri": "file:///get_target_component.json"
        },
        {
            "uri": "file:///create_data_geo_prop.json"
        },
        {
            "uri": "file:///set_property_any.json"
        },
        {
            "uri": "file:///set_property.json"
        },
        {
            "uri": "file:///get_geo_component_count.json"
        },
        {
            "uri": "file:///set_geo_property.array.json"
        },
        {
            "uri": "file:///set_geo_property.scalar.json"
        },
        {
            "uri": "file:///update_mesh_adjacency.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///riv_types.json"
        },
        {
            "uri": "file:///point_types.json"
        },
        {
            "uri": "file:///FCurve.json"
        },
        {
            "uri": "file:///riv_ops.json"
        },
        {
            "uri": "file:///access_offset_array.json"
        },
        {
            "uri": "file:///Core_Array_sum_array_impl.json"
        },
        {
            "uri": "file:///Core_Array_sum_array.json"
        },
        {
            "uri": "file:///increment_decrement.json"
        },
        {
            "uri": "file:///half_of.json"
        },
        {
            "uri": "file:///one_minus.json"
        },
        {
            "uri": "file:///get_sub_object.json"
        },
        {
            "uri": "file:///get_point_count.json"
        },
        {
            "uri": "file:///Core_Array_array_is_empty.json"
        },
        {
            "uri": "file:///get_geo_target_count.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///Math_vector4_to_vector3.json"
        },
        {
            "uri": "file:///get_geo_property_check.json"
        },
        {
            "uri": "file:///volume_types.json"
        },
        {
            "uri": "file:///volume_nodedefs.json"
        },
        {
            "uri": "file:///interpret_auto_port_as_vector.json"
        },
        {
            "uri": "file:///get_property_keys.json"
        },
        {
            "uri": "file:///is_empty.json"
        },
        {
            "uri": "file:///materials.json"
        },
        {
            "uri": "file:///standard_surface_mat.json"
        },
        {
            "uri": "file:///assign_diagnostic_material.json"
        },
        {
            "uri": "file:///CoreArrayOps.json"
        },
        {
            "uri": "file:///get_geo_property.json"
        },
        {
            "uri": "file:///object_terminal.json"
        },
        {
            "uri": "file:///get_mesh_structure.json"
        },
        {
            "uri": "file:///erase_property.json"
        },
        {
            "uri": "file:///update_mesh_curvature.json"
        },
        {
            "uri": "file:///set_sub_object_property.json"
        },
        {
            "uri": "file:///validate_mesh.json"
        },
        {
            "uri": "file:///construct_mesh.json"
        },
        {
            "uri": "file:///Math_vector3_to_vector4.json"
        },
        {
            "uri": "file:///Math_quaternion_to_matrix.json"
        },
        {
            "uri": "file:///Math_compose_transform_matrix.json"
        },
        {
            "uri": "file:///Math_array.json"
        },
        {
            "uri": "file:///Core_Array_slice_array.json"
        },
        {
            "uri": "file:///Core_Array_reverse_array.json"
        },
        {
            "uri": "file:///fluids_types.json"
        },
        {
            "uri": "file:///fluids_nodedefs.json"
        },
        {
            "uri": "file:///CoreStringOps.json"
        },
        {
            "uri": "file:///string_to_array.json"
        },
        {
            "uri": "file:///Math_axis_angle_to_quaternion.json"
        },
        {
            "uri": "file:///Math_length_squared.json"
        },
        {
            "uri": "file:///Math_almost_equal.json"
        },
        {
            "uri": "file:///rotation_between_vectors.json"
        },
        {
            "uri": "file:///Math_multiply_quaternions.json"
        },
        {
            "uri": "file:///Math_rotate_by_quaternion.json"
        },
        {
            "uri": "file:///create_mesh_cube.json"
        },
        {
            "uri": "file:///converters_types.json"
        },
        {
            "uri": "file:///convert_auto_resolution_mode.json"
        },
        {
            "uri": "file:///Math_constants.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds_impl.json"
        },
        {
            "uri": "file:///Core_Array_array_bounds.json"
        },
        {
            "uri": "file:///get_position_property.json"
        },
        {
            "uri": "file:///compute_voxel_scale.json"
        },
        {
            "uri": "file:///converters_nodedefs.json"
        },
        {
            "uri": "file:///post_process_level_set.json"
        },
        {
            "uri": "file:///set_geo_property_data.json"
        },
        {
            "uri": "file:///compute_fog_density.json"
        },
        {
            "uri": "file:///delete_level_set.json"
        },
        {
            "uri": "file:///if_compute_volume.json"
        },
        {
            "uri": "file:///setup_resolution_fields.json"
        },
        {
            "uri": "file:///mesh_to_volume.json"
        },
        {
            "uri": "file:///points_to_volume.json"
        },
        {
            "uri": "file:///convert_to_volume_internal.json"
        },
        {
            "uri": "file:///convert_to_volume.json"
        },
        {
            "uri": "file:///mesh_nodedefs.json"
        },
        {
            "uri": "file:///switch_adaptivity.json"
        },
        {
            "uri": "file:///get_detail_size.json"
        },
        {
            "uri": "file:///sample_volume_property.json"
        },
        {
            "uri": "file:///sample_volume_property_type.json"
        },
        {
            "uri": "file:///get_point_position.json"
        },
        {
            "uri": "file:///sample_volume_properties.json"
        },
        {
            "uri": "file:///volume_to_mesh.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "MJCG::Graphs::mesh_curvature",
            "uriImported": "stream:/bifrostGraphShape1",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "991.083 689.783"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "io_ports"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "1251.08 697.373"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Iterators,do_while"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Modeling::Primitive,create_mesh_plane"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Array,first_in_array"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Geometry::Converters,volume_to_mesh"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Modeling::Converters,convert_to_volume"
                },
                {
                    "metaName": "backdrop3",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "801.447 256.117 766.301 405.292"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#2e4a6d"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "convert the cube to a volume, remesh it. Get the first object since we don't want the array."
                        }
                    ]
                },
                {
                    "metaName": "backdrop4",
                    "metadata": [
                        {
                            "metaName": "type",
                            "metaType": "string",
                            "metaValue": "backdrop"
                        },
                        {
                            "metaName": "color",
                            "metaType": "string",
                            "metaValue": "#6d3e49"
                        },
                        {
                            "metaName": "text",
                            "metaType": "string",
                            "metaValue": "update the mesh's point curvature."
                        },
                        {
                            "metaName": "coords",
                            "metaType": "string",
                            "metaValue": "1615.2 273.983 327.472 333.234"
                        }
                    ]
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "154.359 231.865 3122.29 472.628"
                },
                {
                    "metaName": "compoundIsGraph",
                    "metaValue": "true"
                },
                {
                    "metaName": "author",
                    "metaType": "string",
                    "metaValue": "Maxime Jeanmougin"
                },
                {
                    "metaName": "category",
                    "metaType": "string",
                    "metaValue": "MJCG"
                },
                {
                    "metaName": "description",
                    "metaType": "string",
                    "metaValue": "Generates curvature on a smoothed cube."
                },
                {
                    "metaName": "thumbnail",
                    "metaType": "string",
                    "metaValue": "mesh_curvature_thumb.png"
                }
            ],
            "ports": [],
            "compoundNodes": [
                {
                    "nodeName": "update_mesh_curvature",
                    "nodeType": "MJCG::Geometry::Mesh::update_mesh_curvature",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1674.43 323.254"
                        }
                    ]
                },
                {
                    "nodeName": "create_mesh_cube",
                    "nodeType": "Modeling::Primitive::create_mesh_cube",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "537.553 334.239"
                        }
                    ]
                },
                {
                    "nodeName": "convert_to_volume",
                    "nodeType": "Modeling::Converters::convert_to_volume",
                    "fanInPortNames": {
                        "geometry": [
                            "cube_mesh"
                        ],
                        "base_resolution": [],
                        "half_resolution": [],
                        "quarter_resolution": [],
                        "eighth_resolution": []
                    },
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "823.728 313.35"
                        }
                    ]
                },
                {
                    "nodeName": "volume_to_mesh",
                    "nodeType": "Geometry::Converters::volume_to_mesh",
                    "fanInPortNames": {
                        "volumes": [
                            "volume"
                        ]
                    },
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1060.98 310.911"
                        }
                    ]
                },
                {
                    "nodeName": "first_in_array",
                    "nodeType": "Core::Array::first_in_array",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1312.02 332.438"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "create_mesh_cube.cube_mesh",
                    "target": "convert_to_volume.geometry.cube_mesh"
                },
                {
                    "source": "convert_to_volume.volume",
                    "target": "volume_to_mesh.volumes.volume"
                },
                {
                    "source": "volume_to_mesh.meshes",
                    "target": "first_in_array.array"
                },
                {
                    "source": "first_in_array.first",
                    "target": "update_mesh_curvature.mesh"
                }
            ],
            "values": [
                {
                    "valueName": "convert_to_volume.volume_mode",
                    "valueType": "Geometry::Converters::VolumeMode",
                    "value": "Solid"
                },
                {
                    "valueName": "convert_to_volume.store_level_set",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "convert_to_volume.store_fog_density",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "convert_to_volume.resolution_mode",
                    "valueType": "Geometry::Volume::AutoResolutionType",
                    "value": "Relative"
                },
                {
                    "valueName": "convert_to_volume.detail_size",
                    "valueType": "float",
                    "value": "0.0199999996f"
                },
                {
                    "valueName": "convert_to_volume.bandwidth",
                    "valueType": "float",
                    "value": "0f"
                },
                {
                    "valueName": "convert_to_volume.volume_subdivision_structure",
                    "valueType": "Geometry::Volume::AutoSubdivisionStructure",
                    "value": "Automatic"
                },
                {
                    "valueName": "convert_to_volume.adaptivity",
                    "valueType": "Geometry::Volume::Adaptivity",
                    "value": "Optimized"
                },
                {
                    "valueName": "volume_to_mesh.mesh_mode",
                    "valueType": "Geometry::Converters::MeshMode",
                    "value": "Automatic"
                },
                {
                    "valueName": "volume_to_mesh.custom_interior_mode",
                    "valueType": "Geometry::Converters::Interior",
                    "value": "Greater"
                },
                {
                    "valueName": "volume_to_mesh.detail_size_scale",
                    "valueType": "float",
                    "value": "2f"
                },
                {
                    "valueName": "volume_to_mesh.adaptivity",
                    "valueType": "Geometry::Common::Adaptivity",
                    "value": "Off"
                },
                {
                    "valueName": "volume_to_mesh.smoothing",
                    "valueType": "float",
                    "value": "0f"
                }
            ],
            "reservedNodeNames": [
                {
                    "name": "input"
                },
                {
                    "name": "output"
                }
            ]
        }
    ]
}
